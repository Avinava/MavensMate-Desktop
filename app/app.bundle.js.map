{"version":3,"sources":["webpack:///app.bundle.js","webpack:///webpack/bootstrap b9f821395b6cac74b895","webpack:///./src/electron/main.js","webpack:///external \"bluebird\"","webpack:///external \"inherits\"","webpack:///../mavensmate/app/lib/util.js","webpack:///external \"winston\"","webpack:///../mavensmate/app/lib/command.js","webpack:///external \"path\"","webpack:///external \"lodash\"","webpack:///../mavensmate/app/config/index.js","webpack:///../mavensmate/app/lib/services/editor.js","webpack:///external \"fs-extra\"","webpack:///../mavensmate/app/lib/file.js","webpack:///external \"express\"","webpack:///../mavensmate/app/lib/request-store.js","webpack:///external \"require('electron')\"","webpack:///../mavensmate/app/lib/metadata.js","webpack:///../mavensmate/app/lib/services/lightning.js","webpack:///../mavensmate/app/lib/sfdc-client.js","webpack:///../mavensmate/app/lib/services/deploy.js","webpack:///external \"temp\"","webpack:///../mavensmate/app/lib/package.js","webpack:///external \"moment\"","webpack:///external \"querystring\"","webpack:///../mavensmate/app/lib/refresh.js","webpack:///../mavensmate/app/lib/services/org-connection.js","webpack:///external \"events\"","webpack:///external \"fs-extra-promise\"","webpack:///external \"os\"","webpack:///external \"swig\"","webpack:///../mavensmate/app/lib/commands/index.js","webpack:///../mavensmate/app/lib/project.js","webpack:///external \"fs\"","webpack:///../mavensmate/app/lib/services/checkpoint.js","webpack:///../mavensmate/app/lib/services/index.js","webpack:///../mavensmate/app/lib/services/test.js","webpack:///external \"node-uuid\"","webpack:///../mavensmate/app/config/default.js","webpack:///../mavensmate/app/helper.js","webpack:///../mavensmate/app/lib/commands/apex-script/new-apex-script.js","webpack:///../mavensmate/app/lib/commands/apex-script/run-apex-script.js","webpack:///../mavensmate/app/lib/commands/debug/delete-checkpoint.js","webpack:///../mavensmate/app/lib/commands/debug/download-log.js","webpack:///../mavensmate/app/lib/commands/debug/execute-apex.js","webpack:///../mavensmate/app/lib/commands/debug/flush-logs.js","webpack:///../mavensmate/app/lib/commands/debug/list-checkpoints.js","webpack:///../mavensmate/app/lib/commands/debug/new-checkpoint.js","webpack:///../mavensmate/app/lib/commands/debug/start-logging.js","webpack:///../mavensmate/app/lib/commands/debug/stop-logging.js","webpack:///../mavensmate/app/lib/commands/deploy/delete-connection.js","webpack:///../mavensmate/app/lib/commands/deploy/deploy.js","webpack:///../mavensmate/app/lib/commands/deploy/get-connections.js","webpack:///../mavensmate/app/lib/commands/deploy/new-connection.js","webpack:///../mavensmate/app/lib/commands/deploy/update-connection.js","webpack:///../mavensmate/app/lib/commands/lightning/new-lightning-app.js","webpack:///../mavensmate/app/lib/commands/lightning/new-lightning-component.js","webpack:///../mavensmate/app/lib/commands/lightning/new-lightning-event.js","webpack:///../mavensmate/app/lib/commands/lightning/new-lightning-interface.js","webpack:///../mavensmate/app/lib/commands/metadata/compile-metadata.js","webpack:///../mavensmate/app/lib/commands/metadata/delete-metadata.js","webpack:///../mavensmate/app/lib/commands/metadata/new-metadata.js","webpack:///../mavensmate/app/lib/commands/metadata/open-metadata.js","webpack:///../mavensmate/app/lib/commands/metadata/refresh-metadata.js","webpack:///../mavensmate/app/lib/commands/metadata/sync-with-server.js","webpack:///../mavensmate/app/lib/commands/misc/execute-soql.js","webpack:///../mavensmate/app/lib/commands/misc/get-setting.js","webpack:///../mavensmate/app/lib/commands/misc/index-apex-class.js","webpack:///../mavensmate/app/lib/commands/misc/index-apex.js","webpack:///../mavensmate/app/lib/commands/misc/list-metadata.js","webpack:///../mavensmate/app/lib/commands/misc/open-settings.js","webpack:///../mavensmate/app/lib/commands/misc/open-sfdc.js","webpack:///../mavensmate/app/lib/commands/misc/open-ui.js","webpack:///../mavensmate/app/lib/commands/misc/session.js","webpack:///../mavensmate/app/lib/commands/project/clean-project.js","webpack:///../mavensmate/app/lib/commands/project/compile-project.js","webpack:///../mavensmate/app/lib/commands/project/edit-project.js","webpack:///../mavensmate/app/lib/commands/project/get-metadata-index-for-package.js","webpack:///../mavensmate/app/lib/commands/project/get-metadata-index.js","webpack:///../mavensmate/app/lib/commands/project/index-metadata.js","webpack:///../mavensmate/app/lib/commands/project/list-projects.js","webpack:///../mavensmate/app/lib/commands/project/new-project-from-existing-directory.js","webpack:///../mavensmate/app/lib/commands/project/new-project.js","webpack:///../mavensmate/app/lib/commands/project/oauth-project.js","webpack:///../mavensmate/app/lib/commands/project/open-project.js","webpack:///../mavensmate/app/lib/commands/project/search-metadata-index.js","webpack:///../mavensmate/app/lib/commands/project/update-creds.js","webpack:///../mavensmate/app/lib/commands/project/update-subscription.js","webpack:///../mavensmate/app/lib/commands/resource-bundle/deploy-resource-bundle.js","webpack:///../mavensmate/app/lib/commands/resource-bundle/new-resource-bundle.js","webpack:///../mavensmate/app/lib/commands/unit-test/get-coverage.js","webpack:///../mavensmate/app/lib/commands/unit-test/run-test-method.js","webpack:///../mavensmate/app/lib/commands/unit-test/run-tests.js","webpack:///../mavensmate/app/lib/services/apex-script.js","webpack:///../mavensmate/app/lib/services/keychain.js","webpack:///../mavensmate/app/lib/services/log.js","webpack:///../mavensmate/app/lib/services/resource-bundle.js","webpack:///../mavensmate/app/lib/services/template.js","webpack:///../mavensmate/app/lib/utilities/camelize.js","webpack:///external \"child_process\"","webpack:///external \"findit\"","webpack:///external \"merge\"","webpack:///external \"request\"","webpack:///external \"which\"","webpack:///./src/electron/lib/updater/index.js","webpack:///./src/electron/lib/updater/util.js","webpack:///../mavensmate/app/index.js","webpack:///../mavensmate/app/lib/logger.js","webpack:///../mavensmate/app/lib/mavensmate.js","webpack:///../mavensmate/app/lib/services/compile.js","webpack:///../mavensmate/app/lib/services/delete.js","webpack:///../mavensmate/app/lib/services/symbol.js","webpack:///../mavensmate/app/lib/sync.js","webpack:///../mavensmate/app/lib/utilities/capitalize.js","webpack:///../mavensmate/app/lib/utilities/normalize-object.js","webpack:///../mavensmate/app/middleware/cors.js","webpack:///../mavensmate/app/middleware/editor.js","webpack:///../mavensmate/app/middleware/logging.js","webpack:///../mavensmate/app/middleware/project.js","webpack:///../mavensmate/app/middleware/swig.js","webpack:///../mavensmate/app/routes/apex.js","webpack:///../mavensmate/app/routes/auth.js","webpack:///../mavensmate/app/routes/connections.js","webpack:///../mavensmate/app/routes/deploy.js","webpack:///../mavensmate/app/routes/execute.js","webpack:///../mavensmate/app/routes/home.js","webpack:///../mavensmate/app/routes/index.js","webpack:///../mavensmate/app/routes/lightning.js","webpack:///../mavensmate/app/routes/logs.js","webpack:///../mavensmate/app/routes/metadata.js","webpack:///../mavensmate/app/routes/project.js","webpack:///../mavensmate/app/routes/settings.js","webpack:///../mavensmate/app/routes/status.js","webpack:///../mavensmate/app/routes/test.js","webpack:///../mavensmate/app/lib/commands ^\\.\\/.*$","webpack:///external \"archiver\"","webpack:///external \"auto-launch\"","webpack:///external \"body-parser\"","webpack:///external \"electron-squirrel-startup\"","webpack:///external \"fstream\"","webpack:///external \"jsforce\"","webpack:///external \"keytar\"","webpack:///external \"nconf\"","webpack:///external \"nslog\"","webpack:///external \"open\"","webpack:///external \"sax\"","webpack:///external \"socket.io\"","webpack:///external \"stream\"","webpack:///external \"strip-json-comments\"","webpack:///external \"xml2js\"","webpack:///external \"xmldoc\""],"names":["modules","__webpack_require__","moduleId","installedModules","exports","module","id","loaded","call","m","c","p","__dirname","electron","app","quit","Promise","Tray","path","Menu","BrowserWindow","shell","mavensmate","ipc","ipcMain","AppUpdater","AutoLaunch","mainWindow","mavensMateApp","mavensMateServer","mavensMateConfig","mavensMateLogger","openUrlInNewTab","getStartupPath","process","platform","join","getAppPath","attachAppMenu","name","isHidden","getApplicationMenu","template","label","submenu","getVersion","type","accelerator","selector","click","attachMainWindow","item","focusedWindow","webContents","send","openExternal","getFocusedWindow","close","menu","buildFromTemplate","setApplicationMenu","onClosed","restartServer","url","resolve","reject","console","log","waitFor","then","indexOf","show","err","error","width","height","minWidth","minHeight","icon","loadURL","on","stop","startServer","port","openWindowFn","mode","ipcRenderer","res","server","config","logger","e","message","require","spawn","fs","_","os","stripJson","fstream","archiver","which","camelize","platformHash","darwin","linux","win32","platformConfigKey","getAppRoot","isCredentialsError","getProjectById","projects","get","find","settings","getDefaultWorkspaceSetting","this","isMac","env","HOME","isWindows","isLinux","endsWith","string","suffix","toLowerCase","length","startsWith","prefix","substring","getWindowsAppDataPath","APPDATA","isValidProjectPath","projectPath","existsSync","getHomeDirectory","removeEmptyDirectoriesRecursiveSync","directory","silly","removeEmptyDirs","dir","files","readdirSync","removeSync","i","filePath","stats","statSync","isDirectory","emptyDirectoryRecursiveSync","emptyDir","fileBasename","isFile","unlinkSync","getAbsolutePaths","paths","resolvedPaths","each","normalize","replace","RegExp","sep","push","isDirectoryEmptySync","searchPath","stat","items","visibleItems","walkSync","walk","_walk","fn","fns","_i","_len","_results","flatten","listDirectories","contents","directories","readStdin","myJson","stdin","setEncoding","chunk","read","jsonObject","JSON","parse","forOwn","value","key","getPayload","self","Error","applyProperties","instance","opts","getFileBody","parseJSON","fileBody","readFileSync","joinForQuery","strings","zipDirectory","directoryToZip","zipFileDestination","dest","ext","filename","undefined","cwd","chdir","output","createWriteStream","archive","pipe","bulk","src","finalize","writeStream","readableStream","destination","tmpZipLocation","debug","Writer","removeAsync","unzipCommand","stdio","cscriptExe","sync","arch","stderr","data","code","chunkArray","arr","chunkSize","concat","apply","map","elem","slice","generateRandomString","chars","randomNumber","Math","floor","random","MetadataHelper","BaseCommand","args","setProject","payload","editorService","metadataHelper","prototype","setId","_id","getId","project","_project","getProject","isUICommand","ui","_monitor","unwatchFile","watchFile","_reload","remove","_init","argv","defaults","userSettingsPath","util","defaultSettings","settingValue","settingKey","outputJsonSync","spaces","file","add","store","mmApiVersion","set","http_proxy","https_proxy","open","querystring","EditorService","editor","supportedEditors","_getSupportedEditors","_isSupportedEditor","pathAtomLocation","pathSublLocation","pathVsCodeLocation","editors","atomLocationConfig","vsCodeLocationConfig","sublLocationConfig","atomPath","sublPath","vsCodePath","atom","sublime","vscode","launchUI","appPath","urlParams","portNumber","MAVENSMATE_SERVER_PORT","stringify","MAVENSMATE_CONTEXT","exit","openUrl","browserChildProcess","detached","runCommand","commandName","editorExe","stdout","swig","TemplateService","types","TOP_LEVEL_METADATA_DIRECTORY","TOP_LEVEL_METADATA_FILE","METADATA_FOLDER","METADATA_FOLDER_ITEM","LIGHTNING_BUNDLE","LIGHTNING_BUNDLE_ITEM","Object","freeze","lightningTypes","STYLE","APPLICATION","DOCUMENTATION","COMPONENT","EVENT","INTERFACE","CONTROLLER","HELPER","RENDERER","MavensMateFile","sfdcClient","getTypeByPath","basename","extension","extname","match","split","folderName","dirname","_template","_basename","_name","_folderName","_extension","_apexTriggerObjectName","defineProperty","xmlName","classification","supportedExtensions","lbn","inFolder","inFolderTypeDirectoryNames","inFolderDirectoryNames","metaFile","isLightningType","lightningIndex","getLightningIndexSync","AuraDefinitionBundle","DeveloperName","lightningBaseName","DefType","lightningType","Id","getLocalStore","supportedTypeXmlNames","bodyField","soql","conn","query","result","records","Body","directoryFiles","f","subDirectoryFiles","sf","folderPath","folderBaseName","setTypeByXmlName","getTypeByXmlName","setAbstractPath","directoryName","_getTemplateBody","templateService","getTemplateBody","file_name","mergeTemplate","templateBody","render","locals","templateValues","done","renderAndWriteToDisk","apiName","outputFileSync","hasMetaFile","metaFilePath","metaFileBody","renderFile","metadata","apiVersion","writeToDiskSync","body","ensureDirSync","deleteLocally","existsOnFileSystem","createFileInstances","getLightningBundleItemFiles","filter","getToolingFiles","exludeToolingMetadata","isToolingType","getMetadataApiFiles","isMetaFile","createPackageSubscription","projectPackageXml","subscription","projectSubscription","packageName","uuid","events","inherits","RequestStore","EventEmitter","requests","thenable","request","requestId","v1","complete","_finish","emit","isRequestComplete","getResultForId","clone","stack","LightningBundle","describeCache","metadataObjects","describe","parentTypes","parentPath","grandparentPath","getTypeByDirectoryName","folderBasedTypes","where","directoryMatch","parentFolderDirectoryMatch","pop","typeBySuffix","getTypeBySuffix","grandparentFolderDirectoryMatch","metadataType","childTypes","childType","parentType","dirName","tagName","parentXmlName","childXmlNames","@xsi:nil","directoryNames","LightningService","getAll","tooling","createBundle","description","sobject","create","Description","MasterLabel","ApiVersion","deleteBundle","bundleId","deleteBundleItems","mavensmateFiles","getLightningIndex","deleteIds","mmf","lightningBundleName","getBundle","getBundleItems","itemIds","update","updatePayload","payloadItem","Source","updateComponent","source","createComponent","AuraDefinitionBundleId","Format","createApplication","createInterface","createDocumentation","createController","createRenderer","createHelper","createStyle","createEvent","SalesforceClient","clientId","SFDC_OAUTH_CLIENT_ID","callbackUrl","SFDC_OAUTH_CALLBACK_URL","jsforce","merge","stream","Stream","_refreshFn","callback","oauth2","_postParams","grant_type","refresh_token","refreshToken","client_id","access_token","_initWebServerRefreshHandler","accessToken","instanceUrl","instance_url","identity","userInfo","startSystemStreamingListener","_initUsernamePasswordRefreshHandler","initialize","initialized","Connection","logLevel","version","_configureJsForce","redirectUri","refreshFn","username","password","getLoginUrl","loginUrl","login","_login","getOrgType","validOrgTypes","orgType","getUserId","user_id","getUsername","getNamespace","organizationNamespace","getAccessToken","getInstanceUrl","pollTimeout","parseInt","setPollingTimeout","timeout","createApexMetadata","mavensMateFile","info","markup","TableEnumOrId","apexTriggerObjectName","compileWithToolingApi","containerId","_createContainer","memberPromises","_createMember","all","memberResults","isMemberSuccess","success","_createContainerAsyncRequest","_pollAsyncContainer","_asyncContainerRequestCompleteHandler","results","_deleteContainer","_asyncContainerRequestErrorHandler","IsCheckOnly","MetadataContainerId","IsRunTests","interval","startTime","Date","getTime","poll","now","_getAsyncRequest","State","setTimeout","fields","execute","memberName","ContentEntityId","_checkTest","_getTestResults","runTests","classIdsOrTestsPayload","postBody","numberOfTests","pollInterval","isString","classids","tests","method","headers","Content-Type","parentJobId","classResults","size","methodResults","executeApex","executeAnonymous","deploy","zipInput","retrievePackages","packageNames","r","retrieve","retrieveUnpackaged","metadataTypesOrPackage","writeToDisk","unpackagedTypes","isArray","members","retrieveRequest","unpackaged","zipStream","readable","writePromise","Buffer","zipFile","fileProperties","describeGlobal","listFolder","folder","list","manageableState","streaming","channel","subscribe","event","createdDate","startLogging","debugSettings","expiration","userIds","users","debugLevels","levels","debugLevelName","debugLevelIdsToDelete","debugLevel","destroy","deleteResult","debugLevelsToCreate","dl","Workflow","Callout","System","Database","ApexCode","ApexProfiling","Validation","Visualforce","debugLevelCreateResult","traceFlagsToCreate","userId","tf","ExpirationDate","TracedEntityId","LogType","logType","DebugLevelId","traceFlagCreateResults","executeSoql","stopLogging","traceFlagIdsToDelete","traceFlag","getServerProperties","mavensMateFiles","baseSoql","baseSoqlFilter","classes","classIds","triggers","triggerIds","pages","pageIds","components","componentIds","queries","Array","Deploy","temp","OrgConnectionService","Package","getResultHtml","targets","deployOptions","deployResult","resultHtml","html","object","getNamedDeployments","namedDeployments","savedDeployPath","compileWithMetadataApi","stage","rollbackOnError","performRetrieve","details","retrieveResult","updateLocalStore","executeRemote","orgConnectionService","deployPromises","newPath","mkdirSync","deploymentName","copySync","t","targetId","targetConnection","getById","_deployToTarget","deployResults","connectionId","keys","componentFailures","componentSuccesses","runTestResult","codeCoverageWarnings","mkdirpSync","pkg","init","writeFileSync","projectSrc","workspace","destinationDirectory","createReadStream","executeStream","metadataPath","target","deployPath","keychainService","getPassword","deployClient","deployStream","stageDelete","emptyPackage","metadataTypeXmlNames","MemberProvider","ListProvider","SharingRulesMemberProvider","SharingRulesListProvider","WorkflowListProvider","xmldoc","sax","_path","_files","_subscription","_ensureCustomObjectSubscriptionIsValid","_getSubscriptionFromFiles","obj","_getSubscriptionFromMetadataTypeXmlNames","_deserialize","CustomObject","customObjectSub","getOrgMetadataIndex","index","customObjectIndex","children","customObjectChild","fullName","sub","typeXmlName","metadataTypeXmlName","has","writeFile","xmlBody","_serialize","outputFile","subscriptionName","unsubscribe","newMembers","member","serialized","readFile","parser","isValidPackage","onerror","resume","onend","doc","XmlDocument","val","node","write","toString","trim","getMembers","getList","customObjectNames","constructor","memberProvider","SharingRules","fileProperty","retrieveResults","listResults","caseCommentWorkflows","RefreshDelegate","_refreshLocalPaths","refreshSubscription","packageXml","retrievePath","replaceLocalFiles","_retrieveAndOverwriteLightningMetadata","lightningMetadata","lightningService","KeychainService","listAll","readJson","connections","useSystemKeychain","readJsonSync","newConnection","storePassword","orgConnectionClient","writeSync","replacePassword","newConnections","_handleCommandResult","response","capitalize","commands","cmdPath","commandFiles","filepath","command","commandClassName","MAVENSMATE_EDITOR","requiresAuthentication","IndexService","SymbolService","LogService","Project","origin","orgMetadata","logService","symbolService","isNewProject","isExistingDirectory","initPromise","_initNewProjectFromExistingDirectory","_initNew","_initExisting","setDescribe","_initConfig","_writeLocalStore","_hasValidStructure","_readSettings","creds","_readCredentials","_listenForTokenUpdates","getOrgMetadataIndexWithSelections","_refreshDescribeFromServer","downloadLog","workspaceSetting","remotePath","replacePackageXml","finder","retrieveAndWriteToDisk","renameSync","projectName","namespace","writeSettings","_writeCredentials","promises","_writeDebug","_writeEditorSettings","indexLightning","refreshFromServer","clean","indexMetadata","compile","copy","edit","newPackage","localStore","getDebugSettingsSync","setLightningIndex","getDescribe","_describe","describePath","indexSymbols","apexClassName","symbolPromise","indexApexClass","indexService","indexServerProperties","keyword","ids","packageXmlPath","promise","customPackage","packageMembers","parentMetadataType","indexedType","child","select","indexedNode","grandChild","setChecked","ensureParentsAreCheckedIfNecessary","setVisibility","hasIndexedMetadata","properties","fp","attributes","fileName","createdByName","createdBy","lastModifiedByName","lastModifiedBy","namespacePrefix","mmState","warn","_updateDebug","sublimeSettings","folders","folder_exclude_patterns","auto_complete_triggers","characters","listeners","updateCredentials","environment","keychainAction","CheckpointService","createCheckpoint","lineNumber","ActionScriptType","ExecutableEntityId","IsDumpingHeap","Iteration","Line","ScopeId","deleteCheckpointsForCurrentUser","deleteCheckpoint","listCheckpoints","parseXml","parseString","_indexChildren","typeMap","childNames","childRetrievePackage","fileBasenameNoExtension","indexedChildType","xmlObject","matchingChildType","leaves","actionName","leaf","checked","level","text","title","isFolder","cls","_indexFolders","listFolderRequests","folderContents","indexedFolder","_indexType","typeListResult","hasChildTypes","isFolderType","_transformFolderNameToBaseName","metadataTypeDef","expanded","sortBy","indexPromise","typeXmlNames","listRequests","mType","typeRequestName","isFolderMetadata","_transformFolderNameForListRequest","listProvider","typePromises","metadataListResult","typeName","metadataRequestType","crawlDict","jsonData","depth","parentVisiblity","visibility","childVisibility","isObject","crawl","addClass","crawlArray","elementsToRemove","hv","jd","numberOfChildrenSelected","dpth","litem","setThirdStateChecked","numberOfPossibleChecked","numberOfChecked","ApexTest","_initialize","moment","apexClassOrTriggerIdToName","testClassNames","testNameOrPath","fullPath","testsPayload","testClassIds","testClassName","apexClassId","test","classId","testMethods","methodNames","projectClassIds","projectTriggerIds","coverageResults","testResults","logDownloadPromises","logIdsToDownload","ApexLogId","_downloadLog","ApexClass","Name","classResult","ApexClassId","skipCoverage","getCoverage","classCoverageResults","triggerCoverageResults","getOrgWideCoverage","PercentCovered","classOrTriggerIds","queryForCoverage","classOrTriggerIdChunk","rresolve","rreject","coverageObject","andTestClassIdQualifier","classOrTriggerIdsChunks","coveragePromises","coveragePromiseResults","_aggregateCoverage","testName","logId","_baseUrl","logFileName","format","coverageResultRecordSets","coverageResultRecordSet","coverageResult","classOrTriggerName","ApexClassOrTriggerId","currentValue","coveredLines","union","Coverage","uncoveredLines","apexClassOrTriggerId","difference","totalLines","percentCovered","round","parseFloat","mm_workspace","example","default","order","mm_api_version","mm_compile_check_conflicts","mm_download_categorized_test_logs","mm_timeout","mm_default_subscription","mm_ignore_managed_metadata","mm_use_keyring","mm_compile_with_tooling_api","mm_subl_location","windows","osx","mm_atom_exec_path","mm_vscode_exec_path","mm_log_location","mm_log_level","mm_play_sounds","mm_template_location","mm_template_source","mm_apex_file_extensions","mm_http_proxy","mm_https_proxy","mm_purge_on_delete","mm_legacy_compile","ViewHelper","getSupportedEditors","isMenuItemActive","resource","getPhotoUrl","photos","thumbnail","getPathBaseName","getRobotPath","getBaseUrl","getRobotNoise","noises","listProjects","workspaces","workspacePath","projectPaths","settingsPath","getStaticResourcePath","getDefaultSubscription","getWorkspaces","getMetadataObjects","doesClassOrTriggerExist","getFileLines","getCoverageCssClass","htmlize","str","getDeployMessageFileNameBaseName","isFalse","input","isTrue","Command","super_","arguments","ApexScriptService","apexScriptService","addSubCommand","program","action","scriptName","commandExecutor","alias","scriptPath","checkpointService","pid","option","parent","debugDirectory","projectDebugSettings","expirationDate","deployPayload","connectiondId","newAuraFile","newBundleId","createPromises","failures","refreshDelegate","CompileDelegate","compileDelegate","force","DeleteDelegate","deleteDelegate","retrievePackage","newFile","object_name","objectName","api_name","tempRetrievePath","unpackagedRetrievePath","mkdirsSync","createResult","newMetadataPath","mavensMateFileTypes","frontdoorUrl","openUrlPromises","urls","mmFile","retUrl","preview","bundleName","callThrough","refreshPromise","SyncDelegate","syncDelegate","className","transient","metadataTypes","setupUrl","sid","save","metadataIndex","v","newProject","sublimeProjectPath","ResourceBundleService","bundleService","bundlePath","staticResourcePath","commandPromise","global","apexClassOrTriggerPath","testMethodName","testPath","scriptPaths","scriptPromises","sp","scriptBody","systemKeychainSupported","keychain","isSystemKeychainSupported","storePasswordResult","addPassword","replacePasswordResult","canFailSilently","getPasswordResult","getLogs","projectLogsPath","logPaths","readdir","getLog","location","fileLines","matchingLines","matcher","fl","staticResourcePaths","writePromises","_write","readStream","bundlePaths","zipPromises","bp","_zip","compileSubscription","staticResourceFileName","getTemplatesForType","_getPackage","templateOrTemplateFileName","templateFileName","templateSource","templateLocation","statusCode","templatePackage","toUpperCase","window","isDev","autoUpdater","addListener","nslog","releaseNotes","releaseName","releaseDate","updateURL","_notify","setFeedURL","UPDATE_SERVER_HOST","checkForUpdates","quitAndInstall","includes","express","bodyParser","requestStore","start","use","urlencoded","extended","json","limit","viewHelper","setDefaults","runInVm","loader","loaders","engine","listen","winston","transports","Console","verbose","cli","exitOnError","prettyPrint","colorize","File","CommandExecutor","stopServer","_performCompile","compileResults","_flattenResults","checkOnly","completedDate","numFailures","numTestsRun","totalTime","ignoreWarnings","lastModifiedDate","numberComponentErrors","numberComponentsDeployed","numberComponentsTotal","numberTestErrors","numberTestsCompleted","numberTestsTotal","runTestsEnabled","startDate","status","conflicts","lightningBundleItemFiles","toolingFiles","metadataApiFiles","compilePromises","_compileGenericMetadata","_compileToolingFilesLegacy","_compileToolingFiles","_compileLightningBundleItemFiles","toolingFilesPayload","localMembers","compileResult","_checkConflicts","conflictCheckResult","hasConflict","serverPropertiesResult","metadataApiFilesPayload","serverCopyPromises","serverCopy","serverCopyResults","localStoreEntry","localLastModified","remoteLastModified","LastModifiedDate","isAfter","tempFile","openSync","fd","tempPath","local","remote","_performDelete","_deleteEmptyProjectDirectories","deleteSubscription","purgeOnDelete","_deleteLightningBundleItemFiles","lightningFiles","_getApexClassNames","classNames","symbolPromises","classNameArrays","_getSymbolsForClassNames","symbolPromiseResults","classMap","writeSymbolPromises","symbolQueryResult","_writeSymbolTable","SymbolTable","serverCopyResult","charAt","k","ret","req","next","header","isEmpty","_addProjectById","projectId","_findProjectPathById","projectPathToReturn","redirect","resourceMap","iconClassName","iconName","lightning","auth","sprite","logs","apex","home","isDesktop","appRoutePattern","sldsIconClassName","sldsIconName","sldsSprite","router","Router","post","param1","isForced","forced","params","redirect_uri","response_type","SFDC_OAUTH_RESPONSE_TYPE","display","login_hint","state","oauthUrl","loginInfo","deployDelegate","_execute","async","options","sendStatus","isAjaxRequest","xhr","io","socket","locationBasename","logLocation","logLines","lines","_getTemplates","templates","new","session","isUpdate","userSettings","load","updatedSetting","_getTestClasses","classPath","isTestRegEx","testMethodRegex","forEach","fileNameParts","testClasses","apexClassOrTriggerName","webpackContext","webpackContextResolve","./apex-script/new-apex-script","./apex-script/new-apex-script.js","./apex-script/run-apex-script","./apex-script/run-apex-script.js","./debug/delete-checkpoint","./debug/delete-checkpoint.js","./debug/download-log","./debug/download-log.js","./debug/execute-apex","./debug/execute-apex.js","./debug/flush-logs","./debug/flush-logs.js","./debug/list-checkpoints","./debug/list-checkpoints.js","./debug/new-checkpoint","./debug/new-checkpoint.js","./debug/start-logging","./debug/start-logging.js","./debug/stop-logging","./debug/stop-logging.js","./deploy/delete-connection","./deploy/delete-connection.js","./deploy/deploy","./deploy/deploy.js","./deploy/get-connections","./deploy/get-connections.js","./deploy/new-connection","./deploy/new-connection.js","./deploy/update-connection","./deploy/update-connection.js","./index","./index.js","./lightning/new-lightning-app","./lightning/new-lightning-app.js","./lightning/new-lightning-component","./lightning/new-lightning-component.js","./lightning/new-lightning-event","./lightning/new-lightning-event.js","./lightning/new-lightning-interface","./lightning/new-lightning-interface.js","./metadata/compile-metadata","./metadata/compile-metadata.js","./metadata/delete-metadata","./metadata/delete-metadata.js","./metadata/new-metadata","./metadata/new-metadata.js","./metadata/open-metadata","./metadata/open-metadata.js","./metadata/refresh-metadata","./metadata/refresh-metadata.js","./metadata/sync-with-server","./metadata/sync-with-server.js","./misc/execute-soql","./misc/execute-soql.js","./misc/get-setting","./misc/get-setting.js","./misc/index-apex","./misc/index-apex-class","./misc/index-apex-class.js","./misc/index-apex.js","./misc/list-metadata","./misc/list-metadata.js","./misc/open-settings","./misc/open-settings.js","./misc/open-sfdc","./misc/open-sfdc.js","./misc/open-ui","./misc/open-ui.js","./misc/session","./misc/session.js","./project/clean-project","./project/clean-project.js","./project/compile-project","./project/compile-project.js","./project/edit-project","./project/edit-project.js","./project/get-metadata-index","./project/get-metadata-index-for-package","./project/get-metadata-index-for-package.js","./project/get-metadata-index.js","./project/index-metadata","./project/index-metadata.js","./project/list-projects","./project/list-projects.js","./project/new-project","./project/new-project-from-existing-directory","./project/new-project-from-existing-directory.js","./project/new-project.js","./project/oauth-project","./project/oauth-project.js","./project/open-project","./project/open-project.js","./project/search-metadata-index","./project/search-metadata-index.js","./project/update-creds","./project/update-creds.js","./project/update-subscription","./project/update-subscription.js","./resource-bundle/deploy-resource-bundle","./resource-bundle/deploy-resource-bundle.js","./resource-bundle/new-resource-bundle","./resource-bundle/new-resource-bundle.js","./unit-test/get-coverage","./unit-test/get-coverage.js","./unit-test/run-test-method","./unit-test/run-test-method.js","./unit-test/run-tests","./unit-test/run-tests.js"],"mappings":"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AA,gBzIsldM,SAASxF,EAAQD,G0ItldvBC,EAAAD,QAAAyF,QAAA,8B1I4ldM,SAASxF,EAAQD,G2I5ldvBC,EAAAD,QAAAyF,QAAA,Y3IkmdM,SAASxF,EAAQD,G4IlmdvBC,EAAAD,QAAAyF,QAAA,Y5IwmdM,SAASxF,EAAQD,G6IxmdvBC,EAAAD,QAAAyF,QAAA,W7I8mdM,SAASxF,EAAQD,G8I9mdvBC,EAAAD,QAAAyF,QAAA,U9IondM,SAASxF,EAAQD,G+IpndvBC,EAAAD,QAAAyF,QAAA,U/I0ndM,SAASxF,EAAQD,GgJ1ndvBC,EAAAD,QAAAyF,QAAA,ShJgodM,SAASxF,EAAQD,GiJhodvBC,EAAAD,QAAAyF,QAAA,QjJsodM,SAASxF,EAAQD,GkJtodvBC,EAAAD,QAAAyF,QAAA,clJ4odM,SAASxF,EAAQD,GmJ5odvBC,EAAAD,QAAAyF,QAAA,WnJkpdM,SAASxF,EAAQD,GoJlpdvBC,EAAAD,QAAAyF,QAAA;EpJwpdM,SAASxF,EAAQD,GqJxpdvBC,EAAAD,QAAAyF,QAAA,WrJ8pdM,SAASxF,EAAQD,GsJ9pdvBC,EAAAD,QAAAyF,QAAA","file":"app.bundle.js","sourcesContent":["/******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\texports: {},\n/******/ \t\t\tid: moduleId,\n/******/ \t\t\tloaded: false\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.loaded = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"./app\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(0);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/* WEBPACK VAR INJECTION */(function(__dirname) {/* eslint strict: 0 */\n\t'use strict';\n\t\n\tvar electron = __webpack_require__(14);\n\tvar app = electron.app;\n\t\n\tif (__webpack_require__(136)) app.quit();\n\t\n\tvar Tray = electron.Tray;\n\tvar Promise = __webpack_require__(1);\n\tvar path = __webpack_require__(6);\n\tvar Menu = electron.Menu;\n\tvar BrowserWindow = electron.BrowserWindow;\n\tvar shell = electron.shell;\n\tvar mavensmate = __webpack_require__(106); //todo\n\tvar ipc = electron.ipcMain;\n\tvar AppUpdater = __webpack_require__(102);\n\tvar AutoLaunch = __webpack_require__(134);\n\t\n\tvar mainWindow = null;\n\tvar mavensMateApp = null;\n\tvar mavensMateServer = null;\n\tvar mavensMateConfig = null;\n\tvar mavensMateLogger = null;\n\tvar trayIcon;\n\tvar isStartAtLaunch = false;\n\tvar installPrereleases = false;\n\tvar openUrlInNewTab = null;\n\t\n\tvar getStartupPath = function getStartupPath() {\n\t  if (process.platform === 'darwin') {\n\t    return path.join(app.getAppPath(), '..', '..', '..');\n\t  } else if (process.platform === 'win32') {\n\t    return app.getAppPath();\n\t  } else {\n\t    return app.getAppPath();\n\t  }\n\t};\n\t\n\tvar appLauncher = new AutoLaunch({\n\t  name: 'MavensMate',\n\t  isHidden: true,\n\t  path: getStartupPath()\n\t});\n\t\n\t// attaches menu to application (edit, view, window, help, etc)\n\tvar attachAppMenu = function attachAppMenu() {\n\t  if (!Menu.getApplicationMenu()) {\n\t    var template;\n\t    if (process.platform == 'darwin') {\n\t      template = [{\n\t        label: 'MavensMate',\n\t        submenu: [{\n\t          label: 'MavensMate v' + app.getVersion()\n\t        }, {\n\t          type: 'separator'\n\t        }, {\n\t          label: 'Services',\n\t          submenu: []\n\t        }, {\n\t          type: 'separator'\n\t        }, {\n\t          label: 'Hide MavensMate',\n\t          accelerator: 'Command+H',\n\t          selector: 'hide:'\n\t        }, {\n\t          label: 'Hide Others',\n\t          accelerator: 'Command+Shift+H',\n\t          selector: 'hideOtherApplications:'\n\t        }, {\n\t          label: 'Show All',\n\t          selector: 'unhideAllApplications:'\n\t        }, {\n\t          type: 'separator'\n\t        }, {\n\t          label: 'Quit',\n\t          accelerator: 'Command+Q',\n\t          click: function click() {\n\t            app.quit();\n\t          }\n\t        }]\n\t      }, {\n\t        label: 'Edit',\n\t        submenu: [{\n\t          label: 'Undo',\n\t          accelerator: 'Command+Z',\n\t          selector: 'undo:'\n\t        }, {\n\t          label: 'Redo',\n\t          accelerator: 'Shift+Command+Z',\n\t          selector: 'redo:'\n\t        }, {\n\t          type: 'separator'\n\t        }, {\n\t          label: 'Cut',\n\t          accelerator: 'Command+X',\n\t          selector: 'cut:'\n\t        }, {\n\t          label: 'Copy',\n\t          accelerator: 'Command+C',\n\t          selector: 'copy:'\n\t        }, {\n\t          label: 'Paste',\n\t          accelerator: 'Command+V',\n\t          selector: 'paste:'\n\t        }, {\n\t          label: 'Select All',\n\t          accelerator: 'Command+A',\n\t          selector: 'selectAll:'\n\t        }]\n\t      }, {\n\t        label: 'Window',\n\t        submenu: [{\n\t          label: 'New Window',\n\t          accelerator: 'Command+N',\n\t          click: function click() {\n\t            if (!mainWindow) {\n\t              attachMainWindow(false, 'http://localhost:56248/app/home');\n\t            }\n\t          }\n\t        }, {\n\t          label: 'Minimize',\n\t          accelerator: 'Command+M',\n\t          selector: 'performMiniaturize:'\n\t        }, {\n\t          label: 'Close',\n\t          accelerator: 'Command+W',\n\t          selector: 'performClose:'\n\t        }, {\n\t          type: 'separator'\n\t        }, {\n\t          label: 'Bring All to Front',\n\t          selector: 'arrangeInFront:'\n\t        }]\n\t      }, {\n\t        label: 'Advanced',\n\t        submenu: [{\n\t          label: 'Toggle MavensMate Server Developer Tools',\n\t          accelerator: function () {\n\t            if (process.platform === 'darwin') return 'Alt+Command+K';else return 'Ctrl+Shift+K';\n\t          }(),\n\t          click: function click(item, focusedWindow) {\n\t            if (focusedWindow) {\n\t              focusedWindow.webContents.send('toggle-server-developer-tools');\n\t            }\n\t          }\n\t        }, {\n\t          label: 'Toggle MavensMate Desktop Developer Tools',\n\t          accelerator: function () {\n\t            if (process.platform === 'darwin') return 'Alt+Command+I';else return 'Ctrl+Shift+I';\n\t          }(),\n\t          click: function click(item, focusedWindow) {\n\t            if (focusedWindow) {\n\t              focusedWindow.webContents.send('toggle-desktop-developer-tools');\n\t            }\n\t          }\n\t        }]\n\t      }, {\n\t        label: 'Help',\n\t        submenu: [{\n\t          label: 'MavensMate v' + app.getVersion()\n\t        }, {\n\t          label: 'Check for Updates',\n\t          click: function click() {\n\t            __webpack_require__(14).shell.openExternal('https://github.com/joeferraro/MavensMate-Desktop/releases');\n\t          }\n\t        }, {\n\t          label: 'Learn More',\n\t          click: function click() {\n\t            __webpack_require__(14).shell.openExternal('http://mavensmate.com');\n\t          }\n\t        }, {\n\t          label: 'Submit a GitHub Issue',\n\t          click: function click() {\n\t            __webpack_require__(14).shell.openExternal('https://github.com/joeferraro/MavensMate/issues');\n\t          }\n\t        }]\n\t      }];\n\t    } else {\n\t      template = [{\n\t        label: '&File',\n\t        submenu: [{\n\t          label: '&Close',\n\t          accelerator: 'Ctrl+W',\n\t          click: function click() {\n\t            var focusedWindow = BrowserWindow.getFocusedWindow();\n\t            if (focusedWindow) focusedWindow.close();\n\t          }\n\t        }, {\n\t          label: 'Quit',\n\t          accelerator: 'Ctrl+Q',\n\t          click: function click() {\n\t            app.quit();\n\t          }\n\t        }]\n\t      }, {\n\t        label: 'Advanced',\n\t        submenu: [{\n\t          label: 'Toggle MavensMate Server Developer Tools',\n\t          accelerator: function () {\n\t            if (process.platform === 'darwin') return 'Alt+Command+K';else return 'Ctrl+Shift+K';\n\t          }(),\n\t          click: function click(item, focusedWindow) {\n\t            if (focusedWindow) {\n\t              focusedWindow.webContents.send('toggle-server-developer-tools');\n\t            }\n\t          }\n\t        }, {\n\t          label: 'Toggle MavensMate Desktop Developer Tools',\n\t          accelerator: function () {\n\t            if (process.platform === 'darwin') return 'Alt+Command+I';else return 'Ctrl+Shift+I';\n\t          }(),\n\t          click: function click(item, focusedWindow) {\n\t            if (focusedWindow) {\n\t              focusedWindow.webContents.send('toggle-desktop-developer-tools');\n\t            }\n\t          }\n\t        }]\n\t      }, {\n\t        label: 'Help',\n\t        submenu: [{\n\t          label: 'MavensMate v' + app.getVersion()\n\t        }, {\n\t          label: 'Check for Updates',\n\t          click: function click() {\n\t            __webpack_require__(14).shell.openExternal('https://github.com/joeferraro/MavensMate-Desktop/releases');\n\t          }\n\t        }, {\n\t          label: 'Submit a GitHub Issue',\n\t          click: function click() {\n\t            __webpack_require__(14).shell.openExternal('https://github.com/joeferraro/MavensMate/issues');\n\t          }\n\t        }, {\n\t          label: 'Learn More',\n\t          click: function click() {\n\t            __webpack_require__(14).shell.openExternal('http://mavensmate.com');\n\t          }\n\t        }]\n\t      }];\n\t    }\n\t\n\t    var menu = Menu.buildFromTemplate(template);\n\t    Menu.setApplicationMenu(menu);\n\t  }\n\t};\n\t\n\tvar onClosed = function onClosed() {\n\t  // dereference the window\n\t  // for multiple windows store them in an array\n\t  mainWindow = null;\n\t};\n\t\n\t// attaches the main window\n\tvar attachMainWindow = function attachMainWindow(restartServer, url) {\n\t  return new Promise(function (resolve, reject) {\n\t    try {\n\t      console.log('attaching main application window');\n\t\n\t      // adds tab to the main window (typically called from the core via windowOpener function passed to client)\n\t      openUrlInNewTab = function openUrlInNewTab(url) {\n\t        console.log('openUrlInNewTab', url);\n\t        var waitFor = !mainWindow ? attachMainWindow() : Promise.resolve();\n\t\n\t        waitFor.then(function () {\n\t          if (url.indexOf('localhost') >= 0) {\n\t            // opens mavensmate ui in mavensmate-desktop chrome\n\t            mainWindow.webContents.send('new-web-view', url);\n\t            mainWindow.show();\n\t          } else {\n\t            // open external url in local browser\n\t            shell.openExternal(url);\n\t          }\n\t        }).catch(function (err) {\n\t          console.error('COuld not open url in new view ...', err);\n\t        });\n\t      };\n\t\n\t      // Create the browser window.\n\t      mainWindow = new BrowserWindow({\n\t        width: 1000,\n\t        height: 750,\n\t        minWidth: 850,\n\t        minHeight: 670,\n\t        icon: path.join(__dirname, 'resources', 'icon.png')\n\t      });\n\t\n\t      mainWindow.loadURL('file://' + __dirname + '/index.html');\n\t      mainWindow.on('closed', onClosed);\n\t      mainWindow.webContents.on('did-finish-load', function () {\n\t\n\t        if (mavensmate.stop && restartServer) {\n\t          // happens when app is restarted\n\t          mavensMateServer.stop();\n\t          mavensMateServer = null;\n\t          mavensMateApp = null;\n\t          mavensMateConfig = null;\n\t          mavensMateLogger = null;\n\t        }\n\t\n\t        // if (mavensMateServer) {\n\t        //   mainWindow.webContents.send('new-web-view', url);\n\t        //   return resolve();\n\t        // }\n\t\n\t        // we start the mm server, bc app was just started or was reloaded (typically during dev)\n\t        mavensmate.startServer({\n\t          name: 'mavensmate-desktop',\n\t          port: 56248,\n\t          openWindowFn: openUrlInNewTab,\n\t          mode: 'desktop',\n\t          ipc: __webpack_require__(14).ipcRenderer\n\t        }).then(function (res) {\n\t          mavensMateApp = res.app;\n\t          mavensMateServer = res.server;\n\t          mavensMateConfig = res.config;\n\t          mavensMateLogger = res.logger;\n\t          mainWindow.webContents.send('new-web-view', 'http://localhost:56248/app/home');\n\t          new AppUpdater(mainWindow, mavensMateConfig);\n\t          resolve();\n\t        }).catch(function (err) {\n\t          // reject(err); todo: reject, show error page\n\t          mainWindow.webContents.send('new-web-view', 'http://localhost:56248/app/home');\n\t          resolve();\n\t        });\n\t      });\n\t\n\t      // Emitted when the window is closed.\n\t      mainWindow.on('closed', function () {\n\t        // Dereference the window object, usually you would store windows\n\t        // in an array if your app supports multi windows, this is the time\n\t        // when you should delete the corresponding element.\n\t        mainWindow = null;\n\t      });\n\t    } catch (e) {\n\t      reject(e);\n\t    }\n\t  });\n\t};\n\t\n\tvar toggleStartAtLaunch = function toggleStartAtLaunch() {\n\t  appLauncher.isEnabled().then(function (enabled) {\n\t    if (isStartAtLaunch) {\n\t      return appLauncher.disable();\n\t    } else {\n\t      return appLauncher.enable();\n\t    }\n\t  }).then(function (res) {\n\t    isStartAtLaunch = !isStartAtLaunch;\n\t  }).catch(function (err) {\n\t    console.log('could not toggleStartAtLaunch', err);\n\t  });\n\t};\n\t\n\tvar attachTray = function attachTray() {\n\t  return new Promise(function (resolve, reject) {\n\t    appLauncher.isEnabled().then(function (enabled) {\n\t      if (enabled) {\n\t        isStartAtLaunch = enabled;\n\t      }\n\t      if (process.platform === 'darwin') {\n\t        trayIcon = new Tray(path.join(__dirname, 'resources', 'tray', 'osx', 'icon.png'));\n\t        trayIcon.setPressedImage(path.join(__dirname, 'resources', 'tray', 'osx', 'icon-white.png'));\n\t      } else if (process.platform === 'win32') {\n\t        trayIcon = new Tray(path.join(__dirname, 'resources', 'tray', 'osx', 'icon-white.png'));\n\t      } else {\n\t        trayIcon = new Tray(path.join(__dirname, 'resources', 'tray', 'osx', 'icon.png'));\n\t      }\n\t      var contextMenu = Menu.buildFromTemplate([{\n\t        label: 'MavensMate v' + app.getVersion(),\n\t        type: 'normal'\n\t      }, {\n\t        label: 'Start on Launch',\n\t        type: 'checkbox',\n\t        click: function click() {\n\t          toggleStartAtLaunch();\n\t        },\n\t        checked: isStartAtLaunch\n\t      }, {\n\t        label: 'Install Beta Releases',\n\t        type: 'checkbox',\n\t        click: function click() {\n\t          mavensMateConfig.set('mm_beta_channel', !mavensMateConfig.get('mm_beta_channel', false));\n\t          mavensMateConfig.save();\n\t        },\n\t        checked: mavensMateConfig.get('mm_beta_channel', false)\n\t      }, {\n\t        label: 'Quit MavensMate',\n\t        type: 'normal',\n\t        click: function click() {\n\t          app.quit();\n\t        }\n\t      }]);\n\t      trayIcon.setToolTip('MavensMate');\n\t      trayIcon.setContextMenu(contextMenu);\n\t      resolve();\n\t    }).catch(function (err) {\n\t      console.log('could not attach tray', err);\n\t      reject(err);\n\t    });\n\t  });\n\t};\n\t\n\t// mavensmate server can send messages to this process\n\t// in this case, we take a click event on an icon in mavensmate server and\n\t// display an app launcher in our UI, because we manage the webviews\n\tipc.on('show-view-manager', function () {\n\t  console.log('showing view manager!');\n\t  mainWindow.webContents.send('show-view-manager');\n\t});\n\t\n\t// used in development when we want to run the dev server inside electron\n\t// press escape on the error screen to proceed\n\tipc.on('error:continue', function () {\n\t  mainWindow.loadURL('file://' + __dirname + '/index.html');\n\t  mainWindow.webContents.on('did-finish-load', function () {\n\t    mainWindow.webContents.send('new-web-view', 'http://localhost:56248/app/home');\n\t  });\n\t});\n\t\n\tapp.on('activate-with-no-open-windows', function () {\n\t  if (!mainWindow) {\n\t    mainWindow = attachMainWindow();\n\t  }\n\t});\n\t\n\t// This method will be called when Electron has finished\n\t// initialization and is ready to create browser windows.\n\t// will check for updates against github releases and pass the result to setup\n\tapp.on('ready', function () {\n\t  attachAppMenu();\n\t  attachMainWindow()\n\t  // .then(attachTray)\n\t  .catch(function (err) {\n\t    console.error('Error starting MavensMate: ', err);\n\t    mainWindow.loadURL('file://' + __dirname + '/error.html');\n\t    mainWindow.webContents.on('did-finish-load', function () {\n\t      if (err.message.indexOf('56248') >= 0) {\n\t        mainWindow.webContents.send('error-msg', 'Another MavensMate Desktop instance running. Quit any other running instances of MavensMate Desktop to continue.');\n\t      } else {\n\t        mainWindow.webContents.send('error-msg', err.message);\n\t      }\n\t    });\n\t  });\n\t});\n\t/* WEBPACK VAR INJECTION */}.call(exports, \"/\"))\n\n/***/ },\n/* 1 */\n/***/ function(module, exports) {\n\n\tmodule.exports = require(\"bluebird\");\n\n/***/ },\n/* 2 */\n/***/ function(module, exports) {\n\n\tmodule.exports = require(\"inherits\");\n\n/***/ },\n/* 3 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/* WEBPACK VAR INJECTION */(function(__dirname) {/**\n\t * @file Collection of utility functions\n\t * @author Joseph Ferraro <@joeferraro>\n\t */\n\t\n\t'use strict';\n\t\n\tvar spawn = __webpack_require__(97).spawn;\n\tvar fs = __webpack_require__(26);\n\tvar path = __webpack_require__(6);\n\tvar Promise = __webpack_require__(1);\n\tvar _ = __webpack_require__(7);\n\tvar os = __webpack_require__(27);\n\tvar stripJson = __webpack_require__(146);\n\tvar fstream = __webpack_require__(137);\n\tvar archiver = __webpack_require__(133);\n\tvar logger = __webpack_require__(4);\n\tvar which = __webpack_require__(101);\n\tvar camelize = __webpack_require__(96);\n\t\n\tvar platformHash = {\n\t  darwin: 'osx',\n\t  linux: 'linux',\n\t  win32: 'windows'\n\t};\n\t\n\texports.platformConfigKey = platformHash[os.platform()];\n\t\n\texports.getAppRoot = function () {\n\t  return path.resolve(path.join(__dirname, '..', '..'));\n\t};\n\t\n\texports.isCredentialsError = function (err) {\n\t  return err.message.indexOf('expired access/refresh token') >= 0 || err.message.indexOf('Could not retrieve credentials') >= 0 || err.message.indexOf('INVALID_SESSION_ID') >= 0;\n\t};\n\t\n\texports.getProjectById = function (app, id) {\n\t  var projects = app.get('projects');\n\t  if (id) {\n\t    return _.find(projects, function (p) {\n\t      return p.settings.id === id;\n\t    });\n\t  }\n\t  return null;\n\t};\n\t\n\t/**\n\t * Returns a string representing a default workspace\n\t * @return {String}\n\t */\n\texports.getDefaultWorkspaceSetting = function () {\n\t  if (this.isMac()) {\n\t    return path.join(process.env.HOME, 'Documents');\n\t  } else if (this.isWindows()) {\n\t    return path.join(process.env[process.platform === 'win32' ? 'USERPROFILE' : 'HOME'], 'Documents');\n\t  } else if (this.isLinux()) {\n\t    return process.env.HOME;\n\t  }\n\t};\n\t\n\texports.endsWith = function (string, suffix) {\n\t  string = string.toLowerCase();\n\t  suffix = suffix.toLowerCase();\n\t  return string.indexOf(suffix, string.length - suffix.length) !== -1;\n\t};\n\t\n\texports.startsWith = function (string, prefix) {\n\t  string = string.toLowerCase();\n\t  prefix = prefix.toLowerCase();\n\t  return prefix.length > 0 && string.substring(0, prefix.length) === prefix;\n\t};\n\t\n\texports.isWindows = function () {\n\t  return os.platform() === 'win32';\n\t};\n\t\n\texports.getWindowsAppDataPath = function () {\n\t  return process.env.APPDATA;\n\t};\n\t\n\texports.isLinux = function () {\n\t  return os.platform() === 'linux';\n\t};\n\t\n\texports.isMac = function () {\n\t  return os.platform() === 'darwin';\n\t};\n\t\n\texports.isValidProjectPath = function (projectPath) {\n\t  return fs.existsSync(path.join(projectPath, 'config', '.settings'));\n\t};\n\t\n\texports.getHomeDirectory = function () {\n\t  if (this.isMac()) {\n\t    return process.env.HOME;\n\t  } else if (this.isWindows()) {\n\t    return process.env[process.platform === 'win32' ? 'USERPROFILE' : 'HOME'];\n\t  } else if (this.isLinux()) {\n\t    return process.env.HOME;\n\t  }\n\t};\n\t\n\texports.removeEmptyDirectoriesRecursiveSync = function (directory) {\n\t  logger.silly('----------> removing empty directories from', directory);\n\t  var removeEmptyDirs = function (dir) {\n\t    var files = fs.readdirSync(dir);\n\t    logger.silly('files in directory', dir, files);\n\t    if (files.length === 0 && dir !== directory) {\n\t      // directory is empty, simple remove it\n\t      fs.removeSync(dir);\n\t    } else {\n\t      for (var i = 0; i < files.length; i++) {\n\t        var filePath = path.join(dir, files[i]);\n\t        logger.silly(filePath);\n\t        var stats = fs.statSync(filePath);\n\t        if (stats.isDirectory()) {\n\t          logger.silly('---> directory', filePath);\n\t          removeEmptyDirs(filePath);\n\t        }\n\t      }\n\t      files = fs.readdirSync(dir);\n\t      if (files.length === 0 && dir !== directory) {\n\t        fs.removeSync(dir);\n\t      }\n\t    }\n\t  };\n\t  removeEmptyDirs(directory);\n\t};\n\t\n\texports.emptyDirectoryRecursiveSync = function (directory) {\n\t  var emptyDir = function (dir) {\n\t    logger.silly('----------> emptying directory', dir);\n\t    var files = fs.readdirSync(dir);\n\t    logger.silly('files', files);\n\t    if (files.length > 0) {\n\t      for (var i = 0; i < files.length; i++) {\n\t        var fileBasename = files[i];\n\t        var filePath = path.join(dir, files[i]);\n\t        logger.silly(filePath);\n\t        var stats = fs.statSync(filePath);\n\t        if (stats.isFile()) {\n\t          logger.silly('---> file, unlinking', filePath);\n\t          fs.unlinkSync(filePath);\n\t        } else if (stats.isDirectory() && fileBasename !== '.svn' && fileBasename !== '.git') {\n\t          logger.silly('---> directory', filePath);\n\t          emptyDir(filePath);\n\t        }\n\t      }\n\t    }\n\t  };\n\t  emptyDir(directory);\n\t};\n\t\n\t/**\n\t * Takes an array of path strings and returns an array of absolute paths\n\t * @param  {Array} paths\n\t * @return {Array} absolute paths\n\t */\n\texports.getAbsolutePaths = function (paths) {\n\t  var resolvedPaths = [];\n\t  _.each(paths, function (p) {\n\t    if (path.resolve(p) !== path.normalize(p).replace(new RegExp(path.sep + '$'), '')) {\n\t      // relative path\n\t      resolvedPaths.push(path.resolve(p));\n\t    } else {\n\t      resolvedPaths.push(p);\n\t    }\n\t  });\n\t  return resolvedPaths;\n\t};\n\t\n\t/**\n\t * Check if a directory is empty synchronously (courtesy: https://github.com/codexar/npm-extfs)\n\t *\n\t * @param {string} searchPath\n\t */\n\texports.isDirectoryEmptySync = function (searchPath) {\n\t  var stat;\n\t  try {\n\t    stat = fs.statSync(searchPath);\n\t  } catch (e) {\n\t    return true;\n\t  }\n\t  if (stat.isDirectory()) {\n\t    var items = fs.readdirSync(searchPath);\n\t    var visibleItems = [];\n\t    _.each(items, function (i) {\n\t      if (i[0] !== '.') {\n\t        visibleItems.push(i);\n\t      }\n\t    });\n\t    return visibleItems.length === 0;\n\t  }\n\t};\n\t\n\t/**\n\t * Walks directory recursively, returns a list of file paths\n\t * @param  {String}   dir  - dir path\n\t * @param  {Function} done - callback\n\t * @return {Callback} err, array of file paths\n\t */\n\texports.walkSync = function (dir) {\n\t  var walk = function (dir) {\n\t    var _walk;\n\t    _walk = function (dir) {\n\t      var fn, fns, _i, _len, _results;\n\t      fns = fs.readdirSync(dir);\n\t      _results = [];\n\t      for (_i = 0, _len = fns.length; _i < _len; _i++) {\n\t        fn = fns[_i];\n\t        fn = dir + path.sep + fn;\n\t        if (fs.statSync(fn).isDirectory()) {\n\t          _results.push(_walk(fn));\n\t        } else {\n\t          _results.push(fn);\n\t        }\n\t      }\n\t      return _results;\n\t    };\n\t    return _walk(dir);\n\t  };\n\t\n\t  return _.flatten(walk(dir));\n\t};\n\t\n\t/**\n\t * Returns a list of top-level directories in a given directory\n\t * @param  {String}   dir  - dir path\n\t * @return {Array} directories\n\t */\n\texports.listDirectories = function (dir) {\n\t  var contents = fs.readdirSync(dir);\n\t  var directories = [];\n\t  _.each(contents, function (c) {\n\t    if (fs.statSync(path.join(dir, c)).isDirectory()) {\n\t      directories.push(path.join(dir, c));\n\t    }\n\t  });\n\t  return directories;\n\t};\n\t\n\t// reads command payload (STDIN)\n\texports.readStdin = function () {\n\t  return new Promise(function (resolve, reject) {\n\t    var myJson = '';\n\t\n\t    process.stdin.setEncoding('utf8');\n\t\n\t    process.stdin.on('readable', function () {\n\t      var chunk = process.stdin.read();\n\t      if (chunk !== null) {\n\t        myJson += chunk;\n\t      }\n\t    });\n\t\n\t    process.stdin.on('end', function () {\n\t      var jsonObject = JSON.parse(myJson);\n\t      _.forOwn(jsonObject, function (value, key) {\n\t        if (key.indexOf('_') >= 0) {\n\t          jsonObject[camelize(key)] = jsonObject[key];\n\t          delete jsonObject[key];\n\t        }\n\t      });\n\t      resolve(jsonObject);\n\t    });\n\t  });\n\t};\n\t\n\t// returns command payload (STDIN)\n\t// if it's already been read, returns global.payload\n\texports.getPayload = function () {\n\t  var self = this;\n\t  return new Promise(function (resolve, reject) {\n\t    self.readStdin().then(function (stdin) {\n\t      resolve(stdin);\n\t    }).catch(function (error) {\n\t      reject(new Error('Could not read STDIN: ' + error.message));\n\t    });\n\t  });\n\t};\n\t\n\t// takes an instance of an object\n\t// applies the properties of opts to the instance\n\texports.applyProperties = function (instance, opts) {\n\t  _.forOwn(opts, function (value, key) {\n\t    if (key.indexOf('_') >= 0) {\n\t      instance[camelize(key)] = value;\n\t    } else {\n\t      instance[key] = value;\n\t    }\n\t  });\n\t};\n\t\n\texports.getFileBody = function (path, parseJSON) {\n\t  var fileBody = fs.readFileSync(path, 'utf8');\n\t  if (parseJSON) {\n\t    fileBody = stripJson(fileBody);\n\t    return JSON.parse(fileBody);\n\t  } else {\n\t    return fileBody;\n\t  }\n\t};\n\t\n\texports.joinForQuery = function (strings) {\n\t  return '\\'' + strings.join('\\',\\'') + '\\'';\n\t};\n\t\n\texports.zipDirectory = function (directoryToZip, zipFileDestination, dest, ext, filename) {\n\t  return new Promise(function (resolve, reject) {\n\t\n\t    if (!directoryToZip) {\n\t      return reject(new Error('Missing directory to zip'));\n\t    }\n\t\n\t    if (dest === undefined) {\n\t      dest = 'unpackaged';\n\t    }\n\t    if (ext === undefined) {\n\t      ext = 'zip';\n\t    }\n\t    filename = filename || dest;\n\t    var cwd = process.cwd();\n\t    // logger.debug('\\n\\n\\n\\n-----=======> CHANGING DIRECTORY');\n\t    process.chdir(path.join(directoryToZip));\n\t    var output = fs.createWriteStream(path.join(zipFileDestination, filename + '.' + ext));\n\t    var archive = archiver('zip');\n\t\n\t    output.on('close', function () {\n\t      process.chdir(cwd);\n\t      resolve();\n\t    });\n\t\n\t    archive.on('error', function (err) {\n\t      logger.error('error creating zip file');\n\t      logger.error(err);\n\t      process.chdir(cwd);\n\t      reject(new Error('unable to create zip file'));\n\t    });\n\t\n\t    archive.pipe(output);\n\t    archive.bulk([{ src: ['**'], dest: dest }]);\n\t    archive.finalize();\n\t  });\n\t};\n\t\n\t/**\n\t * Writes a readable stream to disk (assumes zip)\n\t * We have to write the stream to the disk THEN unzip because of issues with npm's unzip\n\t * @param  {Stream} readableStream\n\t * @param  {String} destination\n\t * @return {Promise}\n\t */\n\texports.writeStream = function (readableStream, destination) {\n\t  var self = this;\n\t  return new Promise(function (resolve, reject) {\n\t    var tmpZipLocation = path.join(destination, 'tmp.zip');\n\t    try {\n\t      logger.debug('writing stream');\n\t      readableStream.pipe(fstream.Writer(tmpZipLocation)).on('error', function (error) {\n\t        if (fs.existsSync(tmpZipLocation)) {\n\t          fs.removeAsync(tmpZipLocation).then(function () {\n\t            reject(error);\n\t          }).catch(function (err) {\n\t            reject(err);\n\t          });\n\t        }\n\t      }).on('close', function () {\n\t        logger.debug('closed write stream, unzipping now');\n\t\n\t        var unzipCommand;\n\t\n\t        if (self.isMac() || self.isLinux()) {\n\t          unzipCommand = spawn('unzip', [tmpZipLocation, '-d', destination], { stdio: ['ignore', 'ignore', 'pipe'] });\n\t        } else if (self.isWindows()) {\n\t          var cscriptExe = 'cscript';\n\t          try {\n\t            which.sync('cscript');\n\t          } catch (e) {\n\t            logger.debug('Could not find cscript...');\n\t            if (os.arch() === 'ia32') {\n\t              cscriptExe = 'c:\\\\windows\\\\system32\\\\cscript.exe';\n\t            } else {\n\t              cscriptExe = 'c:\\\\windows\\\\SysWOW64\\\\cscript.exe';\n\t            }\n\t          }\n\t          logger.debug('cscriptExe is: ', cscriptExe);\n\t          unzipCommand = spawn(cscriptExe, [path.join(__dirname, '..', '..', 'bin', 'unzip.vbs'), tmpZipLocation, destination], { stdio: ['ignore', 'ignore', 'pipe'] });\n\t        }\n\t\n\t        unzipCommand.on('error', function (err) {\n\t          logger.debug('error spawning unzip process', err);\n\t          if (err.message.indexOf('ENOENT') !== -1) {\n\t            return reject(new Error('Could not unzip response from Salesforce. It is likely unzip (OSX/Linux) or cscript (Windows) is not available on your system PATH. Check your local machine settings.'));\n\t          } else {\n\t            return reject(err);\n\t          }\n\t        });\n\t\n\t        unzipCommand.stderr.on('data', function (data) {\n\t          logger.error('ERR unzipping:');\n\t          logger.error(data);\n\t          if (fs.existsSync(tmpZipLocation)) {\n\t            fs.removeAsync(tmpZipLocation).then(function () {\n\t              return reject(new Error('Could not extract and write stream to file system.'));\n\t            }).catch(function (err) {\n\t              return reject(err);\n\t            });\n\t          }\n\t        });\n\t\n\t        unzipCommand.on('close', function (code) {\n\t          if (fs.existsSync(tmpZipLocation)) {\n\t            fs.removeAsync(tmpZipLocation).then(function () {\n\t              if (code !== 0) {\n\t                return reject(new Error('Could not extract and write stream to file system. [Exit Code ' + code + ']'));\n\t              } else {\n\t                return resolve(destination);\n\t              }\n\t            }).catch(function (err) {\n\t              reject(err);\n\t            });\n\t          }\n\t        });\n\t      });\n\t    } catch (e) {\n\t      if (fs.existsSync(tmpZipLocation)) {\n\t        fs.removeAsync(tmpZipLocation).then(function () {\n\t          reject(e);\n\t        }).catch(function (err) {\n\t          reject(err);\n\t        });\n\t      }\n\t    }\n\t  });\n\t};\n\t\n\texports.chunkArray = function (arr, chunkSize) {\n\t  return [].concat.apply([], arr.map(function (elem, i) {\n\t    return i % chunkSize ? [] : [arr.slice(i, i + chunkSize)];\n\t  }));\n\t};\n\t\n\texports.generateRandomString = function (length) {\n\t  var chars = '0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghiklmnopqrstuvwxyz';\n\t  length = length ? length : 32;\n\t  var string = '';\n\t  for (var i = 0; i < length; i++) {\n\t    var randomNumber = Math.floor(Math.random() * chars.length);\n\t    string += chars.substring(randomNumber, randomNumber + 1);\n\t  }\n\t  return string;\n\t};\n\t/* WEBPACK VAR INJECTION */}.call(exports, \"/\"))\n\n/***/ },\n/* 4 */\n/***/ function(module, exports) {\n\n\tmodule.exports = require(\"winston\");\n\n/***/ },\n/* 5 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * @file Base command class. Each command implements an execute function that performs the work.\n\t * @author Joseph Ferraro <@joeferraro>\n\t */\n\t\n\t'use strict';\n\t\n\tvar _ = __webpack_require__(7);\n\tvar logger = __webpack_require__(4);\n\tvar MetadataHelper = __webpack_require__(15).MetadataHelper;\n\t\n\t/**\n\t * Base command class\n\t * @param {Array} args\n\t * @param {Array[0]} - client instance (object)\n\t * @param {Array[1]} - payload for the command (object)\n\t * @param {Array[2]} - editorService for facilitating interaction with the editors (sublime, atom, vim, vscode, etc.)\n\t */\n\tvar BaseCommand = function (args) {\n\t  this.setProject(args[0]);\n\t  this.payload = args[1];\n\t  this.editorService = args[2];\n\t  this.metadataHelper = new MetadataHelper();\n\t};\n\t\n\t/**\n\t * Sets unique identifier for the command for tracking purposes\n\t * @param {String} id - unique id (via uuid)\n\t */\n\tBaseCommand.prototype.setId = function (id) {\n\t  this._id = id;\n\t};\n\t\n\t/**\n\t * Returns the command id\n\t * @return {String} - unique id of the command\n\t */\n\tBaseCommand.prototype.getId = function () {\n\t  return this._id;\n\t};\n\t\n\t/**\n\t * Sets the project running this command (optional)\n\t * @param {Object} project - project instance\n\t */\n\tBaseCommand.prototype.setProject = function (project) {\n\t  this._project = project;\n\t};\n\t\n\t/**\n\t * Returns the project running this command (optional)\n\t * @return {Object} - project instance\n\t */\n\tBaseCommand.prototype.getProject = function () {\n\t  return this._project;\n\t};\n\t\n\t/**\n\t * Whether the command is requesting a UI\n\t * @return {Boolean}\n\t */\n\tBaseCommand.prototype.isUICommand = function () {\n\t  return this.payload && this.payload.args ? this.payload.args.ui : false;\n\t};\n\t\n\tmodule.exports = BaseCommand;\n\n/***/ },\n/* 6 */\n/***/ function(module, exports) {\n\n\tmodule.exports = require(\"path\");\n\n/***/ },\n/* 7 */\n/***/ function(module, exports) {\n\n\tmodule.exports = require(\"lodash\");\n\n/***/ },\n/* 8 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\t/**\n\t * nconf is used globally for config, client instantiates the necessary config files\n\t * import config throughout the application to share the global nconf\n\t */\n\t\n\tvar fs = __webpack_require__(10);\n\tvar config = __webpack_require__(140);\n\tvar defaults = __webpack_require__(36);\n\tvar util = __webpack_require__(3);\n\tvar path = __webpack_require__(6);\n\tvar _ = __webpack_require__(7);\n\t\n\tfunction _monitor(filePath) {\n\t  fs.unwatchFile(filePath);\n\t  fs.watchFile(filePath, function () {\n\t    _reload();\n\t  });\n\t}\n\t\n\tfunction _reload() {\n\t  config.remove('user-client');\n\t  config.remove('default-client');\n\t  config.remove('global');\n\t  _init();\n\t}\n\t\n\tfunction _init() {\n\t  config.env().argv().defaults({});\n\t\n\t  var userSettingsPath;\n\t  if (util.isMac()) {\n\t    userSettingsPath = path.join(util.getHomeDirectory(), '.mavensmate-config.json');\n\t  } else if (util.isWindows()) {\n\t    userSettingsPath = path.join(util.getWindowsAppDataPath(), 'MavensMate', 'mavensmate-config.json');\n\t  } else if (util.isLinux()) {\n\t    userSettingsPath = path.join(util.getHomeDirectory(), '.config', '.mavensmate-config.json');\n\t  }\n\t\n\t  var defaultSettings = {};\n\t  _.each(defaults, function (settingValue, settingKey) {\n\t    defaultSettings[settingKey] = settingValue.default;\n\t  });\n\t\n\t  // if user setting dont exist, copy default to user settings on disk\n\t  if (!fs.existsSync(userSettingsPath)) {\n\t    fs.outputJsonSync(userSettingsPath, defaultSettings, { spaces: 2 });\n\t  }\n\t\n\t  // ensure valid JSON configuration\n\t  try {\n\t    util.getFileBody(userSettingsPath, true);\n\t  } catch (e) {\n\t    logger.error('could not parse user JSON configuration, reverting to default');\n\t    fs.outputJsonSync(userSettingsPath, defaultSettings, { spaces: 2 });\n\t  }\n\t  config.file('user', userSettingsPath);\n\t  _monitor(userSettingsPath);\n\t  config.add('global', { type: 'literal', store: defaultSettings });\n\t\n\t  // normalize mm_api_version to string with a single decimal\n\t  var mmApiVersion = config.get('mm_api_version');\n\t  if (!util.endsWith(mmApiVersion, '.0')) {\n\t    mmApiVersion = mmApiVersion + '.0';\n\t    config.set('mm_api_version', mmApiVersion);\n\t  }\n\t\n\t  if (config.get('mm_http_proxy')) {\n\t    process.env.http_proxy = config.get('mm_http_proxy');\n\t  }\n\t  if (config.get('mm_https_proxy')) {\n\t    process.env.https_proxy = config.get('mm_https_proxy');\n\t  }\n\t}\n\t\n\t_init();\n\tmodule.exports = config;\n\n/***/ },\n/* 9 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * @file Responsible for launching MavensMate UIs and opening files in the client self.editor\n\t * @author Joseph Ferraro <@joeferraro>\n\t */\n\t\n\t'use strict';\n\t\n\tvar Promise = __webpack_require__(1);\n\tvar _ = __webpack_require__(7);\n\tvar which = __webpack_require__(101);\n\tvar spawn = __webpack_require__(97).spawn;\n\tvar logger = __webpack_require__(4);\n\tvar util = __webpack_require__(3);\n\tvar config = __webpack_require__(8);\n\tvar path = __webpack_require__(6);\n\tvar os = __webpack_require__(27);\n\tvar fs = __webpack_require__(10);\n\tvar open = __webpack_require__(142);\n\tvar querystring = __webpack_require__(22);\n\t\n\t/**\n\t * Service to handle interaction with the self.editor (sublime, atom, etc.)\n\t * @param {String} self.editor - name of the self.editor\n\t */\n\tvar EditorService = function (editor, openWindowFn) {\n\t  this.editor = editor;\n\t  this.openWindowFn = openWindowFn;\n\t  this.supportedEditors = this._getSupportedEditors();\n\t  if (this.editor && !this._isSupportedEditor(this.editor)) {\n\t    throw new Error(this.editor + ' was not found in list of supported editors. Please check your global settings to ensure the self.editor path for ' + this.editor + ' is configured correctly.');\n\t  }\n\t};\n\t\n\tEditorService.prototype._isSupportedEditor = function (editor) {\n\t  if (!this.supportedEditors[this.editor]) {\n\t    logger.error('Unsupported editor. Supported editors: ', this.supportedEditors);\n\t    return false;\n\t  }\n\t  return true;\n\t};\n\t\n\tEditorService.prototype._getSupportedEditors = function () {\n\t  var editors = {};\n\t  var atomLocationConfig = config.get('mm_atom_exec_path')[util.platformConfigKey] || config.get('mm_atom_exec_path');\n\t  var vsCodeLocationConfig = config.get('mm_vscode_exec_path')[util.platformConfigKey] || config.get('mm_vscode_exec_path');\n\t  var pathAtomLocation, pathSublLocation, pathVsCodeLocation;\n\t  try {\n\t    pathVsCodeLocation = which.sync('code');\n\t  } catch (e) {}\n\t  try {\n\t    pathAtomLocation = which.sync('atom');\n\t  } catch (e) {}\n\t  var sublLocationConfig = config.get('mm_subl_location')[util.platformConfigKey] || config.get('mm_subl_location');\n\t  try {\n\t    pathSublLocation = which.sync('subl');\n\t  } catch (e) {}\n\t  var atomPath = fs.existsSync(atomLocationConfig) ? atomLocationConfig : pathAtomLocation;\n\t  var sublPath = fs.existsSync(sublLocationConfig) ? sublLocationConfig : pathSublLocation;\n\t  var vsCodePath = fs.existsSync(vsCodeLocationConfig) ? vsCodeLocationConfig : pathVsCodeLocation;\n\t  if (atomPath) {\n\t    editors.atom = atomPath;\n\t  }\n\t  if (sublPath) {\n\t    editors.sublime = sublPath;\n\t  }\n\t  if (vsCodePath) {\n\t    editors.vscode = vsCodePath;\n\t  }\n\t  return editors;\n\t};\n\t\n\t/**\n\t * Launches the MavensMate UI in either MavensMateWindowServer.app (osx) or the web browser (Linux/Windows)\n\t * @param  {String} commandName\n\t * @return {Nothing}\n\t */\n\tEditorService.prototype.launchUI = function (appPath, urlParams) {\n\t  var self = this;\n\t  return new Promise(function (resolve, reject) {\n\t    var portNumber = process.env.MAVENSMATE_SERVER_PORT;\n\t\n\t    if (!portNumber) {\n\t      return reject(new Error('Could not detect local MavensMate server port. Set MAVENSMATE_SERVER_PORT environment variable.'));\n\t    }\n\t\n\t    var url = 'http://localhost:' + portNumber + '/app/' + appPath;\n\t    if (self.editor && urlParams) {\n\t      urlParams.editor = self.editor;\n\t    } else if (self.editor) {\n\t      urlParams = {};\n\t      urlParams.editor = self.editor;\n\t    }\n\t    if (urlParams) {\n\t      url += '?' + querystring.stringify(urlParams);\n\t    }\n\t\n\t    logger.debug('opening url --->');\n\t    logger.debug(url);\n\t\n\t    // todo: refactor windowopener (this is used by mavensmate-desktop)\n\t    if (self.openWindowFn) {\n\t      self.openWindowFn(url);\n\t      resolve();\n\t    } else {\n\t      // open web browser\n\t      open(url, function () {\n\t        if (process.env.MAVENSMATE_CONTEXT === 'cli') {\n\t          resolve();\n\t          process.exit(0);\n\t        } else {\n\t          resolve();\n\t        }\n\t      });\n\t    }\n\t  });\n\t};\n\t\n\t/**\n\t * Opens the specified URL in the user's browser (should probably be located in util, but oh well)\n\t * @param  {String} url - url to open in the browser\n\t */\n\tEditorService.prototype.openUrl = function (url) {\n\t  var self = this;\n\t  return new Promise(function (resolve, reject) {\n\t    try {\n\t      if (self.openWindowFn) {\n\t        self.openWindowFn(url);\n\t        resolve();\n\t      } else if (os.platform() === 'darwin') {\n\t        var browserChildProcess = spawn('open', [url], {\n\t          detached: true\n\t        });\n\t\n\t        browserChildProcess.on('close', function (code) {\n\t          if (code === 0) {\n\t            resolve();\n\t          }\n\t        });\n\t      } else {\n\t        // open web browser\n\t        open(url, function () {\n\t          resolve();\n\t        });\n\t      }\n\t    } catch (e) {\n\t      reject(e);\n\t    }\n\t  });\n\t};\n\t\n\tEditorService.prototype.runCommand = function (commandName) {\n\t  var self = this;\n\t  return new Promise(function (resolve, reject) {\n\t    if (self.editor === 'sublime') {\n\t      var editorExe = spawn(self.supportedEditors[self.editor], ['--command', commandName]);\n\t      editorExe.stdout.on('data', function (data) {\n\t        logger.debug('editor command STDOUT:');\n\t        logger.debug(data);\n\t      });\n\t\n\t      editorExe.stderr.on('data', function (data) {\n\t        logger.error('ERROR: Result of run command in editor: ');\n\t        logger.error(data);\n\t        return resolve(); // we resolve bc this is not a life/death operation\n\t      });\n\t\n\t      editorExe.on('close', function (code) {\n\t        logger.debug('editorExe close: ');\n\t        logger.debug(code);\n\t        if (code !== 0) {\n\t          logger.error('Could not run command in ' + self.editor);\n\t          resolve();\n\t        } else {\n\t          resolve();\n\t        }\n\t      });\n\t\n\t      editorExe.on('error', function (err) {\n\t        logger.error(err);\n\t        resolve();\n\t      });\n\t    } else {\n\t      resolve();\n\t    }\n\t  });\n\t};\n\t\n\t/**\n\t * Open a specific path in the editor\n\t * @param  {String} path - path to open\n\t * @return {Nothing}\n\t */\n\tEditorService.prototype.open = function (path) {\n\t  var self = this;\n\t  return new Promise(function (resolve, reject) {\n\t    var editorExe = spawn(self.supportedEditors[self.editor], [path]);\n\t    editorExe.stdout.on('data', function (data) {\n\t      logger.debug('editorExe STDOUT:');\n\t      logger.debug(data);\n\t    });\n\t\n\t    editorExe.stderr.on('data', function (data) {\n\t      logger.error('Result of path open in self.editor: ');\n\t      logger.error(data);\n\t      return reject(new Error('Could not open in editor'));\n\t    });\n\t\n\t    editorExe.on('close', function (code) {\n\t      logger.debug('editorExe close: ');\n\t      logger.debug(code);\n\t      if (code !== 0) {\n\t        reject(new Error('Could not open path in ' + self.editor + '. Check your MavensMate global settings to ensure self.editor paths are configured properly for ' + self.editor));\n\t      } else {\n\t        resolve();\n\t      }\n\t    });\n\t\n\t    editorExe.on('error', function (err) {\n\t      return reject(err);\n\t    });\n\t  });\n\t};\n\t\n\tmodule.exports = EditorService;\n\n/***/ },\n/* 10 */\n/***/ function(module, exports) {\n\n\tmodule.exports = require(\"fs-extra\");\n\n/***/ },\n/* 11 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/* WEBPACK VAR INJECTION */(function(__dirname) {/**\n\t * @file Represents an element of Salesforce metadata.\n\t * @author Joseph Ferraro <@joeferraro>\n\t */\n\t\n\t'use strict';\n\t\n\tvar Promise = __webpack_require__(1);\n\tvar _ = __webpack_require__(7);\n\tvar fs = __webpack_require__(10);\n\tvar path = __webpack_require__(6);\n\tvar MetadataHelper = __webpack_require__(15).MetadataHelper;\n\tvar util = __webpack_require__(3);\n\tvar config = __webpack_require__(8);\n\tvar request = __webpack_require__(100);\n\tvar swig = __webpack_require__(28);\n\tvar logger = __webpack_require__(4);\n\tvar TemplateService = __webpack_require__(95);\n\t\n\tvar types = {\n\t  TOP_LEVEL_METADATA_DIRECTORY: 'TOP_LEVEL_METADATA_DIRECTORY',\n\t  TOP_LEVEL_METADATA_FILE: 'TOP_LEVEL_METADATA_FILE',\n\t  METADATA_FOLDER: 'METADATA_FOLDER',\n\t  METADATA_FOLDER_ITEM: 'METADATA_FOLDER_ITEM',\n\t  LIGHTNING_BUNDLE: 'LIGHTNING_BUNDLE',\n\t  LIGHTNING_BUNDLE_ITEM: 'LIGHTNING_BUNDLE_ITEM'\n\t};\n\tObject.freeze(types);\n\t\n\tvar lightningTypes = {\n\t  STYLE: 'STYLE',\n\t  APPLICATION: 'APPLICATION',\n\t  DOCUMENTATION: 'DOCUMENTATION',\n\t  COMPONENT: 'COMPONENT',\n\t  EVENT: 'EVENT',\n\t  INTERFACE: 'INTERFACE',\n\t  CONTROLLER: 'CONTROLLER',\n\t  HELPER: 'HELPER',\n\t  RENDERER: 'RENDERER'\n\t};\n\tObject.freeze(lightningTypes);\n\t\n\tvar MavensMateFile = function (opts) {\n\t  opts = opts || {};\n\t  this.path = opts.path;\n\t  this.project = opts.project;\n\t  this.metadataHelper = this.project ? new MetadataHelper({ sfdcClient: this.project.sfdcClient }) : new MetadataHelper();\n\t  if (this.path) {\n\t    this.path = path.normalize(this.path);\n\t    this.type = this.metadataHelper.getTypeByPath(this.path);\n\t    this.basename = path.basename(this.path);\n\t    this.extension = path.extname(this.path).replace(/./, '');\n\t    if (this.basename.match(/./g) || [].length === 1) {\n\t      this.name = this.basename.split('.')[0];\n\t    } else {\n\t      this.name = path.basename(this.basename, '.' + this.extension);\n\t    }\n\t    this.folderName = path.basename(path.dirname(this.path));\n\t  }\n\t};\n\t\n\tMavensMateFile.prototype._template = null;\n\tMavensMateFile.prototype._basename = null;\n\tMavensMateFile.prototype._name = null;\n\tMavensMateFile.prototype._folderName = null;\n\tMavensMateFile.prototype._extension = null;\n\tMavensMateFile.prototype._apexTriggerObjectName = null;\n\t\n\t/**\n\t * whether the path represents a directory\n\t */\n\tObject.defineProperty(MavensMateFile.prototype, 'isDirectory', {\n\t  get: function () {\n\t    if (this.type.xmlName === 'Document') {\n\t      return path.extname(this.path) === ''; //TODO: some documents may not have an extension!\n\t    } else {\n\t      return path.extname(this.path) === '';\n\t    }\n\t  }\n\t});\n\t\n\t/**\n\t * basename of path\n\t */\n\tObject.defineProperty(MavensMateFile.prototype, 'basename', {\n\t  get: function () {\n\t    return this._basename;\n\t  },\n\t  set: function (value) {\n\t    this._basename = value;\n\t  }\n\t});\n\t\n\t/**\n\t * object name of apex trigger (if applicable)\n\t */\n\tObject.defineProperty(MavensMateFile.prototype, 'apexTriggerObjectName', {\n\t  get: function () {\n\t    return this._apexTriggerObjectName;\n\t  },\n\t  set: function (value) {\n\t    this._apexTriggerObjectName = value;\n\t  }\n\t});\n\t\n\t/**\n\t * basename of path without extension\n\t */\n\tObject.defineProperty(MavensMateFile.prototype, 'name', {\n\t  get: function () {\n\t    return this._name;\n\t  },\n\t  set: function (value) {\n\t    this._name = value;\n\t  }\n\t});\n\t\n\t/**\n\t * basename of path without extension\n\t */\n\tObject.defineProperty(MavensMateFile.prototype, 'folderName', {\n\t  get: function () {\n\t    return this._folderName;\n\t  },\n\t  set: function (value) {\n\t    this._folderName = value;\n\t  }\n\t});\n\t\n\t/**\n\t * basename of path without extension\n\t */\n\tObject.defineProperty(MavensMateFile.prototype, 'extension', {\n\t  get: function () {\n\t    return this._extension;\n\t  },\n\t  set: function (value) {\n\t    this._extension = value;\n\t  }\n\t});\n\t\n\t/**\n\t * name when referenced via package.xml\n\t */\n\tObject.defineProperty(MavensMateFile.prototype, 'packageName', {\n\t  get: function () {\n\t    if (this.classification === types.METADATA_FOLDER_ITEM) {\n\t      return this.folderName + '/' + this.name;\n\t    } else {\n\t      return this.name;\n\t    }\n\t  }\n\t});\n\t\n\tObject.defineProperty(MavensMateFile.prototype, 'isToolingType', {\n\t  get: function () {\n\t    var supportedExtensions = ['cls', 'trigger', 'page', 'component'];\n\t    return supportedExtensions.indexOf(this.extension) >= 0;\n\t  }\n\t});\n\t\n\tObject.defineProperty(MavensMateFile.prototype, 'isLightningType', {\n\t  get: function () {\n\t    return this.type.xmlName === 'AuraDefinitionBundle';\n\t  }\n\t});\n\t\n\t/**\n\t * Returns base name of lightning component (e.g. fooRenderer -> foo)\n\t * @return {String}\n\t */\n\tObject.defineProperty(MavensMateFile.prototype, 'lightningBaseName', {\n\t  get: function () {\n\t    var lbn = this.name;\n\t    if (util.endsWith(lbn, 'Controller')) {\n\t      lbn = lbn.replace(/Controller/, '');\n\t    } else if (util.endsWith(lbn, 'Helper')) {\n\t      lbn = lbn.replace(/Helper/, '');\n\t    }if (util.endsWith(lbn, 'Renderer')) {\n\t      lbn = lbn.replace(/Renderer/, '');\n\t    }\n\t    return lbn;\n\t  }\n\t});\n\t\n\tObject.defineProperty(MavensMateFile.prototype, 'lightningType', {\n\t  get: function () {\n\t    if (this.extension === 'css') {\n\t      return 'STYLE';\n\t    } else if (this.extension === 'app') {\n\t      return 'APPLICATION';\n\t    } else if (this.extension === 'auradoc') {\n\t      return 'DOCUMENTATION';\n\t    } else if (this.extension === 'cmp') {\n\t      return 'COMPONENT';\n\t    } else if (this.extension === 'evt') {\n\t      return 'EVENT';\n\t    } else if (this.extension === 'intf') {\n\t      return 'INTERFACE';\n\t    } else if (this.extension === 'js') {\n\t      if (util.endsWith(this.name, 'Controller')) {\n\t        return 'CONTROLLER';\n\t      } else if (util.endsWith(this.name, 'Helper')) {\n\t        return 'HELPER';\n\t      } else if (util.endsWith(this.name, 'Renderer')) {\n\t        return 'RENDERER';\n\t      }\n\t    }\n\t  }\n\t});\n\t\n\t/**\n\t * classification of the path\n\t */\n\tObject.defineProperty(MavensMateFile.prototype, 'classification', {\n\t  get: function () {\n\t    if (this.type.inFolder) {\n\t      var inFolderTypeDirectoryNames = this.metadataHelper.inFolderDirectoryNames;\n\t      if (this.isDirectory) {\n\t        if (inFolderTypeDirectoryNames.indexOf(path.basename(path.dirname(this.path))) >= 0) {\n\t          return types.TOP_LEVEL_METADATA_DIRECTORY;\n\t        } else {\n\t          return types.METADATA_FOLDER;\n\t        }\n\t      } else {\n\t        return types.METADATA_FOLDER_ITEM;\n\t      }\n\t    } else if (this.type.xmlName === 'AuraDefinitionBundle') {\n\t      if (this.isDirectory) {\n\t        return types.LIGHTNING_BUNDLE;\n\t      } else {\n\t        return types.LIGHTNING_BUNDLE_ITEM;\n\t      }\n\t    } else {\n\t      if (this.isDirectory) {\n\t        return types.TOP_LEVEL_METADATA_DIRECTORY;\n\t      } else {\n\t        return types.TOP_LEVEL_METADATA_FILE;\n\t      }\n\t    }\n\t  }\n\t});\n\t\n\t/**\n\t * Local file body (source code, conents, etc.)\n\t */\n\tObject.defineProperty(MavensMateFile.prototype, 'body', {\n\t  get: function () {\n\t    if (this.isDirectory) {\n\t      throw new Error('Can not get body of directory');\n\t    }\n\t    return util.getFileBody(this.path);\n\t  }\n\t});\n\t\n\t/**\n\t * Returns whether this path type requires a corresponding meta file\n\t * @return {String}\n\t */\n\tObject.defineProperty(MavensMateFile.prototype, 'hasMetaFile', {\n\t  get: function () {\n\t    return this.type.metaFile === true;\n\t  }\n\t});\n\t\n\t/**\n\t* Whether the instance exists on the disk (or virtual disk (future))\n\t* @return {Boolean}\n\t*/\n\tObject.defineProperty(MavensMateFile.prototype, 'existsOnFileSystem', {\n\t  get: function () {\n\t    return this.path ? fs.existsSync(this.path) : false;\n\t  }\n\t});\n\t\n\t/**\n\t * Whether this is a -meta.xml file\n\t * @return {Boolean}\n\t */\n\tObject.defineProperty(MavensMateFile.prototype, 'isMetaFile', {\n\t  get: function () {\n\t    return util.endsWith(this.path, '-meta.xml');\n\t  }\n\t});\n\t\n\t/**\n\t * Id of the file on the server\n\t */\n\tObject.defineProperty(MavensMateFile.prototype, 'id', {\n\t  get: function () {\n\t    try {\n\t      if (this.isDirectory) {\n\t        throw new Error('Cannot get server id for directory.');\n\t      } else {\n\t        // determine id (useful for lightning/apex/vf types bc tooling api is preferential to ids)\n\t        if (this.isLightningType && this.project) {\n\t          var lightningIndex = this.project.getLightningIndexSync();\n\t          return _.find(lightningIndex, { AuraDefinitionBundle: { DeveloperName: this.lightningBaseName }, DefType: this.lightningType }).Id;\n\t        } else if (this.project) {\n\t          return this.project.getLocalStore()[this.basename].id;\n\t        }\n\t      }\n\t    } catch (e) {\n\t      logger.debug('Could not determine metadata id: ' + e.message);\n\t    }\n\t  }\n\t});\n\t\n\tObject.defineProperty(MavensMateFile.prototype, 'localStoreEntry', {\n\t  get: function () {\n\t    try {\n\t      if (this.isDirectory || this.isLightningType) {\n\t        throw new Error('Cannot get local store entry for directories or lightning types currently.');\n\t      } else {\n\t        return this.project.getLocalStore()[this.basename];\n\t      }\n\t    } catch (e) {\n\t      logger.debug('Could not determine local store entry: ' + e.message);\n\t    }\n\t  }\n\t});\n\t\n\tObject.defineProperty(MavensMateFile.prototype, 'serverCopy', {\n\t  get: function () {\n\t    var self = this;\n\t    return new Promise(function (resolve, reject) {\n\t      try {\n\t        if (self.isDirectory || self.isLightningType) {\n\t          throw new Error('Cannot get server contents for directories or lightning types currently.');\n\t        } else {\n\t          if (!self.project) {\n\t            throw new Error('Cannot get server contents without a valid project instance.');\n\t          }\n\t          var supportedTypeXmlNames = ['ApexClass', 'ApexPage', 'ApexComponent', 'ApexTrigger'];\n\t          if (supportedTypeXmlNames.indexOf(self.type.xmlName) === -1) {\n\t            throw new Error('serverContents only supports Apex types.');\n\t          }\n\t\n\t          var bodyField = self.type.xmlName === 'ApexPage' || self.type.xmlName === 'ApexComponent' ? 'Markup' : 'Body';\n\t          var soql = 'Select LastModifiedById, LastModifiedDate, LastModifiedBy.Name, ' + bodyField + ' From ' + self.type.xmlName + ' Where Name = \\'' + self.name + '\\'';\n\t          self.project.sfdcClient.conn.query(soql, function (err, result) {\n\t            if (err) {\n\t              logger.debug('could not get server contents: ' + err.message);\n\t              return reject(err);\n\t            } else if (result.records.length == 0) {\n\t              var err = new Error('Server copy query returned no results: ' + soql);\n\t              logger.debug(err.message);\n\t              return reject(err);\n\t            }\n\t            result.records[0].Body = result.records[0][bodyField];\n\t            resolve(result.records[0]);\n\t          });\n\t        }\n\t      } catch (e) {\n\t        logger.debug('Could not determine local store entry: ' + e.message);\n\t        reject(e);\n\t      }\n\t    });\n\t  }\n\t});\n\t\n\t/**\n\t * local files in this directory\n\t */\n\tObject.defineProperty(MavensMateFile.prototype, 'localMembers', {\n\t  get: function () {\n\t    if (!this.isDirectory) {\n\t      throw new Error('localMembers property is only supported for directory types');\n\t    }\n\t    var self = this;\n\t    var contents = [];\n\t    var directoryFiles = fs.readdirSync(self.path);\n\t    _.each(directoryFiles, function (f) {\n\t      contents.push(new MavensMateFile({ path: path.join(self.path, f), project: self.project }));\n\t      if (!path.extname(f)) {\n\t        var subDirectoryFiles = fs.readdirSync(path.join(self.path, f));\n\t        _.each(subDirectoryFiles, function (sf) {\n\t          contents.push(new MavensMateFile({ path: path.join(self.path, f, sf), project: self.project }));\n\t        });\n\t      }\n\t    });\n\t    return contents;\n\t  }\n\t});\n\t\n\t/**\n\t * Returns base name of the folder (e.g. path/to/src/documents/foldername/foo.txt -> foldername)\n\t * Currently, salesforce does not support folders nested deeper than 1 level\n\t * @return {String}\n\t */\n\tObject.defineProperty(MavensMateFile.prototype, 'folderBaseName', {\n\t  get: function () {\n\t    var folderPath = path.dirname(this.path);\n\t    return path.basename(folderPath);\n\t  }\n\t});\n\t\n\t/**\n\t * template\n\t * @return {Object}\n\t */\n\tObject.defineProperty(MavensMateFile.prototype, 'template', {\n\t  get: function () {\n\t    return this._template;\n\t  },\n\t  set: function (value) {\n\t    this._template = value;\n\t  }\n\t});\n\t\n\t/**\n\t * Returns base name of the package.xml subscription\n\t * @return {String}\n\t */\n\tObject.defineProperty(MavensMateFile.prototype, 'subscriptionName', {\n\t  get: function () {\n\t    if (this.type.inFolder) {\n\t      if (this.type.xmlName === 'Document') {\n\t        return this.folderBaseName + '/' + this.name + '.' + this.extension;\n\t      } else {\n\t        return this.folderBaseName + '/' + this.name;\n\t      }\n\t    } else {\n\t      return this.name;\n\t    }\n\t  }\n\t});\n\t\n\tMavensMateFile.prototype.setTypeByXmlName = function (xmlName) {\n\t  this.type = this.metadataHelper.getTypeByXmlName(xmlName);\n\t};\n\t\n\tMavensMateFile.prototype.setAbstractPath = function () {\n\t  this.path = this.type.directoryName + '/' + this.name + '.' + this.type.suffix;\n\t  this.extension = this.type.suffix;\n\t  this.basename = path.basename(this.path);\n\t  this.name = this.basename.split('.')[0];\n\t  this.folderName = path.basename(path.dirname(this.path));\n\t};\n\t\n\t/**\n\t * Returns the MavensMate-Templates template body based on this.template\n\t * @return {Promise} - resolves with {String} template body\n\t */\n\tMavensMateFile.prototype._getTemplateBody = function () {\n\t  var self = this;\n\t  return new Promise(function (resolve, reject) {\n\t    try {\n\t      var templateService = new TemplateService();\n\t      resolve(templateService.getTemplateBody(self.type.xmlName, self.template.file_name));\n\t    } catch (e) {\n\t      logger.error('Could not get template body', e);\n\t      reject(e);\n\t    }\n\t  });\n\t};\n\t\n\tMavensMateFile.prototype.mergeTemplate = function () {\n\t  var self = this;\n\t  return new Promise(function (resolve, reject) {\n\t    var apiName = self.name;\n\t    self._getTemplateBody().then(function (templateBody) {\n\t      resolve(swig.render(templateBody, { locals: self.templateValues }));\n\t    }).catch(function (err) {\n\t      reject(err);\n\t    }).done();\n\t  });\n\t};\n\t\n\t/**\n\t * Renders template and writes to appropriate destination\n\t * @param  {String} deployPath\n\t * @return {Promise}\n\t */\n\tMavensMateFile.prototype.renderAndWriteToDisk = function (destination) {\n\t  var self = this;\n\t  return new Promise(function (resolve, reject) {\n\t    var apiName = self.name;\n\t    self._getTemplateBody().then(function (templateBody) {\n\t      var filePath = path.join(destination, self.type.directoryName, [apiName, self.type.suffix].join('.'));\n\t      var fileBody = swig.render(templateBody, { locals: self.templateValues });\n\t      fs.outputFileSync(filePath, fileBody);\n\t\n\t      if (self.hasMetaFile) {\n\t        var metaFilePath = path.join(destination, self.type.directoryName, [apiName, self.type.suffix + '-meta.xml'].join('.'));\n\t        var metaFileBody = swig.renderFile(path.join(__dirname, 'templates', 'meta.xml'), {\n\t          metadata: self,\n\t          apiVersion: config.get('mm_api_version')\n\t        });\n\t        fs.outputFileSync(metaFilePath, metaFileBody);\n\t      }\n\t      resolve();\n\t    }).catch(function (err) {\n\t      reject(new Error('Could not write metadata file based on template: ' + err));\n\t    }).done();\n\t  });\n\t};\n\t\n\tMavensMateFile.prototype.writeToDiskSync = function (body) {\n\t  body = body || '';\n\t  if (this.isDirectory && this.path) {\n\t    fs.ensureDirSync(this.path);\n\t  } else if (!this.isDirectory && this.path) {\n\t    fs.outputFileSync(this.path, body);\n\t  }\n\t};\n\t\n\tMavensMateFile.prototype.deleteLocally = function () {\n\t  if (this.hasMetaFile && fs.existsSync(this.path + '-meta.xml')) {\n\t    fs.removeSync(this.path + '-meta.xml');\n\t  }\n\t  if (this.existsOnFileSystem) {\n\t    fs.removeSync(this.path);\n\t  }\n\t};\n\t\n\tmodule.exports.createFileInstances = function (paths, project) {\n\t  var files = [];\n\t  _.each(paths, function (p) {\n\t    files.push(new MavensMateFile({ path: p, project: project }));\n\t  });\n\t  return files;\n\t};\n\t\n\tmodule.exports.getLightningBundleItemFiles = function (files) {\n\t  return _.filter(files, function (f) {\n\t    return f.classification === types.LIGHTNING_BUNDLE_ITEM;\n\t  });\n\t};\n\t\n\tmodule.exports.getToolingFiles = function (files, exludeToolingMetadata) {\n\t  return _.filter(files, function (f) {\n\t    return !exludeToolingMetadata && f.isToolingType;\n\t  });\n\t};\n\t\n\tmodule.exports.getMetadataApiFiles = function (files, exludeToolingMetadata) {\n\t  return _.filter(files, function (f) {\n\t    if (f.isMetaFile) {\n\t      return true;\n\t    } else if (f.classification === types.LIGHTNING_BUNDLE_ITEM) {\n\t      return false;\n\t    } else if (exludeToolingMetadata && f.isToolingType) {\n\t      return false;\n\t    }\n\t    return true;\n\t  });\n\t};\n\t\n\tmodule.exports.createPackageSubscription = function (files, projectPackageXml, exludeToolingMetadata) {\n\t  var subscription = {};\n\t  var projectSubscription = {};\n\t  if (projectPackageXml) {\n\t    projectSubscription = projectPackageXml.subscription;\n\t  }\n\t  _.each(files, function (f) {\n\t    if (f.isToolingType && exludeToolingMetadata) {\n\t      return; // (continue)\n\t    }\n\t    if (f.classification === types.TOP_LEVEL_METADATA_DIRECTORY && projectSubscription) {\n\t      // classes, ApexClass\n\t      subscription[f.type.xmlName] = projectSubscription[f.type.xmlName];\n\t    } else if (f.classification === types.TOP_LEVEL_METADATA_FILE) {\n\t      if (subscription[f.type.xmlName]) {\n\t        if (subscription[f.type.xmlName] !== '*') {\n\t          subscription[f.type.xmlName].push(f.packageName);\n\t        }\n\t      } else {\n\t        subscription[f.type.xmlName] = [f.packageName];\n\t      }\n\t    } else if (f.classification === types.METADATA_FOLDER || f.classification === types.METADATA_FOLDER_ITEM) {\n\t      if (subscription[f.type.xmlName]) {\n\t        subscription[f.type.xmlName].push(f.packageName);\n\t      } else {\n\t        subscription[f.type.xmlName] = [f.packageName];\n\t      }\n\t    } else if (f.classification === types.LIGHTNING_BUNDLE) {\n\t      if (subscription[f.type.xmlName]) {\n\t        subscription[f.type.xmlName].push(f.packageName);\n\t      } else {\n\t        subscription[f.type.xmlName] = [f.packageName];\n\t      }\n\t    }\n\t  });\n\t  return subscription;\n\t};\n\t\n\tmodule.exports.types = types;\n\tmodule.exports.MavensMateFile = MavensMateFile;\n\t/* WEBPACK VAR INJECTION */}.call(exports, \"/\"))\n\n/***/ },\n/* 12 */\n/***/ function(module, exports) {\n\n\tmodule.exports = require(\"express\");\n\n/***/ },\n/* 13 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * @file Store of async requests submitted to the server\n\t * @author Joseph Ferraro <@joeferraro>\n\t */\n\t\n\t'use strict';\n\t\n\tvar _ = __webpack_require__(7);\n\tvar uuid = __webpack_require__(35);\n\tvar events = __webpack_require__(25);\n\tvar logger = __webpack_require__(4);\n\tvar inherits = __webpack_require__(2);\n\t\n\tvar RequestStore = function () {};\n\t\n\tinherits(RequestStore, events.EventEmitter);\n\t\n\t/**\n\t * Hash of requestId --> request\n\t * @type {Object}\n\t */\n\tRequestStore.prototype.requests = {};\n\t\n\t/**\n\t * Adds a request to the store\n\t * @param {Promise} thenable\n\t */\n\tRequestStore.prototype.add = function (thenable) {\n\t  var self = this;\n\t  var request, requestId;\n\t  requestId = uuid.v1();\n\t  request = {\n\t    id: requestId,\n\t    complete: false,\n\t    thenable: thenable\n\t  };\n\t  thenable.then(function (res) {\n\t    self._finish(requestId, null, res);\n\t  }).catch(function (err) {\n\t    self._finish(requestId, err, null);\n\t  });\n\t  this.requests[requestId] = request;\n\t  this.emit('new-request', requestId);\n\t  return requestId;\n\t};\n\t\n\t/**\n\t * Checks whether the request is complete\n\t * @param  {String}  requestId\n\t * @return {Boolean}           whether the request is complete\n\t */\n\tRequestStore.prototype.isRequestComplete = function (requestId) {\n\t  return this.requests[requestId].complete;\n\t};\n\t\n\t/**\n\t * Returns the result for a requestid\n\t * @param  {String} requestId\n\t * @return {Object}\n\t */\n\tRequestStore.prototype.getResultForId = function (requestId) {\n\t  var p = _.clone(this.requests[requestId]);\n\t  delete p.thenable;\n\t  delete this.requests[requestId];\n\t  return p;\n\t};\n\t\n\t/**\n\t * TODO: we're doing a lot of gymnastics with the error/result objects, need to standardize with command.js's respond\n\t * @param  {String} requestId  - id of the job to mark as complete\n\t * @param  {Object} error  - should be an error object, but see TODO\n\t * @param  {Object} result - result object, typically formatted like { response: {  } }\n\t * @return {Nothing}\n\t */\n\tRequestStore.prototype._finish = function (requestId, error, result) {\n\t  logger.debug('finishing requestId: ' + requestId);\n\t  if (error) {\n\t    logger.error(error);\n\t  } else if (result) {\n\t    logger.silly(result);\n\t  }\n\t  if (error && error instanceof Error) {\n\t    this.requests[requestId].error = error.message;\n\t    this.requests[requestId].stack = error.stack;\n\t  } else if (result) {\n\t    this.requests[requestId].result = result;\n\t  } else {\n\t    logger.error('Could not set request', requestId, 'as finished', error, result);\n\t    throw new Error('Could not finish request ' + requestId);\n\t  }\n\t  this.emit('finish-request', requestId);\n\t  this.requests[requestId].complete = true;\n\t};\n\t\n\tmodule.exports = new RequestStore();\n\n/***/ },\n/* 14 */\n/***/ function(module, exports) {\n\n\tmodule.exports = require('electron');\n\n/***/ },\n/* 15 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * @file Metadata helper classes\n\t * @author Joseph Ferraro <@joeferraro>\n\t */\n\t\n\t'use strict';\n\t\n\tvar _ = __webpack_require__(7);\n\tvar fs = __webpack_require__(10);\n\tvar path = __webpack_require__(6);\n\tvar util = __webpack_require__(3);\n\tvar logger = __webpack_require__(4);\n\t// var MavensMateFile  = require('./file').MavensMateFile;\n\t\n\tvar LightningBundle, MetadataHelper;\n\t\n\t/**\n\t * Represents an element of Salesforce.com metadata\n\t * @constructor\n\t * @param {Project} project - project instance\n\t * @param {String} path - path to lightning bundle\n\t */\n\tLightningBundle = function (path, project) {\n\t    this.project = project;\n\t    this.path = path;\n\t};\n\t\n\t// Object.defineProperty(LightningBundle.prototype, 'bundleItems', {\n\t//   get: function() {\n\t//     var self = this;\n\t//     var bundleFiles = [];\n\t//     var bfs = fs.readdirSync(self.path);\n\t//     _.each(bfs, function(bf) {\n\t//       bundleFiles.push(new MavensMateFile({ project: self.project, path: bf }));\n\t//     });\n\t//   }\n\t// });\n\t\n\tObject.defineProperty(LightningBundle.prototype, 'serverContents', {\n\t    get: function () {\n\t        // TODO\n\t    }\n\t});\n\t\n\tMetadataHelper = function (opts) {\n\t    util.applyProperties(this, opts);\n\t    if (this.sfdcClient) {\n\t        if (this.sfdcClient.describeCache && this.sfdcClient.describeCache.metadataObjects) {\n\t            this.describe = this.sfdcClient.describeCache;\n\t        } else {\n\t            this.describe = {};\n\t            this.describe.metadataObjects = this.parentTypes;\n\t        }\n\t    } else {\n\t        this.describe = {};\n\t        this.describe.metadataObjects = this.parentTypes;\n\t    }\n\t};\n\t\n\t/**\n\t * Attempts to get the metadata type based on the supplied path (could be file path or directory path)\n\t * @param  {String} p - /path/to/some/metadata.foo\n\t * @return {Object}\n\t */\n\tMetadataHelper.prototype.getTypeByPath = function (p) {\n\t    var parentPath = path.dirname(p);\n\t    var grandparentPath = path.dirname(path.dirname(p));\n\t    if (!path.extname(p) && path.basename(parentPath) === 'aura') {\n\t        return this.getTypeByDirectoryName('aura');\n\t    } else if (path.basename(grandparentPath) === 'aura') {\n\t        return this.getTypeByDirectoryName('aura');\n\t    } else {\n\t        var folderBasedTypes = _.where(this.parentTypes, { 'inFolder': true });\n\t\n\t        // directory handling\n\t        if (!path.extname(p)) {\n\t\n\t            // foo/bar/src/classes\n\t            var directoryMatch = _.find(this.parentTypes, { 'directoryName': path.basename(p) });\n\t            if (directoryMatch) {\n\t                return this.getTypeByDirectoryName(path.basename(p));\n\t            }\n\t\n\t            //foo/bar/src/reports/myreportfolder\n\t            var parentFolderDirectoryMatch = _.find(folderBasedTypes, { 'directoryName': path.basename(parentPath) });\n\t            if (parentFolderDirectoryMatch) {\n\t                return this.getTypeByDirectoryName(path.basename(parentPath));\n\t            }\n\t        }\n\t\n\t        var ext;\n\t        if (util.endsWith(p, '-meta.xml')) {\n\t            ext = p.replace('-meta.xml', '').split('.').pop();\n\t        } else {\n\t            ext = p.split('.').pop();\n\t        }\n\t        var typeBySuffix = this.getTypeBySuffix(ext);\n\t        if (typeBySuffix) {\n\t            return typeBySuffix;\n\t        }\n\t\n\t        //deeply-nested file handling (report/email template/document)\n\t        //foo/bar/src/email/myfolder/foo.email\n\t        var grandparentFolderDirectoryMatch = _.find(folderBasedTypes, { 'directoryName': path.basename(grandparentPath) });\n\t        if (grandparentFolderDirectoryMatch) {\n\t            return this.getTypeByDirectoryName(path.basename(grandparentPath));\n\t        }\n\t\n\t        // email templates, for example, will have a -meta.xml file that holds folder metadata\n\t        if (util.endsWith(p, '-meta.xml')) {\n\t            return this.getTypeByDirectoryName(path.basename(parentPath));\n\t        }\n\t    }\n\t};\n\t\n\t/**\n\t * Gets metadata type based on the supplied name\n\t * @param  {String} name - ApexClass|ApexPage|etc.\n\t * @return {Object}\n\t */\n\tMetadataHelper.prototype.getTypeByXmlName = function (name) {\n\t    var type;\n\t    var self = this;\n\t    type = _.find(self.describe.metadataObjects, function (metadataType) {\n\t        return metadataType.xmlName === name;\n\t    });\n\t    if (!type) {\n\t        type = _.find(self.childTypes, function (childType) {\n\t            return childType.xmlName === name;\n\t        });\n\t    }\n\t    if (!type) {\n\t        type = _.find(self.parentTypes, function (parentType) {\n\t            return parentType.xmlName === name;\n\t        });\n\t    }\n\t    logger.silly('getting metadata type by name: ' + name);\n\t    logger.silly(type);\n\t    return type;\n\t};\n\t\n\t/**\n\t * Gets metadata type based on the supplied suffix\n\t * @param  {String} suffix - cls|trigger|page|component|etc.\n\t * @return {Object}\n\t */\n\tMetadataHelper.prototype.getTypeBySuffix = function (suffix) {\n\t    var type;\n\t    var self = this;\n\t    if (suffix.indexOf('.') >= 0) {\n\t        suffix = suffix.replace(/\\./g, '');\n\t    }\n\t    _.each(self.describe.metadataObjects, function (metadataType) {\n\t        if (metadataType.suffix === suffix) {\n\t            type = metadataType;\n\t            return false;\n\t        }\n\t    });\n\t    return type;\n\t};\n\t\n\t/**\n\t * Gets metadata type based on the supplied directory name\n\t * @param  {String} suffix - pages|triggers|classes|etc.\n\t * @return {Object}\n\t */\n\tMetadataHelper.prototype.getTypeByDirectoryName = function (dirName) {\n\t    var type;\n\t    var self = this;\n\t    _.each(self.describe.metadataObjects, function (metadataType) {\n\t        if (metadataType.directoryName === dirName) {\n\t            type = metadataType;\n\t            return false;\n\t        }\n\t    });\n\t    if (type === undefined) {\n\t        _.each(self.parentTypes, function (parentType) {\n\t            if (parentType.directoryName === dirName) {\n\t                type = parentType;\n\t                return false;\n\t            }\n\t        });\n\t    }\n\t    return type;\n\t};\n\t\n\tMetadataHelper.prototype.childTypes = [{ 'xmlName': 'ActionOverride', 'tagName': 'actionOverrides', 'parentXmlName': 'CustomObject' }, { 'xmlName': 'CustomField', 'tagName': 'fields', 'parentXmlName': 'CustomObject' }, { 'xmlName': 'BusinessProcess', 'tagName': 'businessProcesses', 'parentXmlName': 'CustomObject' }, { 'xmlName': 'RecordType', 'tagName': 'recordTypes', 'parentXmlName': 'CustomObject' }, { 'xmlName': 'WebLink', 'tagName': 'webLinks', 'parentXmlName': 'CustomObject' }, { 'xmlName': 'ValidationRule', 'tagName': 'validationRules', 'parentXmlName': 'CustomObject' }, { 'xmlName': 'NamedFilter', 'tagName': 'namedFilters', 'parentXmlName': 'CustomObject' }, { 'xmlName': 'SharingReason', 'tagName': 'sharingReasons', 'parentXmlName': 'CustomObject' }, { 'xmlName': 'ListView', 'tagName': 'listViews', 'parentXmlName': 'CustomObject' }, { 'xmlName': 'FieldSet', 'tagName': 'fieldSets', 'parentXmlName': 'CustomObject' }, { 'xmlName': 'SharingRecalculation', 'tagName': 'sharingRecalculations', 'parentXmlName': 'CustomObject' }, { 'xmlName': 'CompactLayout', 'tagName': 'compactLayouts', 'parentXmlName': 'CustomObject' }, { 'xmlName': 'CustomLabel', 'tagName': 'customLabels', 'parentXmlName': 'CustomLabels' }, { 'xmlName': 'SharingCriteriaRule', 'tagName': 'sharingCriteriaRules', 'parentXmlName': 'SharingRules' }, { 'xmlName': 'SharingOwnerRule', 'tagName': 'sharingOwnerRules', 'parentXmlName': 'SharingRules' }, { 'xmlName': 'SharingTerritoryRule', 'tagName': 'sharingTerritoryRules', 'parentXmlName': 'SharingRules' }, { 'xmlName': 'WorkflowAlert', 'tagName': 'alerts', 'parentXmlName': 'Workflow' }, { 'xmlName': 'WorkflowTask', 'tagName': 'tasks', 'parentXmlName': 'Workflow' }, { 'xmlName': 'WorkflowOutboundMessage', 'tagName': 'outboundMessages', 'parentXmlName': 'Workflow' }, { 'xmlName': 'WorkflowFieldUpdate', 'tagName': 'fieldUpdates', 'parentXmlName': 'Workflow' }, { 'xmlName': 'WorkflowRule', 'tagName': 'rules', 'parentXmlName': 'Workflow' }, { 'xmlName': 'WorkflowEmailRecipient', 'tagName': 'emailRecipients', 'parentXmlName': 'Workflow' }, { 'xmlName': 'WorkflowTimeTrigger', 'tagName': 'timeTriggers', 'parentXmlName': 'Workflow' }, { 'xmlName': 'WorkflowActionReference', 'tagName': 'actionReferences', 'parentXmlName': 'Workflow' }];\n\t\n\tMetadataHelper.prototype.parentTypes = [{\n\t    'directoryName': 'customMetadata',\n\t    'inFolder': false,\n\t    'metaFile': false,\n\t    'suffix': 'md',\n\t    'xmlName': 'CustomMetadata'\n\t}, {\n\t    'directoryName': 'installedPackages',\n\t    'inFolder': false,\n\t    'metaFile': false,\n\t    'suffix': 'installedPackage',\n\t    'xmlName': 'InstalledPackage'\n\t}, {\n\t    'childXmlNames': 'CustomLabel',\n\t    'directoryName': 'labels',\n\t    'inFolder': false,\n\t    'metaFile': false,\n\t    'suffix': 'labels',\n\t    'xmlName': 'CustomLabels'\n\t}, {\n\t    'directoryName': 'staticresources',\n\t    'inFolder': false,\n\t    'metaFile': true,\n\t    'suffix': 'resource',\n\t    'xmlName': 'StaticResource'\n\t}, {\n\t    'directoryName': 'scontrols',\n\t    'inFolder': false,\n\t    'metaFile': true,\n\t    'suffix': 'scf',\n\t    'xmlName': 'Scontrol'\n\t}, {\n\t    'directoryName': 'components',\n\t    'inFolder': false,\n\t    'metaFile': true,\n\t    'suffix': 'component',\n\t    'xmlName': 'ApexComponent'\n\t}, {\n\t    'directoryName': 'pages',\n\t    'inFolder': false,\n\t    'metaFile': true,\n\t    'suffix': 'page',\n\t    'xmlName': 'ApexPage'\n\t}, {\n\t    'directoryName': 'queues',\n\t    'inFolder': false,\n\t    'metaFile': false,\n\t    'suffix': 'queue',\n\t    'xmlName': 'Queue'\n\t}, {\n\t    'childXmlNames': ['CustomField', 'BusinessProcess', 'CompactLayout', 'RecordType', 'WebLink', 'ValidationRule', 'NamedFilter', 'SharingReason', 'ListView', 'FieldSet', 'ApexTriggerCoupling'],\n\t    'directoryName': 'objects',\n\t    'inFolder': false,\n\t    'metaFile': false,\n\t    'suffix': 'object',\n\t    'xmlName': 'CustomObject'\n\t}, {\n\t    'directoryName': 'reportTypes',\n\t    'inFolder': false,\n\t    'metaFile': false,\n\t    'suffix': 'reportType',\n\t    'xmlName': 'ReportType'\n\t}, {\n\t    'directoryName': 'reports',\n\t    'inFolder': true,\n\t    'metaFile': false,\n\t    'suffix': 'report',\n\t    'xmlName': 'Report'\n\t}, {\n\t    'directoryName': 'dashboards',\n\t    'inFolder': true,\n\t    'metaFile': false,\n\t    'suffix': 'dashboard',\n\t    'xmlName': 'Dashboard'\n\t}, {\n\t    'directoryName': 'analyticSnapshots',\n\t    'inFolder': false,\n\t    'metaFile': false,\n\t    'suffix': 'snapshot',\n\t    'xmlName': 'AnalyticSnapshot'\n\t}, {\n\t    'directoryName': 'layouts',\n\t    'inFolder': false,\n\t    'metaFile': false,\n\t    'suffix': 'layout',\n\t    'xmlName': 'Layout'\n\t}, {\n\t    'directoryName': 'portals',\n\t    'inFolder': false,\n\t    'metaFile': false,\n\t    'suffix': 'portal',\n\t    'xmlName': 'Portal'\n\t}, {\n\t    'directoryName': 'documents',\n\t    'inFolder': true,\n\t    'metaFile': true,\n\t    'xmlName': 'Document'\n\t}, {\n\t    'directoryName': 'weblinks',\n\t    'inFolder': false,\n\t    'metaFile': false,\n\t    'suffix': 'weblink',\n\t    'xmlName': 'CustomPageWebLink'\n\t}, {\n\t    'directoryName': 'quickActions',\n\t    'inFolder': false,\n\t    'metaFile': false,\n\t    'suffix': 'quickAction',\n\t    'xmlName': 'QuickAction'\n\t}, {\n\t    'childXmlNames': {\n\t        '@xsi:nil': 'true'\n\t    },\n\t    'directoryName': 'flexipages',\n\t    'inFolder': false,\n\t    'metaFile': false,\n\t    'suffix': 'flexipage',\n\t    'xmlName': 'FlexiPage'\n\t}, {\n\t    'directoryName': 'tabs',\n\t    'inFolder': false,\n\t    'metaFile': false,\n\t    'suffix': 'tab',\n\t    'xmlName': 'CustomTab'\n\t}, {\n\t    'directoryName': 'customApplicationComponents',\n\t    'inFolder': false,\n\t    'metaFile': false,\n\t    'suffix': 'customApplicationComponent',\n\t    'xmlName': 'CustomApplicationComponent'\n\t}, {\n\t    'directoryName': 'applications',\n\t    'inFolder': false,\n\t    'metaFile': false,\n\t    'suffix': 'app',\n\t    'xmlName': 'CustomApplication'\n\t}, {\n\t    'directoryName': 'letterhead',\n\t    'inFolder': false,\n\t    'metaFile': false,\n\t    'suffix': 'letter',\n\t    'xmlName': 'Letterhead'\n\t}, {\n\t    'directoryName': 'email',\n\t    'inFolder': true,\n\t    'metaFile': true,\n\t    'suffix': 'email',\n\t    'xmlName': 'EmailTemplate'\n\t}, {\n\t    'childXmlNames': ['WorkflowFieldUpdate', 'WorkflowKnowledgePublish', 'WorkflowQuickCreate', 'WorkflowTask', 'WorkflowChatterPost', 'WorkflowAlert', 'WorkflowSend', 'WorkflowOutboundMessage', 'WorkflowActionFlow', 'WorkflowApex', 'WorkflowRule'],\n\t    'directoryName': 'workflows',\n\t    'inFolder': false,\n\t    'metaFile': false,\n\t    'suffix': 'workflow',\n\t    'xmlName': 'Workflow'\n\t}, {\n\t    'childXmlNames': 'AssignmentRule',\n\t    'directoryName': 'assignmentRules',\n\t    'inFolder': false,\n\t    'metaFile': false,\n\t    'suffix': 'assignmentRules',\n\t    'xmlName': 'AssignmentRules'\n\t}, {\n\t    'childXmlNames': 'AutoResponseRule',\n\t    'directoryName': 'autoResponseRules',\n\t    'inFolder': false,\n\t    'metaFile': false,\n\t    'suffix': 'autoResponseRules',\n\t    'xmlName': 'AutoResponseRules'\n\t}, {\n\t    'childXmlNames': 'EscalationRule',\n\t    'directoryName': 'escalationRules',\n\t    'inFolder': false,\n\t    'metaFile': false,\n\t    'suffix': 'escalationRules',\n\t    'xmlName': 'EscalationRules'\n\t}, {\n\t    'directoryName': 'roles',\n\t    'inFolder': false,\n\t    'metaFile': false,\n\t    'suffix': 'role',\n\t    'xmlName': 'Role'\n\t}, {\n\t    'directoryName': 'groups',\n\t    'inFolder': false,\n\t    'metaFile': false,\n\t    'suffix': 'group',\n\t    'xmlName': 'Group'\n\t}, {\n\t    'directoryName': 'postTemplates',\n\t    'inFolder': false,\n\t    'metaFile': false,\n\t    'suffix': 'postTemplate',\n\t    'xmlName': 'PostTemplate'\n\t}, {\n\t    'directoryName': 'approvalProcesses',\n\t    'inFolder': false,\n\t    'metaFile': false,\n\t    'suffix': 'approvalProcess',\n\t    'xmlName': 'ApprovalProcess'\n\t}, {\n\t    'directoryName': 'homePageComponents',\n\t    'inFolder': false,\n\t    'metaFile': false,\n\t    'suffix': 'homePageComponent',\n\t    'xmlName': 'HomePageComponent'\n\t}, {\n\t    'directoryName': 'homePageLayouts',\n\t    'inFolder': false,\n\t    'metaFile': false,\n\t    'suffix': 'homePageLayout',\n\t    'xmlName': 'HomePageLayout'\n\t}, {\n\t    'directoryName': 'objectTranslations',\n\t    'inFolder': false,\n\t    'metaFile': false,\n\t    'suffix': 'objectTranslation',\n\t    'xmlName': 'CustomObjectTranslation'\n\t}, {\n\t    'directoryName': 'flows',\n\t    'inFolder': false,\n\t    'metaFile': false,\n\t    'suffix': 'flow',\n\t    'xmlName': 'Flow'\n\t}, {\n\t    'directoryName': 'classes',\n\t    'inFolder': false,\n\t    'metaFile': true,\n\t    'suffix': 'cls',\n\t    'xmlName': 'ApexClass'\n\t}, {\n\t    'directoryName': 'triggers',\n\t    'inFolder': false,\n\t    'metaFile': true,\n\t    'suffix': 'trigger',\n\t    'xmlName': 'ApexTrigger'\n\t}, {\n\t    'directoryName': 'profiles',\n\t    'inFolder': false,\n\t    'metaFile': false,\n\t    'suffix': 'profile',\n\t    'xmlName': 'Profile'\n\t}, {\n\t    'directoryName': 'permissionsets',\n\t    'inFolder': false,\n\t    'metaFile': false,\n\t    'suffix': 'permissionset',\n\t    'xmlName': 'PermissionSet'\n\t}, {\n\t    'directoryName': 'datacategorygroups',\n\t    'inFolder': false,\n\t    'metaFile': false,\n\t    'suffix': 'datacategorygroup',\n\t    'xmlName': 'DataCategoryGroup'\n\t}, {\n\t    'directoryName': 'remoteSiteSettings',\n\t    'inFolder': false,\n\t    'metaFile': false,\n\t    'suffix': 'remoteSite',\n\t    'xmlName': 'RemoteSiteSetting'\n\t}, {\n\t    'directoryName': 'authproviders',\n\t    'inFolder': false,\n\t    'metaFile': false,\n\t    'suffix': 'authprovider',\n\t    'xmlName': 'AuthProvider'\n\t}, {\n\t    'childXmlNames': ['LeadOwnerSharingRule', 'LeadCriteriaBasedSharingRule'],\n\t    'directoryName': 'leadSharingRules',\n\t    'inFolder': false,\n\t    'metaFile': false,\n\t    'suffix': 'sharingRules',\n\t    'xmlName': 'LeadSharingRules'\n\t}, {\n\t    'childXmlNames': ['CampaignOwnerSharingRule', 'CampaignCriteriaBasedSharingRule'],\n\t    'directoryName': 'campaignSharingRules',\n\t    'inFolder': false,\n\t    'metaFile': false,\n\t    'suffix': 'sharingRules',\n\t    'xmlName': 'CampaignSharingRules'\n\t}, {\n\t    'childXmlNames': ['CaseOwnerSharingRule', 'CaseCriteriaBasedSharingRule'],\n\t    'directoryName': 'caseSharingRules',\n\t    'inFolder': false,\n\t    'metaFile': false,\n\t    'suffix': 'sharingRules',\n\t    'xmlName': 'CaseSharingRules'\n\t}, {\n\t    'childXmlNames': ['ContactOwnerSharingRule', 'ContactCriteriaBasedSharingRule'],\n\t    'directoryName': 'contactSharingRules',\n\t    'inFolder': false,\n\t    'metaFile': false,\n\t    'suffix': 'sharingRules',\n\t    'xmlName': 'ContactSharingRules'\n\t}, {\n\t    'childXmlNames': ['OpportunityOwnerSharingRule', 'OpportunityCriteriaBasedSharingRule'],\n\t    'directoryName': 'opportunitySharingRules',\n\t    'inFolder': false,\n\t    'metaFile': false,\n\t    'suffix': 'sharingRules',\n\t    'xmlName': 'OpportunitySharingRules'\n\t}, {\n\t    'childXmlNames': ['AccountOwnerSharingRule', 'AccountCriteriaBasedSharingRule'],\n\t    'directoryName': 'accountSharingRules',\n\t    'inFolder': false,\n\t    'metaFile': false,\n\t    'suffix': 'sharingRules',\n\t    'xmlName': 'AccountSharingRules'\n\t}, {\n\t    'childXmlNames': ['CustomObjectOwnerSharingRule', 'CustomObjectCriteriaBasedSharingRule'],\n\t    'directoryName': 'customObjectSharingRules',\n\t    'inFolder': false,\n\t    'metaFile': false,\n\t    'suffix': 'sharingRules',\n\t    'xmlName': 'CustomObjectSharingRules'\n\t}, {\n\t    'directoryName': 'communities',\n\t    'inFolder': false,\n\t    'metaFile': false,\n\t    'suffix': 'community',\n\t    'xmlName': 'Community'\n\t}, {\n\t    'directoryName': 'callCenters',\n\t    'inFolder': false,\n\t    'metaFile': false,\n\t    'suffix': 'callCenter',\n\t    'xmlName': 'CallCenter'\n\t}, {\n\t    'directoryName': 'connectedApps',\n\t    'inFolder': false,\n\t    'metaFile': false,\n\t    'suffix': 'connectedApp',\n\t    'xmlName': 'ConnectedApp'\n\t}, {\n\t    'directoryName': 'samlssoconfigs',\n\t    'inFolder': false,\n\t    'metaFile': false,\n\t    'suffix': 'samlssoconfig',\n\t    'xmlName': 'SamlSsoConfig'\n\t}, {\n\t    'directoryName': 'synonymDictionaries',\n\t    'inFolder': false,\n\t    'metaFile': false,\n\t    'suffix': 'synonymDictionary',\n\t    'xmlName': 'SynonymDictionary'\n\t}, {\n\t    'directoryName': 'settings',\n\t    'inFolder': false,\n\t    'metaFile': false,\n\t    'suffix': 'settings',\n\t    'xmlName': 'Settings'\n\t}, {\n\t    'directoryName': 'aura',\n\t    'inFolder': false,\n\t    'metaFile': false,\n\t    'xmlName': 'AuraDefinitionBundle'\n\t}];\n\t\n\tMetadataHelper.prototype.inFolderDirectoryNames = function () {\n\t    var directoryNames = [];\n\t    var self = this;\n\t    var parentTypes = self.describe.metadataObjects && self.describe.metadataObjects.length > 0 ? self.describe.metadataObjects : self.parentTypes;\n\t    _.each(parentTypes, function (metadataType) {\n\t        if (metadataType.inFolder) {\n\t            directoryNames.push(metadataType.directoryName);\n\t        }\n\t    });\n\t    return directoryNames;\n\t};\n\t\n\tmodule.exports.LightningBundle = LightningBundle;\n\tmodule.exports.MetadataHelper = MetadataHelper;\n\n/***/ },\n/* 16 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * @file Responsible for CRUD of Lightning metadata\n\t * @author Joseph Ferraro <@joeferraro>\n\t */\n\t\n\t'use strict';\n\t\n\tvar Promise = __webpack_require__(1);\n\tvar _ = __webpack_require__(7);\n\tvar path = __webpack_require__(6);\n\tvar logger = __webpack_require__(4);\n\tvar util = __webpack_require__(3);\n\t\n\t// TODO: move source strings to swig templates\n\t\n\tvar LightningService = function (project) {\n\t  this.project = project;\n\t};\n\t\n\tLightningService.prototype.getAll = function () {\n\t  var self = this;\n\t  return new Promise(function (resolve, reject) {\n\t    self.project.sfdcClient.conn.tooling.query('Select Id, AuraDefinitionBundleId,AuraDefinitionBundle.DeveloperName,DefType,Format FROM AuraDefinition', function (err, res) {\n\t      if (err) {\n\t        reject(err);\n\t      } else {\n\t        resolve(res.records);\n\t      }\n\t    });\n\t  });\n\t};\n\t\n\tLightningService.prototype.createBundle = function (apiName, description) {\n\t  var self = this;\n\t  logger.debug('Creating lightning bundle: ' + apiName);\n\t  return new Promise(function (resolve, reject) {\n\t    self.project.sfdcClient.conn.tooling.sobject('AuraDefinitionBundle').create({\n\t      Description: description, // my description\n\t      DeveloperName: apiName, // cool_bro\n\t      MasterLabel: apiName, // cool bro\n\t      ApiVersion: self.project.sfdcClient.apiVersion || '32.0'\n\t    }, function (err, res) {\n\t      if (err) {\n\t        reject(err);\n\t      } else {\n\t        logger.debug('Lightning bundle creation result: ');\n\t        logger.debug(res);\n\t        resolve(res);\n\t      }\n\t    });\n\t  });\n\t};\n\t\n\tLightningService.prototype.deleteBundle = function (bundleId) {\n\t  var self = this;\n\t  return new Promise(function (resolve, reject) {\n\t    self.project.sfdcClient.conn.tooling.sobject('AuraDefinitionBundle').delete(bundleId, function (err, res) {\n\t      if (err) {\n\t        reject(new Error('Could not delete AuraBundle: ' + err.message));\n\t      } else {\n\t        resolve(res);\n\t      }\n\t    });\n\t  });\n\t};\n\t\n\tLightningService.prototype.deleteBundleItems = function (mavensmateFiles) {\n\t  var self = this;\n\t  return new Promise(function (resolve, reject) {\n\t    if (mavensmateFiles.length === 0) {\n\t      return resolve();\n\t    } else {\n\t      self.project.getLightningIndex().then(function (lightningIndex) {\n\t        logger.debug(lightningIndex);\n\t        var deleteIds = [];\n\t        _.each(mavensmateFiles, function (mmf) {\n\t          var lightningBundleName = mmf.folderName; //mybundle\n\t          var lightningType = mmf.lightningType;\n\t          logger.debug('deleting lightning type: ' + lightningType);\n\t          logger.debug('deleting lightningBundleName: ' + lightningBundleName);\n\t          deleteIds.push(_.find(lightningIndex, { AuraDefinitionBundle: { DeveloperName: lightningBundleName }, DefType: lightningType }).Id);\n\t        });\n\t        logger.debug('deleting lightning components!!');\n\t        logger.debug(mavensmateFiles);\n\t        logger.debug(deleteIds);\n\t        self.project.sfdcClient.conn.tooling.sobject('AuraDefinition').delete(deleteIds, function (err, res) {\n\t          if (err) {\n\t            reject(new Error('Could not delete AuraBundle item: ' + err.message));\n\t          } else {\n\t            resolve(res);\n\t          }\n\t        });\n\t      }).catch(function (err) {\n\t        reject(new Error('Could not get delete bundle items: ' + err.message));\n\t      });\n\t    }\n\t  });\n\t};\n\t\n\tLightningService.prototype.getBundle = function (bundleId) {\n\t  var self = this;\n\t  return new Promise(function (resolve, reject) {\n\t    self.project.sfdcClient.conn.tooling.query('Select Id, AuraDefinitionBundleId,AuraDefinitionBundle.DeveloperName,DefType,Format FROM AuraDefinition WHERE AuraDefinitionBundleId = \\'' + bundleId + '\\'', function (err, res) {\n\t      if (err) {\n\t        reject(err);\n\t      } else {\n\t        resolve(res);\n\t      }\n\t    });\n\t  });\n\t};\n\t\n\tLightningService.prototype.getBundleItems = function (mavensmateFiles) {\n\t  var self = this;\n\t  return new Promise(function (resolve, reject) {\n\t    if (mavensmateFiles.length === 0) {\n\t      return resolve();\n\t    } else {\n\t      logger.debug('attempting to get index');\n\t      self.project.getLightningIndex().then(function (lightningIndex) {\n\t        logger.debug('got lightning index');\n\t        logger.debug(lightningIndex);\n\t        var itemIds = [];\n\t        _.each(mavensmateFiles, function (mmf) {\n\t          var lightningBundleName = mmf.folderName; //mybundle\n\t          var lightningType = mmf.lightningType;\n\t          logger.debug('getting lightning type: ' + lightningType);\n\t          logger.debug('getting lightningBundleName: ' + lightningBundleName);\n\t          itemIds.push(_.find(lightningIndex, { AuraDefinitionBundle: { DeveloperName: lightningBundleName }, DefType: lightningType }).Id);\n\t        });\n\t        logger.debug('getting lightning components!!');\n\t        logger.debug(itemIds);\n\t        self.project.sfdcClient.conn.tooling.query('Select Id,AuraDefinitionBundleId,AuraDefinitionBundle.DeveloperName,DefType,Format,Source FROM AuraDefinition WHERE Id IN (' + util.joinForQuery(itemIds) + ')', function (err, res) {\n\t          if (err) {\n\t            reject(err);\n\t          } else {\n\t            resolve(res);\n\t          }\n\t        });\n\t      }).catch(function (err) {\n\t        reject(new Error('Could not get bundle items: ' + err.message));\n\t      });\n\t    }\n\t  });\n\t};\n\t\n\t/**\n\t * Updates one or more lightning components\n\t * @param  {Array} - array of File instances\n\t * @return {Promise}\n\t */\n\tLightningService.prototype.update = function (files) {\n\t  var self = this;\n\t  return new Promise(function (resolve, reject) {\n\t    if (files.length === 0) {\n\t      resolve();\n\t    } else {\n\t      self.project.getLightningIndex().then(function (lightningIndex) {\n\t        logger.debug(lightningIndex);\n\t        var updatePayload = [];\n\t        _.each(files, function (f) {\n\t          var lightningBundleName = path.basename(path.dirname(f.path)); //mybundle\n\t          var lightningType = f.lightningType;\n\t          logger.debug('lightning type: ' + lightningType);\n\t          logger.debug('lightningBundleName: ' + lightningBundleName);\n\t          var payloadItem = {\n\t            Source: f.body,\n\t            Id: _.find(lightningIndex, { AuraDefinitionBundle: { DeveloperName: lightningBundleName }, DefType: lightningType }).Id\n\t          };\n\t          updatePayload.push(payloadItem);\n\t        });\n\t        logger.debug('updating lightning components!!');\n\t        logger.debug(updatePayload);\n\t        self.project.sfdcClient.conn.tooling.sobject('AuraDefinition').update(updatePayload, function (err, res) {\n\t          if (err) {\n\t            reject(err);\n\t          } else {\n\t            resolve(res);\n\t          }\n\t        });\n\t      }).catch(function (err) {\n\t        reject(new Error('Could not update lightning components: ' + err.message));\n\t      });\n\t    }\n\t  });\n\t};\n\t\n\tLightningService.prototype.updateComponent = function (id, source) {\n\t  var self = this;\n\t  return new Promise(function (resolve, reject) {\n\t    self.project.sfdcClient.conn.tooling.sobject('AuraDefinition').update({\n\t      Id: id,\n\t      Source: source\n\t    }, function (err, res) {\n\t      if (err) {\n\t        reject(err);\n\t      } else {\n\t        resolve(res);\n\t      }\n\t    });\n\t  });\n\t};\n\t\n\tLightningService.prototype.createComponent = function (bundleId) {\n\t  var self = this;\n\t  return new Promise(function (resolve, reject) {\n\t    self.project.sfdcClient.conn.tooling.sobject('AuraDefinition').create({\n\t      AuraDefinitionBundleId: bundleId,\n\t      DefType: 'COMPONENT',\n\t      Format: 'XML',\n\t      Source: '<aura:component></aura:component>'\n\t    }, function (err, res) {\n\t      if (err) {\n\t        reject(err);\n\t      } else {\n\t        resolve(res);\n\t      }\n\t    });\n\t  });\n\t};\n\t\n\tLightningService.prototype.createApplication = function (bundleId) {\n\t  var self = this;\n\t  return new Promise(function (resolve, reject) {\n\t    self.project.sfdcClient.conn.tooling.sobject('AuraDefinition').create({\n\t      AuraDefinitionBundleId: bundleId,\n\t      DefType: 'APPLICATION',\n\t      Format: 'XML',\n\t      Source: '<aura:application></aura:application>'\n\t    }, function (err, res) {\n\t      if (err) {\n\t        reject(err);\n\t      } else {\n\t        resolve(res);\n\t      }\n\t    });\n\t  });\n\t};\n\t\n\tLightningService.prototype.createInterface = function (bundleId) {\n\t  var self = this;\n\t  return new Promise(function (resolve, reject) {\n\t    self.project.sfdcClient.conn.tooling.sobject('AuraDefinition').create({\n\t      AuraDefinitionBundleId: bundleId,\n\t      DefType: 'INTERFACE',\n\t      Format: 'XML',\n\t      Source: '<aura:interface description=\"Interface template\">\\n\\t<aura:attribute name=\"example\" type=\"String\" default=\"\" description=\"An example attribute.\"/>\\n</aura:interface>'\n\t    }, function (err, res) {\n\t      if (err) {\n\t        reject(err);\n\t      } else {\n\t        resolve(res);\n\t      }\n\t    });\n\t  });\n\t};\n\t\n\tLightningService.prototype.createDocumentation = function (bundleId) {\n\t  var self = this;\n\t  return new Promise(function (resolve, reject) {\n\t    self.project.sfdcClient.conn.tooling.sobject('AuraDefinition').create({\n\t      AuraDefinitionBundleId: bundleId,\n\t      DefType: 'DOCUMENTATION',\n\t      Format: 'XML',\n\t      Source: '<aura:documentation>\\n\\t<aura:description>Documentation</aura:description>\\n\\t<aura:example name=\"ExampleName\" ref=\"exampleComponentName\" label=\"Label\">\\n\\t\\tExample Description\\n\\t</aura:example>\\n</aura:documentation>'\n\t    }, function (err, res) {\n\t      if (err) {\n\t        reject(err);\n\t      } else {\n\t        resolve(res);\n\t      }\n\t    });\n\t  });\n\t};\n\t\n\tLightningService.prototype.createController = function (bundleId) {\n\t  var self = this;\n\t  return new Promise(function (resolve, reject) {\n\t    self.project.sfdcClient.conn.tooling.sobject('AuraDefinition').create({\n\t      AuraDefinitionBundleId: bundleId,\n\t      DefType: 'CONTROLLER',\n\t      Format: 'JS',\n\t      Source: '({\\n\\tmyAction : function(component, event, helper) {\\n\\t}\\n})'\n\t    }, function (err, res) {\n\t      if (err) {\n\t        reject(err);\n\t      } else {\n\t        resolve(res);\n\t      }\n\t    });\n\t  });\n\t};\n\t\n\tLightningService.prototype.createRenderer = function (bundleId) {\n\t  var self = this;\n\t  return new Promise(function (resolve, reject) {\n\t    self.project.sfdcClient.conn.tooling.sobject('AuraDefinition').create({\n\t      AuraDefinitionBundleId: bundleId,\n\t      DefType: 'RENDERER',\n\t      Format: 'JS',\n\t      Source: '({\\n\\t// Your renderer method overrides go here\\n})'\n\t    }, function (err, res) {\n\t      if (err) {\n\t        reject(err);\n\t      } else {\n\t        resolve(res);\n\t      }\n\t    });\n\t  });\n\t};\n\t\n\tLightningService.prototype.createHelper = function (bundleId) {\n\t  var self = this;\n\t  return new Promise(function (resolve, reject) {\n\t    self.project.sfdcClient.conn.tooling.sobject('AuraDefinition').create({\n\t      AuraDefinitionBundleId: bundleId,\n\t      DefType: 'HELPER',\n\t      Format: 'JS',\n\t      Source: '({\\n\\thelperMethod : function() {\\n\\t}\\n})'\n\t    }, function (err, res) {\n\t      if (err) {\n\t        reject(err);\n\t      } else {\n\t        resolve(res);\n\t      }\n\t    });\n\t  });\n\t};\n\t\n\tLightningService.prototype.createStyle = function (bundleId) {\n\t  var self = this;\n\t  return new Promise(function (resolve, reject) {\n\t    self.project.sfdcClient.conn.tooling.sobject('AuraDefinition').create({\n\t      AuraDefinitionBundleId: bundleId,\n\t      DefType: 'STYLE',\n\t      Format: 'CSS',\n\t      Source: '.THIS {\\n}'\n\t    }, function (err, res) {\n\t      if (err) {\n\t        reject(err);\n\t      } else {\n\t        resolve(res);\n\t      }\n\t    });\n\t  });\n\t};\n\t\n\tLightningService.prototype.createEvent = function (bundleId) {\n\t  var self = this;\n\t  return new Promise(function (resolve, reject) {\n\t    self.project.sfdcClient.conn.tooling.sobject('AuraDefinition').create({\n\t      AuraDefinitionBundleId: bundleId,\n\t      DefType: 'EVENT',\n\t      Format: 'XML',\n\t      Source: '<aura:event type=\"APPLICATION\" description=\"Event template\" />'\n\t    }, function (err, res) {\n\t      if (err) {\n\t        reject(err);\n\t      } else {\n\t        resolve(res);\n\t      }\n\t    });\n\t  });\n\t};\n\t\n\tmodule.exports = LightningService;\n\n/***/ },\n/* 17 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * @file Represents connection to salesforce, many functions wrap jsforce\n\t * @author Joseph Ferraro <@joeferraro>\n\t */\n\t\n\t'use strict';\n\t\n\tvar jsforce = __webpack_require__(138);\n\tvar Promise = __webpack_require__(1);\n\tvar fs = __webpack_require__(31);\n\tvar _ = __webpack_require__(7);\n\tvar merge = __webpack_require__(99);\n\tvar util = __webpack_require__(3);\n\tvar events = __webpack_require__(25);\n\tvar inherits = __webpack_require__(2);\n\tvar stream = __webpack_require__(145);\n\tvar Stream = stream.Stream;\n\tvar logger = __webpack_require__(4);\n\tvar config = __webpack_require__(8);\n\t\n\t/**\n\t * @param {Object} opts\n\t * @param {String} [opts.accessToken] - salesforce.com accesstoken\n\t * @param {String} [opts.refreshToken] - salesforce.com refreshToken\n\t * @param {String} [opts.instanceUrl] - Salesforce Instance URL (e.g. https://na1.salesforce.com/)\n\t * @param {String} [opts.username] - (optional) salesforce.com username\n\t * @param {String} [opts.password] - (optional) salesforce.com password (append security token)\n\t * @param {String} [opts.orgType] - (optional) type of org: developer|production|sandbox|prerelease\n\t * @param {String} [opts.loginUrl] - Salesforce Login Server URL (e.g. https://login.salesforce.com/)\n\t * @param {String} [opts.serverUrl] - Salesforce SOAP service endpoint URL (e.g. https://na1.salesforce.com/services/Soap/u/28.0)\n\t * @param {String} [opts.logger] - Logger instance\n\t *\n\t */\n\tfunction SalesforceClient(opts) {\n\t  util.applyProperties(this, opts);\n\t  this.apiVersion = config.get('mm_api_version') || '36.0';\n\t  this.clientId = process.env.SFDC_OAUTH_CLIENT_ID || '3MVG9uudbyLbNPZP7kLgoRiWVRqiN8gFcKwdAlztVnjgbj9shSk1vMXJNmV7W0ciFbeYiaP9D4tLfBBD06l_7';\n\t  this.callbackUrl = process.env.SFDC_OAUTH_CALLBACK_URL || 'https://localhost:56248/sfdc/auth/callback';\n\t  logger.debug('initiating SalesforceClient: ');\n\t}\n\t\n\tinherits(SalesforceClient, events.EventEmitter);\n\t\n\t/**\n\t * We need to manually post to the refresh token endpoint bc jsforce requires a client secret\n\t * @return Nothing\n\t */\n\tSalesforceClient.prototype._refreshFn = function (conn, callback) {\n\t  logger.debug('jsforce calling MavensMate _refreshFn delegate', conn);\n\t  logger.debug('manually refreshing access token...');\n\t  // danger: private jsforce api\n\t  conn.oauth2._postParams({\n\t    grant_type: 'refresh_token',\n\t    refresh_token: conn.refreshToken,\n\t    client_id: conn.oauth2.clientId\n\t  }, function (err, res) {\n\t    if (err) {\n\t      logger.error('_refreshFn error', err);\n\t      callback(err);\n\t    } else {\n\t      logger.debug('_refreshFn result', res);\n\t      callback(null, res.access_token, res);\n\t    }\n\t  });\n\t};\n\t\n\t/**\n\t * When refreshToken is used to get a new access token, we handle the event here\n\t * @return {Nothing}\n\t */\n\tSalesforceClient.prototype._initWebServerRefreshHandler = function () {\n\t  var self = this;\n\t  // jsforce connection emits 'refresh' when token is refreshed in http-api.js\n\t  self.conn.on('refresh', function (accessToken, res) {\n\t    logger.debug('connection refresh event...', accessToken, res, self);\n\t    self.accessToken = accessToken;\n\t    self.instanceUrl = res.instance_url;\n\t    self.conn.identity(function (err, res) {\n\t      if (err) {\n\t        logger.error('could not retrieve sfdc connection identity after token refresh');\n\t      } else {\n\t        try {\n\t          self.conn.userInfo = merge(self.conn.userInfo, res);\n\t          self.startSystemStreamingListener().then(function () {\n\t            logger.debug('restarted streaming listener for sfdc client');\n\t          }).catch(function (err) {\n\t            logger.error('Could not start streaming listener after sfdc client refresh', err);\n\t          });\n\t        } catch (e) {\n\t          logger.error('could not merge user info after conn refresh');\n\t        }\n\t      }\n\t      self.emit('token-refresh', self);\n\t    });\n\t  });\n\t};\n\t\n\t/**\n\t * When we get a new access token via username/password flow, we handle the refresh event here\n\t * @return {Nothing}\n\t */\n\tSalesforceClient.prototype._initUsernamePasswordRefreshHandler = function () {\n\t  var self = this;\n\t  self.conn.on('refresh', function (accessToken, res) {\n\t    self.accessToken = accessToken;\n\t    self.conn.identity(function (err, res) {\n\t      if (err) {\n\t        logger.error('could not retrieve sfdc connection identity');\n\t      } else {\n\t        try {\n\t          self.conn.userInfo = merge(self.conn.userInfo, res);\n\t          self.startSystemStreamingListener().then(function () {\n\t            logger.debug('restarted streaming listener for sfdc client');\n\t          }).catch(function (err) {\n\t            logger.error('Could not start streaming listener after sfdc client refresh', err);\n\t          });\n\t        } catch (e) {\n\t          logger.error('could not merge user info after conn refresh');\n\t        }\n\t      }\n\t      self.emit('token-refresh', self);\n\t    });\n\t  });\n\t};\n\t\n\t/**\n\t * Attempts to use cached session information to initiate connection to salesforce\n\t * Alternatively, will perform login based on stored creds\n\t */\n\tSalesforceClient.prototype.initialize = function () {\n\t  var self = this;\n\t  // TODO: refactor un/pw vs oauth flows bc they're very similar\n\t  return new Promise(function (resolve, reject) {\n\t    if (self.initialized) {\n\t      return resolve();\n\t    }\n\t    logger.debug('initializing connection to salesforce ...', self);\n\t    if (self.accessToken && self.instanceUrl && self.transient) {\n\t      self.conn = new jsforce.Connection({\n\t        logLevel: config.get('mm_sfdc_api_log_level') || 'FATAL',\n\t        version: self.apiVersion,\n\t        instanceUrl: self.instanceUrl || 'https://na1.salesforce.com',\n\t        accessToken: self.accessToken\n\t      });\n\t      self._configureJsForce();\n\t      self.describe().then(function () {\n\t        self.initialized = true;\n\t        resolve();\n\t      }).catch(function (error) {\n\t        reject(error);\n\t      }).done();\n\t    } else if (self.accessToken && self.refreshToken) {\n\t      self.conn = new jsforce.Connection({\n\t        oauth2: {\n\t          clientId: self.clientId,\n\t          redirectUri: self.callbackUrl\n\t        },\n\t        refreshFn: self._refreshFn,\n\t        instanceUrl: self.instanceUrl || 'https://na1.salesforce.com',\n\t        accessToken: self.accessToken,\n\t        refreshToken: self.refreshToken,\n\t        logLevel: config.get('mm_sfdc_api_log_level') || 'FATAL',\n\t        version: self.apiVersion\n\t      });\n\t      self._initWebServerRefreshHandler();\n\t      logger.silly('initialized connection', self.conn);\n\t      self.conn.identity().then(function (res) {\n\t        self.conn.userInfo = merge(self.conn.userInfo, res);\n\t        self._configureJsForce();\n\t        return self.describe();\n\t      }).then(function (res) {\n\t        self.initialized = true;\n\t        resolve(self.conn);\n\t      }).catch(function (err) {\n\t        logger.error(err);\n\t        reject(err);\n\t      });\n\t    } else if (self.username && self.password) {\n\t      logger.debug('logging in to salesforce via username/password flow: ' + self.getLoginUrl());\n\t      self.conn = new jsforce.Connection({\n\t        oauth2: {\n\t          clientId: self.clientId,\n\t          redirectUri: self.callbackUrl\n\t        },\n\t        logLevel: config.get('mm_sfdc_api_log_level') || 'FATAL',\n\t        version: self.apiVersion,\n\t        loginUrl: self.getLoginUrl()\n\t      });\n\t      self._initUsernamePasswordRefreshHandler();\n\t      self.conn.login(self.username, self.password).then(function (res) {\n\t        return self.conn.identity();\n\t      }).then(function (res) {\n\t        self.conn.userInfo = merge(self.conn.userInfo, res);\n\t        self._configureJsForce();\n\t        return self.describe();\n\t      }).then(function (res) {\n\t        self.initialized = true;\n\t        resolve(self.conn);\n\t      }).catch(function (err) {\n\t        logger.error(err);\n\t        reject(err);\n\t      });\n\t    } else {\n\t      reject(new Error('username/password or accesstoken/refreshtoken required'));\n\t    }\n\t  });\n\t};\n\t\n\t/**\n\t * Logs into Salesforce via username/password flow\n\t * @return {Promise}\n\t */\n\tSalesforceClient.prototype._login = function () {\n\t  var self = this;\n\t  return new Promise(function (resolve, reject) {});\n\t};\n\t\n\t/**\n\t * Returns the org type (developer, production, sandbox, prerelease, custom) for this client\n\t * @return {String}\n\t */\n\tSalesforceClient.prototype.getOrgType = function () {\n\t  var validOrgTypes = ['production', 'developer', 'sandbox', 'prerelease', 'custom'];\n\t  if (this.orgType && validOrgTypes.indexOf(this.orgType.toLowerCase()) === -1) {\n\t    return validOrgTypes[1];\n\t  } else if (!this.orgType) {\n\t    return validOrgTypes[1];\n\t  } else {\n\t    return this.orgType.toLowerCase();\n\t  }\n\t};\n\t\n\tSalesforceClient.prototype.getUserId = function () {\n\t  if (this.conn && this.conn.userInfo) {\n\t    return this.conn.userInfo.user_id;\n\t  }\n\t};\n\t\n\t/**\n\t * Returns username for this client\n\t * @return {String}\n\t */\n\tSalesforceClient.prototype.getUsername = function () {\n\t  if (this.conn && this.conn.userInfo) {\n\t    return this.conn.userInfo.username;\n\t  } else {\n\t    return this.username;\n\t  }\n\t};\n\t\n\t/**\n\t * Returns org namespace for this client\n\t * @return {String}\n\t */\n\tSalesforceClient.prototype.getNamespace = function () {\n\t  return this.describeCache.organizationNamespace;\n\t};\n\t\n\t/**\n\t * Returns login url for this client\n\t * @return {String}\n\t */\n\tSalesforceClient.prototype.getLoginUrl = function () {\n\t  if (this.loginUrl) {\n\t    return this.loginUrl;\n\t  } else {\n\t    if (this.getOrgType() === 'sandbox') {\n\t      return 'https://test.salesforce.com/';\n\t    } else {\n\t      return 'https://login.salesforce.com/';\n\t    }\n\t  }\n\t};\n\t\n\t/**\n\t * Returns access token for this client\n\t * @return {String}\n\t */\n\tSalesforceClient.prototype.getAccessToken = function () {\n\t  if (this.conn && this.conn.accessToken) {\n\t    return this.conn.accessToken;\n\t  } else if (this.accessToken) {\n\t    return this.accessToken;\n\t  } else {\n\t    return undefined;\n\t  }\n\t};\n\t\n\t/**\n\t * Returns instance url (e.g., https://na14.salesforce.com) for this client\n\t * @return {String}\n\t */\n\tSalesforceClient.prototype.getInstanceUrl = function () {\n\t  return this.instanceUrl || this.conn.instanceUrl || undefined;\n\t};\n\t\n\t/**\n\t * Applies MavensMate-specific settings to jsforce\n\t * @return {String}\n\t */\n\tSalesforceClient.prototype._configureJsForce = function () {\n\t  logger.debug('configuring jsforce ...');\n\t  this.conn.metadata.pollTimeout = parseInt(config.get('mm_timeout')) * 1000 || 20000;\n\t  this.conn.bulk.pollTimeout = parseInt(config.get('mm_timeout')) * 1000 || 20000;\n\t};\n\t\n\tSalesforceClient.prototype.setPollingTimeout = function (timeout) {\n\t  this.conn.metadata.pollTimeout = timeout || 20000;\n\t  this.conn.bulk.pollTimeout = timeout || 20000;\n\t};\n\t\n\tSalesforceClient.prototype.createApexMetadata = function (mavensMateFile) {\n\t  logger.info('createApexMetadata');\n\t  logger.info(mavensMateFile.type);\n\t  var self = this;\n\t  return new Promise(function (resolve, reject) {\n\t    mavensMateFile.mergeTemplate().then(function (body) {\n\t      logger.info(body);\n\t      var payload = {};\n\t      if (mavensMateFile.type.xmlName === 'ApexPage' || mavensMateFile.type.xmlName === 'ApexComponent') {\n\t        payload.markup = body;\n\t      } else {\n\t        payload.body = body;\n\t      }\n\t      if (mavensMateFile.type.xmlName === 'ApexTrigger') {\n\t        payload.TableEnumOrId = mavensMateFile.apexTriggerObjectName;\n\t      } else if (mavensMateFile.type.xmlName !== 'ApexClass') {\n\t        payload.name = mavensMateFile.name;\n\t        payload.MasterLabel = mavensMateFile.name;\n\t      }\n\t      self.conn.tooling.sobject(mavensMateFile.type.xmlName).create(payload, function (err, res) {\n\t        if (err && err.message.indexOf('duplicates value on record with id') === -1) {\n\t          reject(err);\n\t        } else {\n\t          resolve(res);\n\t        }\n\t      });\n\t    }).catch(function (err) {\n\t      reject(err);\n\t    });\n\t  });\n\t};\n\t\n\t/**\n\t * Compiles files via Tooling API\n\t * @param  {Array of Metadata} metadata - metadata to be compiled (must already exist in salesforce)\n\t * @return {Promise}\n\t */\n\tSalesforceClient.prototype.compileWithToolingApi = function (files) {\n\t  var self = this;\n\t  return new Promise(function (resolve, reject) {\n\t    // logger.debug('compiling sfdcPaths via tooling api: '+JSON.stringify(sfdcPaths));\n\t\n\t    if (_.filter(files, function (f) {\n\t      return !f.isToolingType;\n\t    }).length > 0) {\n\t      return reject('Invalid extension for tooling API compilation');\n\t    }\n\t\n\t    // new container\n\t    // add member for each type\n\t    var containerId;\n\t\n\t    self._createContainer().then(function (result) {\n\t      containerId = result.id;\n\t      logger.debug('new container id is: ' + containerId);\n\t      var memberPromises = [];\n\t      _.each(files, function (f) {\n\t        memberPromises.push(self._createMember(f, containerId));\n\t      });\n\t      return Promise.all(memberPromises);\n\t    }).then(function (memberResults) {\n\t      var isMemberSuccess = _.where(memberResults, { 'success': false }).length === 0;\n\t\n\t      if (!isMemberSuccess) {\n\t        return reject('Could not create tooling members: ' + JSON.stringify(memberResults));\n\t      }\n\t\n\t      return self._createContainerAsyncRequest(containerId);\n\t    }).then(function (result) {\n\t      self._pollAsyncContainer(containerId, result.id, resolve, reject);\n\t    }).catch(function (error) {\n\t      reject(error);\n\t    }).done();\n\t  });\n\t};\n\t\n\tSalesforceClient.prototype._asyncContainerRequestCompleteHandler = function (containerId, results, resolve, reject) {\n\t  logger.debug('asyncContainerRequestCompleteHandler');\n\t  logger.debug('deleting container id:');\n\t  logger.debug(containerId);\n\t  logger.silly(results);\n\t  try {\n\t    this._deleteContainer(containerId).then(function () {\n\t      resolve(results);\n\t    });\n\t  } catch (e) {\n\t    reject(e);\n\t  }\n\t};\n\t\n\tSalesforceClient.prototype._asyncContainerRequestErrorHandler = function (containerId, err, resolve, reject) {\n\t  logger.debug('asyncContainerRequestErrorHandler');\n\t  logger.debug('deleting container id:');\n\t  logger.debug(containerId);\n\t  try {\n\t    this._deleteContainer(containerId).then(function () {\n\t      reject(err);\n\t    });\n\t  } catch (e) {\n\t    reject(e);\n\t  }\n\t};\n\t\n\t/**\n\t * Deletes a metadata container\n\t *\n\t * @method SalesforceClient#_deleteContainer\n\t * @param {String} containerId - Id of metadatacontainer\n\t */\n\tSalesforceClient.prototype._deleteContainer = function (containerId) {\n\t  var self = this;\n\t  return new Promise(function (resolve, reject) {\n\t    self.conn.tooling.sobject('MetadataContainer').delete(containerId, function (err, res) {\n\t      if (err) {\n\t        reject(err);\n\t      } else {\n\t        resolve(res);\n\t      }\n\t    });\n\t  });\n\t};\n\t\n\t/**\n\t * Submits container to create containerasyncrequest\n\t *\n\t * @method SalesforceClient#_createContainerAsyncRequest\n\t * @param {String} containerId - Id of metadatacontainer\n\t */\n\tSalesforceClient.prototype._createContainerAsyncRequest = function (containerId) {\n\t  var self = this;\n\t  return new Promise(function (resolve, reject) {\n\t    self.conn.tooling.sobject('ContainerAsyncRequest').create({\n\t      IsCheckOnly: false,\n\t      MetadataContainerId: containerId,\n\t      IsRunTests: false\n\t    }, function (err, res) {\n\t      if (err) {\n\t        reject(err);\n\t      } else {\n\t        resolve(res);\n\t      }\n\t    });\n\t  });\n\t};\n\t\n\t/**\n\t * Polling until asynccontainer is complete or error\n\t *\n\t * @method SalesforceClient#_pollAsyncContainer\n\t * @param {Number} interval - Polling interval in milliseconds\n\t * @param {Number} timeout - Polling timeout in milliseconds\n\t */\n\tSalesforceClient.prototype._pollAsyncContainer = function (containerId, requestId, resolve, reject, interval, timeout) {\n\t  logger.debug('_pollAsyncContainer for requestId: ' + requestId);\n\t  var self = this;\n\t  var startTime = new Date().getTime();\n\t  var poll = function () {\n\t    var now = new Date().getTime();\n\t    if (startTime + timeout < now) {\n\t      self.emit('error', new Error('MavensMate timed out while polling Salesforce.com servers. To increase polling timeout, set mm_timeout to number of seconds.'));\n\t      return;\n\t    }\n\t    self._getAsyncRequest(requestId).then(function (results) {\n\t      var done = results[0].State !== 'Queued';\n\t      if (done) {\n\t        // self.emit('asynccontainer-complete', results);\n\t        self._asyncContainerRequestCompleteHandler(containerId, results, resolve, reject);\n\t      } else {\n\t        setTimeout(poll, interval);\n\t      }\n\t    }, function (err) {\n\t      // self.emit('asynccontainer-error', err);\n\t      self._asyncContainerRequestErrorHandler(containerId, err, resolve, reject);\n\t    });\n\t  };\n\t  setTimeout(poll, interval);\n\t};\n\t\n\t/**\n\t * Retrieves async request details\n\t * @return {Promise}\n\t */\n\tSalesforceClient.prototype._getAsyncRequest = function (requestId) {\n\t  var self = this;\n\t  return new Promise(function (resolve, reject) {\n\t    var fields;\n\t    if (parseInt(self.apiVersion) >= 31) {\n\t      fields = ['Id', 'MetadataContainerId', 'MetadataContainerMemberId', 'State', 'IsCheckOnly', 'DeployDetails', 'ErrorMsg'];\n\t    } else {\n\t      fields = ['Id', 'MetadataContainerId', 'MetadataContainerMemberId', 'State', 'IsCheckOnly', 'CompilerErrors', 'ErrorMsg'];\n\t    }\n\t\n\t    self.conn.tooling.sobject('ContainerAsyncRequest').find({ Id: requestId }, fields).execute(function (err, records) {\n\t      if (err) {\n\t        reject(err);\n\t      } else {\n\t        resolve(records);\n\t      }\n\t    });\n\t  });\n\t};\n\t\n\t/**\n\t * Creates a metadata container for compilation\n\t * @return {Promise}\n\t */\n\tSalesforceClient.prototype._createContainer = function () {\n\t  var self = this;\n\t  return new Promise(function (resolve, reject) {\n\t    self.conn.tooling.sobject('MetadataContainer').create({\n\t      name: util.generateRandomString(32)\n\t    }, function (err, res) {\n\t      if (err) {\n\t        reject('Could not create container: ' + JSON.stringify(res));\n\t      } else {\n\t        resolve(res);\n\t      }\n\t    });\n\t  });\n\t};\n\t\n\t/**\n\t * Creates a Tooling member for each metadata instance passed\n\t * @param  {Metadata} metadata - Instance of Metadata\n\t * @param  {String} containerId - Tooling container ID\n\t * @return {Promise}\n\t */\n\tSalesforceClient.prototype._createMember = function (file, containerId) {\n\t  var self = this;\n\t  return new Promise(function (resolve, reject) {\n\t    var memberName = file.type.xmlName + 'Member';\n\t    logger.debug('Creating tooling member:');\n\t    logger.silly(file.body);\n\t    logger.debug(containerId);\n\t    logger.debug(file.id);\n\t    self.conn.tooling.sobject(memberName).create({\n\t      Body: file.body,\n\t      MetadataContainerId: containerId,\n\t      ContentEntityId: file.id\n\t    }, function (err, res) {\n\t      if (err) {\n\t        reject(err);\n\t      } else {\n\t        resolve(res);\n\t      }\n\t    });\n\t  });\n\t};\n\t\n\tSalesforceClient.prototype._checkTest = function (requestId) {\n\t  var self = this;\n\t  return new Promise(function (resolve, reject) {\n\t    self.conn.tooling.query('Select ApexClassId, ApexClass.Name, Status, ExtendedStatus From ApexTestQueueItem Where ParentJobId = \\'' + requestId + '\\' AND Status IN (\\'Aborted\\',\\'Completed\\',\\'Failed\\')', function (err, res) {\n\t      if (err) {\n\t        reject(err);\n\t      } else {\n\t        resolve(res);\n\t      }\n\t    });\n\t  });\n\t};\n\t\n\tSalesforceClient.prototype._getTestResults = function (requestId) {\n\t  var self = this;\n\t  return new Promise(function (resolve, reject) {\n\t    logger.debug('getting test results for job id:', requestId);\n\t    self.conn.tooling.query('SELECT Outcome, ApexClassId, ApexClass.Name, MethodName, Message, StackTrace, ApexLogId FROM ApexTestResult WHERE AsyncApexJobId = \\'' + requestId + '\\'', function (err, res) {\n\t      if (err) {\n\t        reject(err);\n\t      } else {\n\t        logger.silly('test results', res);\n\t        resolve(res);\n\t      }\n\t    });\n\t  });\n\t};\n\t\n\t/**\n\t * To run specific test methods\n\t * [{\n\t      \"classId\" : \"<classId 1>\",\n\t      \"testMethods\" : [\"testMethod1\",\"testMethod2\",\"testMethod3\"]\n\t      },{\n\t      \"classId\" : \"<classId 2>\",\n\t      \"testMethods\" : [\"testMethod1\",\"testMethod2\"]\n\t    }];\n\t */\n\t\n\t/**\n\t * To run classes\n\t * [ \"classid1\", \"classid2\" ]\n\t */\n\t\n\t/**\n\t * Runs selected apex unit tests\n\t * @param  {Array} tests - e.g, [{ \"ApexClassId\" : \"1234\" }]\n\t * @return {Promise} Resolves to Object\n\t */\n\tSalesforceClient.prototype.runTests = function (classIdsOrTestsPayload) {\n\t  var self = this;\n\t  return new Promise(function (resolve, reject) {\n\t    var numberOfTests = classIdsOrTestsPayload.length;\n\t    var pollInterval = numberOfTests > 10 ? 5000 : 1000;\n\t\n\t    var postBody;\n\t    if (_.isString(classIdsOrTestsPayload[0])) {\n\t      postBody = { classids: classIdsOrTestsPayload.join(',') };\n\t    } else {\n\t      postBody = { tests: classIdsOrTestsPayload };\n\t    }\n\t\n\t    logger.debug('submitting tests to be run via runTestsAsynchronous:', postBody);\n\t\n\t    self.conn.request({\n\t      method: 'POST',\n\t      url: '/services/data/v' + self.apiVersion + '/tooling/runTestsAsynchronous',\n\t      headers: {\n\t        'Content-Type': 'application/json'\n\t      },\n\t      body: JSON.stringify(postBody)\n\t    }, function (err, res) {\n\t      if (err) {\n\t        logger.error('Error submitting to runTestsAsynchronous', err);\n\t        reject(err);\n\t      } else {\n\t        logger.info('result from runTestsAsynchronous POST', res);\n\t        var parentJobId = res;\n\t\n\t        // poll for the test results\n\t        var startTime = new Date().getTime();\n\t        var poll = function () {\n\t          var now = new Date().getTime();\n\t          if (startTime + self.conn.metadata.pollTimeout < now) {\n\t            reject(new Error('Apex test request timed out. Timeout can be configured via mm_timeout setting.'));\n\t            return;\n\t          }\n\t          self._checkTest(parentJobId).then(function (classResults) {\n\t            logger.debug('test status: ');\n\t            logger.debug(classResults);\n\t            if (classResults.size === numberOfTests) {\n\t              self._getTestResults(parentJobId).then(function (result) {\n\t                resolve({ classResults: classResults, methodResults: result });\n\t              }).catch(function (err) {\n\t                reject(new Error('Retrieving test results failed: ' + err.message));\n\t              }).done();\n\t            } else {\n\t              setTimeout(poll, pollInterval);\n\t            }\n\t          }).catch(function (err) {\n\t            reject(new Error('Retrieving test results failed: ' + err.message));\n\t          }).done();\n\t        };\n\t        setTimeout(poll, pollInterval);\n\t      }\n\t    });\n\t  });\n\t};\n\t\n\t/**\n\t * Executes anonymous Apex\n\t * @return {Promise}\n\t */\n\tSalesforceClient.prototype.executeApex = function (payload) {\n\t  var self = this;\n\t  return new Promise(function (resolve, reject) {\n\t    self.conn.tooling.executeAnonymous(payload.body, function (err, res) {\n\t      if (err) {\n\t        reject('Could not execute anonymous apex: ' + err.message);\n\t      } else {\n\t        resolve(res);\n\t      }\n\t    });\n\t  });\n\t};\n\t\n\t/**\n\t * Deploy components into an organization using zipped file representations\n\t *\n\t * @param {stream.Stream|Buffer} zipInput - Zipped file input source in readable stream or binary buffer\n\t * @param {Object} [options] - Options used in deployment\n\t * @param {Boolean} [options.allowMissingFiles] - Specifies whether a deploy succeeds even if files that are specified in package.xml but are not in the .zip file or not.\n\t * @param {Boolean} [options.autoUpdatePackage] - If a file is in the .zip file but not specified in package.xml, specifies whether the file should be automatically added to the package or not.\n\t * @param {Boolean} [options.checkOnly] - Indicates whether Apex classes and triggers are saved to the organization as part of the deployment (false) or not (true).\n\t * @param {Boolean} [options.ignoreWarnings] - Indicates whether a warning should allow a deployment to complete successfully (true) or not (false). Defaults to false.\n\t * @param {Boolean} [options.performRetrieve] - Indicates whether a retrieve() call is performed immediately after the deployment (true) or not (false).\n\t * @param {Boolean} [options.purgeOnDelete] - If true, the deleted components in the destructiveChanges.xml manifest file aren't stored in the Recycle Bin.\n\t * @param {Boolean} [options.rollbackOnError] - Indicates whether any failure causes a complete rollback (true) or not (false).\n\t * @param {Boolean} [options.runAllTests] - If true, all Apex tests defined in the organization are run.\n\t * @param {Array.<String>} [options.runTests] - A list of Apex tests to be run during deployment.\n\t * @param {Boolean} [options.singlePackage] - Indicates whether the specified .zip file points to a directory structure with a single package (true) or a set of packages (false).\n\t * @param {Callback.<Metadata~AsyncResult>} [callback] - Callback function\n\t * @returns {Metadata~DeployResultLocator}\n\t */\n\tSalesforceClient.prototype.deploy = function (zipInput, opts) {\n\t  var self = this;\n\t  return new Promise(function (resolve, reject) {\n\t    self.conn.metadata.deploy(zipInput, opts).complete(true, function (err, result) {\n\t      if (err) {\n\t        reject(err);\n\t      } else {\n\t        resolve(result);\n\t      }\n\t    });\n\t  });\n\t};\n\t\n\t/**\n\t * Retrieve packaged medadata --> TODO: finish\n\t * @param  {Array} packageNames - list of packages\n\t * @return {Promise}\n\t */\n\tSalesforceClient.prototype.retrievePackages = function (packageNames) {\n\t  var self = this;\n\t  return new Promise(function (resolve, reject) {\n\t    var r = self.conn.metadata.retrieve({ packageNames: packageNames, apiVersion: self.apiVersion }).stream().pipe(fs.createWriteStream('mavensmate.zip'));\n\t\n\t    r.on('close', function () {\n\t      logger.debug('ended!');\n\t      resolve();\n\t    });\n\t  });\n\t};\n\t\n\t/**\n\t * Retrieves metadata from salesforce\n\t * @param  {Array|Object} metadataTypesOrPackage\n\t * @return {Promise} resolves with readable {Stream}\n\t */\n\tSalesforceClient.prototype.retrieveUnpackaged = function (metadataTypesOrPackage, writeToDisk, destination) {\n\t  var self = this;\n\t  return new Promise(function (resolve, reject) {\n\t    var unpackagedTypes = [];\n\t\n\t    logger.debug('retrieving unpackaged: ');\n\t    logger.debug(metadataTypesOrPackage);\n\t\n\t    // TODO: refactor package generation\n\t    if (_.isArray(metadataTypesOrPackage)) {\n\t      _.each(metadataTypesOrPackage, function (type) {\n\t        unpackagedTypes.push({\n\t          members: '*',\n\t          name: type\n\t        });\n\t      });\n\t    } else {\n\t      _.forOwn(metadataTypesOrPackage, function (value, key) {\n\t        unpackagedTypes.push({\n\t          members: value,\n\t          name: key\n\t        });\n\t      });\n\t    }\n\t\n\t    var retrieveRequest = self.conn.metadata.retrieve({\n\t      unpackaged: { types: unpackagedTypes },\n\t      apiVersion: self.apiVersion\n\t    });\n\t\n\t    var zipStream = new Stream();\n\t    zipStream.readable = true;\n\t\n\t    retrieveRequest.complete(function (err, result) {\n\t      if (err) {\n\t        logger.error('unpackaged retrieveRequest error: ' + err.message);\n\t        if (err.message.indexOf('polling time out') >= 0) {\n\t          reject(new Error('Request timed out. Timeout can be configured via mm_timeout setting.'));\n\t        } else {\n\t          reject(err);\n\t        }\n\t      } else {\n\t        if (writeToDisk) {\n\t          var writePromise = util.writeStream(zipStream, destination);\n\t          zipStream.emit('data', new Buffer(result.zipFile, 'base64'));\n\t          zipStream.emit('end');\n\t          writePromise.then(function (res) {\n\t            return resolve({ zipStream: zipStream, fileProperties: result.fileProperties });\n\t          }).catch(function (err) {\n\t            logger.error('error retrieving and writing to disk');\n\t            logger.error(err.message);\n\t            return reject(err);\n\t          });\n\t        } else {\n\t          resolve(result);\n\t        }\n\t      }\n\t    });\n\t  });\n\t};\n\t\n\tSalesforceClient.prototype.describeGlobal = function () {\n\t  var self = this;\n\t  return new Promise(function (resolve, reject) {\n\t    self.conn.describeGlobal(function (err, res) {\n\t      if (err) {\n\t        reject(err);\n\t      } else {\n\t        resolve(res);\n\t      }\n\t    });\n\t  });\n\t};\n\t\n\tSalesforceClient.prototype.describe = function () {\n\t  var self = this;\n\t  return new Promise(function (resolve, reject) {\n\t    self.conn.metadata.describe(self.apiVersion, function (err, res) {\n\t      if (err) {\n\t        reject(err);\n\t      } else {\n\t        self.describeCache = res;\n\t        resolve(res);\n\t      }\n\t    });\n\t  });\n\t};\n\t\n\tSalesforceClient.prototype.listFolder = function (metadataType, folder) {\n\t  var self = this;\n\t  return new Promise(function (resolve, reject) {\n\t    var result = {};\n\t    self.conn.metadata.list([{ type: metadataType, folder: folder }], function (err, res) {\n\t      if (err) {\n\t        reject(err);\n\t      } else {\n\t        if (!res) {\n\t          res = [];\n\t        } else if (!_.isArray(res)) {\n\t          res = [res];\n\t        }\n\t        if (config.get('mm_ignore_managed_metadata')) {\n\t          result[folder] = _.filter(res, function (r) {\n\t            return r.manageableState === 'unmanaged' || r.manageableState === undefined;\n\t          });\n\t        } else {\n\t          result[folder] = res;\n\t        }\n\t        resolve(result);\n\t      }\n\t    });\n\t  });\n\t};\n\t\n\tSalesforceClient.prototype.list = function (metadataType) {\n\t  var self = this;\n\t  return new Promise(function (resolve, reject) {\n\t    var result = {};\n\t    self.conn.metadata.list([{ type: metadataType }], function (err, res) {\n\t      if (err) {\n\t        reject(err);\n\t      } else {\n\t        if (!res) {\n\t          res = [];\n\t        } else if (!_.isArray(res)) {\n\t          res = [res];\n\t        }\n\t        if (config.get('mm_ignore_managed_metadata')) {\n\t          result[metadataType] = _.filter(res, function (r) {\n\t            return r.manageableState === 'unmanaged' || r.manageableState === undefined;\n\t          });\n\t        } else {\n\t          result[metadataType] = res;\n\t        }\n\t        resolve(result);\n\t      }\n\t    });\n\t  });\n\t};\n\t\n\tSalesforceClient.prototype.startSystemStreamingListener = function () {\n\t  var self = this;\n\t  return new Promise(function (resolve, reject) {\n\t    logger.debug('starting system streaming listener');\n\t    try {\n\t      self.conn.streaming.channel('/systemTopic/Logging').subscribe(function (message) {\n\t        logger.debug('New Log', message);\n\t        logger.debug('Event Type : ' + message.event.type);\n\t        logger.debug('Event Created : ' + message.event.createdDate);\n\t        logger.debug('Object Id : ' + message.sobject.Id);\n\t        self.emit('sfdcclient-new-log', message);\n\t      });\n\t      logger.debug('streaming listener successfully configured');\n\t      resolve();\n\t    } catch (e) {\n\t      logger.error('Could not start system streaming listener', e);\n\t      if (config.get('mm_http_proxy') || config.get('mm_https_proxy')) {\n\t        logger.debug('user has proxy configured but streaming listener not functional.');\n\t        resolve();\n\t      } else {\n\t        reject(new Error('Could not start system streaming listener: ' + e.message));\n\t      }\n\t    }\n\t  });\n\t};\n\t\n\t/**\n\t * Creates TraceFlags for all user ids listed in config/.debug\n\t * @param  {Array} userIds\n\t * @param  {Date} expiration\n\t * @return {Promise} resolves to nothing\n\t */\n\tSalesforceClient.prototype.startLogging = function (debugSettings, expiration) {\n\t  var self = this;\n\t  var userIds = debugSettings.users;\n\t  var debugLevels = debugSettings.levels || {};\n\t  var debugLevelName = debugSettings.debugLevelName || 'MAVENSMATE';\n\t  logger.debug('attempting to start logging for: ');\n\t  logger.debug(userIds);\n\t  logger.debug('expiring: ' + expiration);\n\t  // \"levels\": {\n\t  //     \"Workflow\": \"INFO\",\n\t  //     \"Callout\": \"INFO\",\n\t  //     \"System\": \"DEBUG\",\n\t  //     \"Database\": \"INFO\",\n\t  //     \"ApexCode\": \"FINE\",\n\t  //     \"Validation\": \"INFO\",\n\t  //     \"Visualforce\": \"DEBUG\"\n\t  // },\n\t  return new Promise(function (resolve, reject) {\n\t    /*jshint camelcase: false */\n\t    self.conn.tooling.query('SELECT Id FROM DebugLevel WHERE DeveloperName = \\'' + debugLevelName + '\\' AND CreatedById = \\'' + self.conn.userInfo.user_id + '\\'', function (err, res) {\n\t      if (err) {\n\t        reject(new Error('Could not retrieve DebugLevel: ' + err.message));\n\t      } else {\n\t        var debugLevelIdsToDelete = [];\n\t        _.each(res.records, function (debugLevel) {\n\t          debugLevelIdsToDelete.push(debugLevel.Id);\n\t        });\n\t        logger.debug('attempting to delete debuglevels: ');\n\t        logger.debug(debugLevelIdsToDelete);\n\t        self.conn.tooling.sobject('DebugLevel').destroy(debugLevelIdsToDelete).then(function (deleteResult) {\n\t          logger.debug('deleted debug level');\n\t          logger.debug(deleteResult);\n\t\n\t          logger.debug('creating debug level');\n\t          var debugLevelsToCreate = [];\n\t          var dl = {\n\t            DeveloperName: debugLevelName,\n\t            MasterLabel: debugLevelName,\n\t            Workflow: debugLevels.Workflow || 'DEBUG',\n\t            Callout: debugLevels.Callout || 'DEBUG',\n\t            System: debugLevels.System || 'DEBUG',\n\t            Database: debugLevels.Database || 'DEBUG',\n\t            ApexCode: debugLevels.ApexCode || 'DEBUG',\n\t            ApexProfiling: debugLevels.ApexProfiling || 'DEBUG',\n\t            Validation: debugLevels.Validation || 'DEBUG',\n\t            Visualforce: debugLevels.Visualforce || 'DEBUG'\n\t          };\n\t          debugLevelsToCreate.push(dl);\n\t          logger.debug('attempting to create debug level');\n\t\n\t          return self.conn.tooling.sobject('DebugLevel').create(debugLevelsToCreate);\n\t        }).then(function (debugLevelCreateResult) {\n\t          logger.debug('debugLevelCreateResult', debugLevelCreateResult);\n\t          var traceFlagsToCreate = [];\n\t          _.each(userIds, function (userId) {\n\t            var tf = {\n\t              ExpirationDate: expiration,\n\t              TracedEntityId: userId,\n\t              LogType: debugSettings.logType || 'USER_DEBUG',\n\t              DebugLevelId: debugLevelCreateResult[0].id\n\t            };\n\t            traceFlagsToCreate.push(tf);\n\t          });\n\t          logger.debug('attempting to create trace flags');\n\t          return self.conn.tooling.sobject('TraceFlag').create(traceFlagsToCreate);\n\t        }).then(function (traceFlagCreateResults) {\n\t          logger.debug('Created trace flag(s) for users: ');\n\t          logger.debug(traceFlagCreateResults);\n\t          resolve();\n\t        }).catch(function (err) {\n\t          reject(new Error('Could not create Trace Flags: ' + err.message));\n\t        }).done();\n\t      }\n\t    });\n\t    /*jshint camelcase: true */\n\t  });\n\t};\n\t\n\tSalesforceClient.prototype.executeSoql = function (soql) {\n\t  var self = this;\n\t  return new Promise(function (resolve, reject) {\n\t    self.conn.query(soql, function (err, res) {\n\t      if (err) {\n\t        reject(err);\n\t      } else {\n\t        resolve(res);\n\t      }\n\t    });\n\t  });\n\t};\n\t\n\t/**\n\t * Deletes TraceFlags created by the running user for the supplied userIds\n\t * @param  {Array of Strings} userIds\n\t * @return {Promise} resolves to nothing\n\t */\n\tSalesforceClient.prototype.stopLogging = function (userIds) {\n\t  var self = this;\n\t  return new Promise(function (resolve, reject) {\n\t    /*jshint camelcase: false */\n\t    self.conn.tooling.query('SELECT Id FROM TraceFlag WHERE TracedEntityId IN (' + util.joinForQuery(userIds) + ') AND CreatedById = \\'' + self.conn.userInfo.user_id + '\\'', function (err, res) {\n\t      if (err) {\n\t        reject(new Error('Could not retrieve TraceFlags for debug users: ' + err.message));\n\t      } else {\n\t        var traceFlagIdsToDelete = [];\n\t\n\t        _.each(res.records, function (traceFlag) {\n\t          traceFlagIdsToDelete.push(traceFlag.Id);\n\t        });\n\t\n\t        self.conn.tooling.sobject('TraceFlag').destroy(traceFlagIdsToDelete).then(function (deleteResult) {\n\t          logger.debug('deleted trace flags');\n\t          logger.debug(deleteResult);\n\t          resolve();\n\t        }).catch(function (err) {\n\t          reject(new Error('Could not delete Trace Flags: ' + err.message));\n\t        }).done();\n\t      }\n\t    });\n\t    /*jshint camelcase: true */\n\t  });\n\t};\n\t\n\tSalesforceClient.prototype.getServerProperties = function (mavensMateFiles) {\n\t  var self = this;\n\t  return new Promise(function (resolve, reject) {\n\t    logger.debug('getting server properties ...');\n\t    logger.silly(mavensMateFiles);\n\t\n\t    var baseSoql = 'Select Id, Name, CreatedDate, CreatedById, NamespacePrefix, CreatedBy.Name, LastModifiedById, LastModifiedDate, LastModifiedBy.Name From ';\n\t    var baseSoqlFilter = ' WHERE ID IN (';\n\t\n\t    var classes = [];\n\t    var classIds = [];\n\t    var triggers = [];\n\t    var triggerIds = [];\n\t    var pages = [];\n\t    var pageIds = [];\n\t    var components = [];\n\t    var componentIds = [];\n\t\n\t    _.each(mavensMateFiles, function (mmf) {\n\t      if (mmf.type.xmlName === 'ApexPage') {\n\t        pageIds.push(mmf.id);\n\t        pages.push(mmf);\n\t      } else if (mmf.type.xmlName === 'ApexTrigger') {\n\t        triggerIds.push(mmf.id);\n\t        triggers.push(mmf);\n\t      } else if (mmf.type.xmlName === 'ApexClass') {\n\t        classIds.push(mmf.id);\n\t        classes.push(mmf);\n\t      } else if (mmf.type.xmlName === 'ApexComponent') {\n\t        componentIds.push(mmf.id);\n\t        components.push(mmf);\n\t      }\n\t    });\n\t\n\t    var queries = [];\n\t    if (classes.length > 0) {\n\t      queries.push(self.conn.query(baseSoql + 'ApexClass' + baseSoqlFilter + util.joinForQuery(classIds) + ')'));\n\t    }\n\t    if (components.length > 0) {\n\t      queries.push(self.conn.query(baseSoql + 'ApexComponent' + baseSoqlFilter + util.joinForQuery(componentIds) + ')'));\n\t    }\n\t    if (triggers.length > 0) {\n\t      queries.push(self.conn.query(baseSoql + 'ApexTrigger' + baseSoqlFilter + util.joinForQuery(triggerIds) + ')'));\n\t    }\n\t    if (pages.length > 0) {\n\t      queries.push(self.conn.query(baseSoql + 'ApexPage' + baseSoqlFilter + util.joinForQuery(pageIds) + ')'));\n\t    }\n\t\n\t    Promise.all(queries).then(function (res) {\n\t      var results = [];\n\t      _.each(res, function (r) {\n\t        if (r.records && r.records.length > 0) {\n\t          Array.prototype.push.apply(results, r.records);\n\t        }\n\t      });\n\t      resolve(results);\n\t    }).catch(function (err) {\n\t      logger.error('could not get server properties for Apex/VF metadata', err);\n\t      reject(err);\n\t    });\n\t  });\n\t};\n\t\n\tmodule.exports = SalesforceClient;\n\n/***/ },\n/* 18 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * @file Responsible for deployment of Salesforce metadata (Custom Objects, Apex Classes, Lightning files, etc.) to other servers\n\t * @author Joseph Ferraro <@joeferraro>\n\t */\n\t\n\t'use strict';\n\t\n\tvar Promise = __webpack_require__(1);\n\tvar _ = __webpack_require__(7);\n\tvar temp = __webpack_require__(19);\n\tvar swig = __webpack_require__(28);\n\tvar fs = __webpack_require__(10);\n\tvar path = __webpack_require__(6);\n\tvar util = __webpack_require__(3);\n\tvar events = __webpack_require__(25);\n\tvar inherits = __webpack_require__(2);\n\tvar SalesforceClient = __webpack_require__(17);\n\tvar OrgConnectionService = __webpack_require__(24);\n\tvar Package = __webpack_require__(20).Package;\n\tvar MetadataHelper = __webpack_require__(15).MetadataHelper;\n\tvar logger = __webpack_require__(4);\n\tvar config = __webpack_require__(8);\n\tvar mavensMateFile = __webpack_require__(11);\n\t\n\t// TODO: create tmp directory on instantiation, set as property\n\t// TODO: refactor execute... methods\n\t\n\t/**\n\t * Represents a deployment to one or more Salesforce.com servers\n\t * @param {Object} opts\n\t * @param {Array} opts.project - Project instance\n\t * @param {Array} opts.sfdcClient - Sfdc Client instance\n\t * @param {Array} opts.targets - array of org connections\n\t * @param {Array} opts.checkOnly - whether this is a validate-only deployment\n\t * @param {Array} opts.runTests - whether to run tests during this deployment\n\t * @param {Array} opts.rollbackOnError - whether to rollback when the deployment fails\n\t * @param {Array} opts.package - deployment payload\n\t * @param {Array} opts.newDeploymentName - the name of the deployment to be saved for future deploys\n\t * @param {Array} opts.debugCategories - array of debug categories for the deployment\n\t */\n\tfunction Deploy(opts) {\n\t  util.applyProperties(this, opts);\n\t  this.sfdcClient = this.project ? this.project.sfdcClient : this.sfdcClient;\n\t  this.metadataHelper = new MetadataHelper({ sfdcClient: this.sfdcClient });\n\t}\n\t\n\tinherits(Deploy, events.EventEmitter);\n\t\n\tDeploy.prototype.getResultHtml = function (targets, deployOptions, deployResult) {\n\t  var resultHtml = swig.renderFile('views/deploy/result.html', {\n\t    results: deployResult,\n\t    targets: targets,\n\t    deployOptions: deployOptions,\n\t    project: this.project\n\t  });\n\t  return {\n\t    html: resultHtml,\n\t    object: deployResult\n\t  };\n\t};\n\t\n\tDeploy.prototype.getNamedDeployments = function () {\n\t  var self = this;\n\t  if (!self.project) {\n\t    throw new Error('No project found');\n\t  }\n\t  var namedDeployments = [];\n\t  // this is the default deployment, based on the project's package.xml\n\t  namedDeployments.push({\n\t    name: 'Project package.xml',\n\t    path: path.join(self.project.path, 'src', 'package.xml')\n\t  });\n\t  if (!fs.existsSync(path.join(this.project.path, 'deploy'))) {\n\t    return namedDeployments;\n\t  } else {\n\t    // these are custom \"named deploys\"\n\t    _.each(util.listDirectories(path.join(this.project.path, 'deploy')), function (savedDeployPath) {\n\t      namedDeployments.push({\n\t        name: path.basename(savedDeployPath),\n\t        path: path.join(savedDeployPath, 'unpackaged', 'package.xml')\n\t      });\n\t    });\n\t    return namedDeployments;\n\t  }\n\t};\n\t\n\t/**\n\t * Compiles files via Metadata API, updates local store based on deploy result\n\t * @param  {Array of Metadata} metadata - metadata to be compiled (must already exist in salesforce)\n\t * @return {Promise}\n\t */\n\tDeploy.prototype.compileWithMetadataApi = function (files, subscription) {\n\t  var self = this;\n\t  return new Promise(function (resolve, reject) {\n\t\n\t    logger.debug('compiling metadata via metadata api: ');\n\t    // logger.debug(metadata);\n\t    var deployResult;\n\t    self.stage(files, subscription).then(function (zipStream) {\n\t      return self.project.sfdcClient.deploy(zipStream, { rollbackOnError: true, performRetrieve: true });\n\t    }).then(function (result) {\n\t      logger.debug('Compile result: ');\n\t      logger.debug(result);\n\t      deployResult = result;\n\t      if (deployResult.details.retrieveResult) {\n\t        return self.project.updateLocalStore(deployResult.details.retrieveResult.fileProperties);\n\t      } else {\n\t        return new Promise(function (resolve) {\n\t          resolve();\n\t        });\n\t      }\n\t    }).then(function () {\n\t      resolve(deployResult);\n\t    }).catch(function (error) {\n\t      reject(error);\n\t    }).done();\n\t  });\n\t};\n\t\n\tDeploy.prototype.executeRemote = function (deployOptions) {\n\t  var self = this;\n\t  self.orgConnectionService = new OrgConnectionService(self.project);\n\t\n\t  logger.debug('deploying to remote');\n\t\n\t  return new Promise(function (resolve, reject) {\n\t    if (!self.targets || self.targets.length === 0) {\n\t      return reject(new Error('Please specify at least one deployment target'));\n\t    }\n\t\n\t    var deployPromises = [];\n\t    deployOptions = deployOptions || {\n\t      rollbackOnError: true,\n\t      performRetrieve: true\n\t    };\n\t\n\t    var newPath = temp.mkdirSync({ prefix: 'mm_' });\n\t    var retrieveResultStream;\n\t    // var fileProperties;\n\t    self.project.sfdcClient.retrieveUnpackaged(self.package, true, newPath).then(function (retrieveResult) {\n\t      logger.debug('retrieved deployment payload from remote, preparing to deploy to targets');\n\t      logger.debug(self.targets);\n\t      if (config.get('mm_archive_deployments') === true) {\n\t        // todo\n\t      }\n\t      if (self.deploymentName) {\n\t        if (fs.existsSync(path.join(self.project.path, 'deploy', self.deploymentName))) {\n\t          fs.removeSync(path.join(self.project.path, 'deploy', self.deploymentName));\n\t          fs.copySync(path.join(newPath, 'unpackaged'), path.join(self.project.path, 'deploy', self.deploymentName, 'unpackaged'));\n\t        } else {\n\t          fs.ensureDirSync(path.join(self.project.path, 'deploy', self.deploymentName, 'unpackaged'));\n\t          fs.copySync(path.join(newPath, 'unpackaged'), path.join(self.project.path, 'deploy', self.deploymentName, 'unpackaged'));\n\t        }\n\t      }\n\t      _.each(self.targets, function (t) {\n\t        var targetId = _.isString(t) ? t : t.id;\n\t        logger.debug('adding deploy target id: ', targetId);\n\t        logger.debug('deploy options', deployOptions);\n\t        var targetConnection = self.orgConnectionService.getById(targetId);\n\t        logger.debug('targetConnection', targetConnection);\n\t        deployPromises.push(self._deployToTarget(targetConnection, newPath, deployOptions));\n\t      });\n\t      return Promise.all(deployPromises);\n\t    }).then(function (deployResults) {\n\t      var result = {};\n\t      _.each(deployResults, function (deployResult) {\n\t        var connectionId = Object.keys(deployResult)[0];\n\t        result[connectionId] = deployResult[connectionId];\n\t        if (result[connectionId].details.componentFailures) {\n\t          if (!_.isArray(result[connectionId].details.componentFailures)) {\n\t            result[connectionId].details.componentFailures = [result[connectionId].details.componentFailures];\n\t          }\n\t        }\n\t        if (result[connectionId].details.componentSuccesses) {\n\t          if (!_.isArray(result[connectionId].details.componentSuccesses)) {\n\t            result[connectionId].details.componentSuccesses = [result[connectionId].details.componentSuccesses];\n\t          }\n\t        }\n\t        if (result[connectionId].details.runTestResult && result[connectionId].details.runTestResult.codeCoverageWarnings) {\n\t          if (!_.isArray(result[connectionId].details.runTestResult.codeCoverageWarnings)) {\n\t            result[connectionId].details.runTestResult.codeCoverageWarnings = [result[connectionId].details.runTestResult.codeCoverageWarnings];\n\t          }\n\t        }\n\t      });\n\t      resolve(result);\n\t    }).catch(function (err) {\n\t      logger.error('Could not complete deployment: ' + err.message);\n\t      reject(err);\n\t    }).done();\n\t  });\n\t};\n\t\n\t/**\n\t * Takes an array of Metadata instances and prepares a local deployment zip to be passed to the Metadata API for deployment\n\t * @param  {Array} of type Metadata - metadata\n\t * @return {Promise} resolves with zip stream\n\t */\n\tDeploy.prototype.stage = function (files, subscription) {\n\t  var self = this;\n\t  return new Promise(function (resolve, reject) {\n\t\n\t    // TODO: handle folder-based metadata, like documents, templates\n\t    // recurse upward looking for valid folder name, if reach path.join(workspace, projectname), then not valid?\n\t\n\t    // writes temp directory, puts zip file inside\n\t    var newPath = temp.mkdirSync({ prefix: 'mm_' });\n\t    fs.mkdirpSync(path.join(newPath, 'unpackaged'));\n\t\n\t    var pkg = new Package({ subscription: subscription });\n\t    pkg.init().then(function () {\n\t      pkg.path = path.join(newPath, 'unpackaged', 'package.xml');\n\t      pkg.writeFileSync();\n\t\n\t      _.each(files, function (f) {\n\t\n\t        logger.debug('STAGING: ' + f.path);\n\t        var filePath = f.path;\n\t        // filePath => /foo/bar/myproject/unpackaged/classes/myclass.cls\n\t\n\t        var fileBasename = path.basename(filePath);\n\t        // fileBaseName => myclass.cls\n\t\n\t        logger.debug('fileBasename: ' + fileBasename);\n\t\n\t        var directory = path.dirname(filePath);\n\t        // directory => /foo/bar/myproject/unpackaged/classes\n\t\n\t        logger.debug('directory: ' + directory);\n\t\n\t        var projectSrc = path.join(self.project.workspace, self.project.name, 'src');\n\t        var destinationDirectory = directory.replace(projectSrc, path.join(newPath, 'unpackaged'));\n\t        // destinationDirectory => /foo/bar/myproject/unpackaged/classes\n\t\n\t        logger.debug('destinationDirectory: ' + destinationDirectory);\n\t\n\t        // make directory if it doesnt exist (parent dirs included)\n\t        if (!fs.existsSync(destinationDirectory)) {\n\t          fs.mkdirpSync(destinationDirectory);\n\t        }\n\t\n\t        // copy to tmp\n\t        fs.copySync(filePath, path.join(destinationDirectory, fileBasename));\n\t\n\t        if (f.hasMetaFile) {\n\t          if (f.isMetaFile) {\n\t            fs.copySync(filePath.replace('-meta.xml', ''), path.join(destinationDirectory, fileBasename.replace('-meta.xml', '')));\n\t          } else {\n\t            fs.copySync(filePath + '-meta.xml', path.join(destinationDirectory, fileBasename + '-meta.xml'));\n\t          }\n\t        }\n\t      });\n\t      return util.zipDirectory(path.join(newPath, 'unpackaged'), newPath);\n\t    }).then(function () {\n\t      var zipStream = fs.createReadStream(path.join(newPath, 'unpackaged.zip'));\n\t      resolve(zipStream);\n\t    }).catch(function (err) {\n\t      logger.debug('Could not prepare metadata for deployment: ' + err.message);\n\t      reject(err);\n\t    }).done();\n\t  });\n\t};\n\t\n\t/**\n\t * Deploys zipStream to project's sfdcClient\n\t * @param  {Stream} zipStream - zipped deployment\n\t * @return {[type]}           [description]\n\t */\n\tDeploy.prototype.executeStream = function (zipStream, opts) {\n\t  var self = this;\n\t  var deployOptions = opts || {};\n\t  deployOptions.rollbackOnError = true;\n\t  return new Promise(function (resolve, reject) {\n\t    self.project.sfdcClient.deploy(zipStream, deployOptions).then(function (result) {\n\t      resolve(result);\n\t    }).catch(function (error) {\n\t      reject(error);\n\t    }).done();\n\t  });\n\t};\n\t\n\t// TODO: CHANGE METADATA TO FILE!!!\n\t\n\t/**\n\t * Deploys file instance to server, creating a server copy, places in self.project\n\t * @return {Promise} - resolves with Object response from Salesforce\n\t */\n\tDeploy.prototype.execute = function (file, deployOptions) {\n\t  var self = this;\n\t  return new Promise(function (resolve, reject) {\n\t\n\t    if (!deployOptions) {\n\t      deployOptions = {\n\t        rollbackOnError: true\n\t      };\n\t    }\n\t\n\t    var newPath = temp.mkdirSync({ prefix: 'mm_' });\n\t    logger.debug('deploying file: ');\n\t\n\t    var pkg = new Package({ subscription: mavensMateFile.createPackageSubscription([file]) });\n\t    pkg.init().then(function () {\n\t      pkg.path = path.join(newPath, 'unpackaged', 'package.xml');\n\t      pkg.writeFileSync();\n\t      return file.renderAndWriteToDisk(path.join(newPath, 'unpackaged'));\n\t    }).then(function () {\n\t      return util.zipDirectory(path.join(newPath, 'unpackaged'), newPath);\n\t    }).then(function () {\n\t      var zipStream = fs.createReadStream(path.join(newPath, 'unpackaged.zip'));\n\t      return self.project.sfdcClient.deploy(zipStream, deployOptions);\n\t    }).then(function (result) {\n\t      logger.debug('Creation result: ');\n\t      logger.debug(result);\n\t      if (result.success) {\n\t        var metadataPath = path.join(newPath, 'unpackaged', file.type.directoryName, file.name + '.' + file.type.suffix);\n\t        // metadataPath => /my/tmp/directory/unpackaged/classes/myclass.cls\n\t\n\t        var fileBasename = path.basename(metadataPath);\n\t        // fileBaseName => myclass.cls\n\t\n\t        var directory = path.dirname(metadataPath);\n\t        // directory => /my/tmp/directory/unpackaged/classes\n\t\n\t        var projectSrc = path.join(self.project.workspace, self.project.name, 'src');\n\t        // projectSrc => /foo/bar/myproject/src\n\t\n\t        var destinationDirectory = directory.replace(path.join(newPath, 'unpackaged'), projectSrc);\n\t        // destinationDirectory => /foo/bar/myproject/src/classes\n\t\n\t        // make directory if it doesnt exist (parent dirs included)\n\t        if (!fs.existsSync(destinationDirectory)) {\n\t          fs.mkdirpSync(destinationDirectory);\n\t        }\n\t\n\t        // copy to project\n\t        // console.log(metadataPath);\n\t        // console.log(path.join(destinationDirectory, fileBasename));\n\t        fs.copySync(metadataPath, path.join(destinationDirectory, fileBasename));\n\t\n\t        if (file.hasMetaFile) {\n\t          fs.copySync(metadataPath + '-meta.xml', path.join(destinationDirectory, fileBasename + '-meta.xml'));\n\t        }\n\t      }\n\t      resolve(result);\n\t    }).catch(function (err) {\n\t      logger.debug('Error deploying new file to server');\n\t      logger.debug(err);\n\t      logger.debug(err.stack);\n\t      if (err.message.indexOf('polling time out') >= 0) {\n\t        reject(new Error('MavensMate timed out while polling Salesforce.com servers. To increase polling timeout, set mm_timeout to number of seconds.'));\n\t      } else {\n\t        reject(err);\n\t      }\n\t    }).done();\n\t  });\n\t};\n\t\n\tDeploy.prototype._deployToTarget = function (target, deployPath, deployOptions) {\n\t  var self = this;\n\t  return new Promise(function (resolve, reject) {\n\t    logger.debug('deploying to target: ');\n\t    logger.debug(target);\n\t\n\t    // if using keyring, retrieve password (otherwise it will be a property of the target)\n\t    if (target.username && !target.password) {\n\t      target.password = self.project.keychainService.getPassword(target.id, 'password');\n\t    } else if (!target.password && !target.accessToken && !target.refreshToken) {\n\t      target.accessToken = self.project.keychainService.getPassword(target.id, 'accessToken');\n\t      target.refreshToken = self.project.keychainService.getPassword(target.id, 'refreshToken');\n\t    }\n\t\n\t    var deployClient;\n\t    var deployStream;\n\t\n\t    logger.debug('READY TO DEPLOY: ');\n\t    logger.debug(target.name);\n\t    if (target.password) {\n\t      logger.silly(target.password);\n\t    } else {\n\t      logger.silly(target.accessToken);\n\t      logger.silly(target.refreshToken);\n\t    }\n\t    logger.debug(target.instanceUrl);\n\t    logger.debug('deploy options:');\n\t    logger.debug(deployOptions);\n\t\n\t    util.zipDirectory(path.join(deployPath, 'unpackaged'), deployPath).then(function () {\n\t      if (target.username && target.password) {\n\t        deployClient = new SalesforceClient({\n\t          username: target.username,\n\t          password: target.password,\n\t          orgType: target.orgType,\n\t          loginUrl: target.loginUrl\n\t        });\n\t      } else {\n\t        deployClient = new SalesforceClient({\n\t          accessToken: target.accessToken,\n\t          refreshToken: target.refreshToken,\n\t          instanceUrl: target.instanceUrl\n\t        });\n\t      }\n\t      return deployClient.initialize();\n\t    }).then(function () {\n\t      deployClient.setPollingTimeout(300000); // TODO: make configurable from UI\n\t      deployStream = fs.createReadStream(path.join(deployPath, 'unpackaged.zip'));\n\t      return deployClient.deploy(deployStream, deployOptions);\n\t    }).then(function (deployResult) {\n\t      var result = {};\n\t      result[target.id] = deployResult;\n\t      resolve(result);\n\t    }).catch(function (err) {\n\t      logger.error('_deployToTarget failed', target.name, target.id, err.message);\n\t      logger.error(err);\n\t      reject(err);\n\t    }).done();\n\t  });\n\t};\n\t\n\t/**\n\t * Takes an array of Metadata instances and prepares a local deployment zip to be passed to the Metadata API for deletion\n\t * @param  {Array} of type Metadata - metadata\n\t * @return {Promise} resolves with zip stream\n\t */\n\tDeploy.prototype.stageDelete = function (subscription) {\n\t  return new Promise(function (resolve, reject) {\n\t    // TODO: handle folder-based metadata, like documents, templates\n\t    // recurse upward looking for valid folder name, if reach path.join(workspace, projectname), then not valid?\n\t\n\t    // writes temp directory, puts zip file inside\n\t    var newPath = temp.mkdirSync({ prefix: 'mm_' });\n\t\n\t    fs.mkdirpSync(path.join(newPath, 'unpackaged'));\n\t\n\t    var pkg = new Package({ subscription: subscription });\n\t    var emptyPackage = new Package({ subscription: {} });\n\t    pkg.init().then(function () {\n\t      pkg.path = path.join(newPath, 'unpackaged', 'destructiveChanges.xml');\n\t      pkg.writeFileSync();\n\t      emptyPackage = new Package({ subscription: {} });\n\t      return emptyPackage.init();\n\t    }).then(function () {\n\t      emptyPackage.path = path.join(newPath, 'unpackaged', 'package.xml');\n\t      emptyPackage.writeFileSync();\n\t      return util.zipDirectory(path.join(newPath, 'unpackaged'), newPath);\n\t    }).then(function () {\n\t      var zipStream = fs.createReadStream(path.join(newPath, 'unpackaged.zip'));\n\t      resolve(zipStream);\n\t    }).catch(function (err) {\n\t      logger.debug('Could not prepare metadata for deletion: ' + err);\n\t      reject(err);\n\t    }).done();\n\t  });\n\t};\n\t\n\tmodule.exports = Deploy;\n\n/***/ },\n/* 19 */\n/***/ function(module, exports) {\n\n\tmodule.exports = require(\"temp\");\n\n/***/ },\n/* 20 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/* WEBPACK VAR INJECTION */(function(__dirname) {/**\n\t * @file Represents a package.xml file\n\t * @author Joseph Ferraro <@joeferraro>\n\t */\n\t\n\t'use strict';\n\t\n\tvar Promise = __webpack_require__(1);\n\tvar _ = __webpack_require__(7);\n\tvar swig = __webpack_require__(28);\n\tvar fs = __webpack_require__(10);\n\tvar path = __webpack_require__(6);\n\tvar logger = __webpack_require__(4);\n\tvar config = __webpack_require__(8);\n\tvar xmldoc = __webpack_require__(148);\n\tvar sax = __webpack_require__(143);\n\t\n\t/**\n\t * Represents a collection of metadata\n\t * @param {Object} opts\n\t * @param {String} opts.path - path to package.xml\n\t * @param {Array} opts.metadata - Array of Metadata\n\t * @param {Array} opts.metadataTypeXmlNames - Array of metadata type xml names, e.g. ['ApexClass', 'ApexPage']\n\t */\n\t\n\t// can take array of metadata as constructor argument, turns into object representation\n\t// { \"ApexClass\" : [ \"thisclass\", \"thatclass\" ], \"ApexPage\" : \"*\" }\n\t\n\tfunction Package(opts) {\n\t  this.path = opts.path;\n\t  this.files = opts.files;\n\t  this.metadataTypeXmlNames = opts.metadataTypeXmlNames;\n\t  this.subscription = opts.subscription;\n\t  this.project = opts.project;\n\t}\n\t\n\tPackage.prototype._path = null;\n\tPackage.prototype._files = null;\n\tPackage.prototype._subscription = null;\n\t\n\tPackage.prototype.init = function () {\n\t  var self = this;\n\t  return new Promise(function (resolve, reject) {\n\t    if (self.subscription) {\n\t      logger.debug('initing package instance with subscription: ');\n\t      logger.debug(self.subscription);\n\t      self._ensureCustomObjectSubscriptionIsValid().then(function () {\n\t        resolve();\n\t      }).catch(function (e) {\n\t        reject(e);\n\t      });\n\t    } else {\n\t      logger.debug('initing package instance');\n\t      if (self.files) {\n\t        self._getSubscriptionFromFiles().then(function (obj) {\n\t          logger.debug('setting package subscription: ');\n\t          logger.debug(obj);\n\t          self.subscription = obj;\n\t          resolve();\n\t        }).catch(function (err) {\n\t          reject(new Error('Could not initiate Package instance by metadata list: ' + err.message));\n\t        });\n\t      } else if (self.metadataTypeXmlNames) {\n\t        self._getSubscriptionFromMetadataTypeXmlNames().then(function (obj) {\n\t          logger.debug('setting package subscription: ');\n\t          logger.debug(obj);\n\t          self.subscription = obj;\n\t          resolve();\n\t        }).catch(function (err) {\n\t          reject(new Error('Could not initiate Package instance by metadata list: ' + err.message));\n\t        });\n\t      } else if (self.path) {\n\t        self._deserialize().then(function (obj) {\n\t          logger.debug('setting package subscription: ');\n\t          logger.debug(obj);\n\t          self.subscription = obj;\n\t          self._ensureCustomObjectSubscriptionIsValid().then(function () {\n\t            resolve();\n\t          }).catch(function (e) {\n\t            reject(e);\n\t          });\n\t        }).catch(function (err) {\n\t          reject(new Error('Could not initiate Package instance by path: ' + err.message));\n\t        });\n\t      }\n\t    }\n\t  });\n\t};\n\t\n\t/**\n\t *  Unstructured array of Metadata elements included in this package\n\t */\n\tObject.defineProperty(Package.prototype, 'files', {\n\t  get: function () {\n\t    return this._files;\n\t  },\n\t  set: function (value) {\n\t    this._files = value;\n\t  }\n\t});\n\t\n\t/**\n\t *  Structured Metadata subscription ( { \"ApexClass\" : [ \"thisclass\", \"thatclass\" ], \"ApexPage\" : \"*\" } )\n\t */\n\tObject.defineProperty(Package.prototype, 'subscription', {\n\t  get: function () {\n\t    return this._subscription;\n\t  },\n\t  set: function (value) {\n\t    this._subscription = value;\n\t  }\n\t});\n\t\n\t/**\n\t *  File path of this package\n\t */\n\tObject.defineProperty(Package.prototype, 'path', {\n\t  get: function () {\n\t    return this._path;\n\t  },\n\t  set: function (value) {\n\t    this._path = value;\n\t  }\n\t});\n\t\n\tPackage.prototype._ensureCustomObjectSubscriptionIsValid = function () {\n\t  var self = this;\n\t  return new Promise(function (resolve, reject) {\n\t    try {\n\t      logger.debug('_ensureCustomObjectSubscriptionIsValid');\n\t      if (self.project && self.subscription.CustomObject && self.subscription.CustomObject === '*') {\n\t        var customObjectSub = [];\n\t        var projectMetadata = self.project.getOrgMetadataIndex().then(function (index) {\n\t          var customObjectIndex = _.find(index, function (item) {\n\t            return item.id === 'CustomObject';\n\t          });\n\t          _.each(customObjectIndex.children, function (customObjectChild) {\n\t            customObjectSub.push(customObjectChild.fullName);\n\t          });\n\t          self.subscription.CustomObject = customObjectSub;\n\t          resolve();\n\t        }).catch(function (err) {\n\t          logger.error('could not subscribe to all custom objects', err);\n\t          resolve();\n\t        });\n\t      } else {\n\t        resolve();\n\t      }\n\t    } catch (err) {\n\t      logger.error('could not subscribe to all custom objects', err);\n\t      resolve(); // we resolve so we dont break a user's retrieve\n\t    }\n\t  });\n\t};\n\t\n\t// todo: some types dont support '*' subscription\n\tPackage.prototype._getSubscriptionFromMetadataTypeXmlNames = function () {\n\t  var self = this;\n\t  return new Promise(function (resolve, reject) {\n\t    try {\n\t      var sub = {};\n\t      _.each(self.metadataTypeXmlNames, function (typeXmlName) {\n\t        sub[typeXmlName] = '*';\n\t      });\n\t      resolve(sub);\n\t    } catch (err) {\n\t      reject(new Error('Could not get package dictionary: ' + err.message));\n\t    }\n\t  });\n\t};\n\t\n\tPackage.prototype._getSubscriptionFromFiles = function () {\n\t  var self = this;\n\t  return new Promise(function (resolve, reject) {\n\t    try {\n\t      var pkg = {};\n\t      _.each(self.files, function (f) {\n\t        var metadataTypeXmlName = f.type.xmlName;\n\t        if (!_.has(pkg, metadataTypeXmlName)) {\n\t          pkg[metadataTypeXmlName] = [f.name];\n\t        } else {\n\t          var value = pkg[metadataTypeXmlName];\n\t          value.push(f.name);\n\t        }\n\t      });\n\t      return resolve(pkg);\n\t    } catch (err) {\n\t      reject(new Error('Could not get package dictionary: ' + err.message));\n\t    }\n\t  });\n\t};\n\t\n\tPackage.prototype.writeFile = function () {\n\t  var self = this;\n\t  return new Promise(function (resolve, reject) {\n\t    if (!self.path) {\n\t      return reject(new Error('Could not write to disk. Please specify package path'));\n\t    }\n\t    logger.debug('writing package to path: ' + self.path);\n\t    var xmlBody = self._serialize();\n\t    fs.outputFile(self.path, xmlBody, function (err) {\n\t      if (err) {\n\t        reject(new Error('Could not write package to disk: ' + err.message));\n\t      } else {\n\t        resolve();\n\t      }\n\t    });\n\t  });\n\t};\n\t\n\tPackage.prototype.writeFileSync = function () {\n\t  var xmlBody = this._serialize();\n\t  logger.debug('writing package to path: ' + this.path);\n\t  logger.debug(xmlBody);\n\t  fs.outputFileSync(this.path, xmlBody);\n\t};\n\t\n\t/**\n\t * Inserts metadata to package subscription\n\t * @param  {Array of type Metadata} metadata\n\t * @return {None}\n\t */\n\tPackage.prototype.subscribe = function (files) {\n\t  var self = this;\n\t  if (!_.isArray(files)) {\n\t    files = [files];\n\t  }\n\t  _.each(files, function (f) {\n\t    // logger.debug('metadata type: ');\n\t    // logger.debug(f.type);\n\t    var metadataTypeXmlName = f.type.xmlName;\n\t    if (_.has(self.subscription, metadataTypeXmlName)) {\n\t      if (self.subscription[metadataTypeXmlName] === '*') {\n\t        return false; // nothing to do here\n\t      } else {\n\t        if (self.subscription[metadataTypeXmlName].indexOf(f.subscriptionName) === -1) {\n\t          self.subscription[metadataTypeXmlName].push(f.subscriptionName);\n\t        }\n\t      }\n\t    } else {\n\t      self.subscription[metadataTypeXmlName] = [f.subscriptionName];\n\t    }\n\t  });\n\t};\n\t\n\t/**\n\t * Removes metadata from package subscription\n\t * @param  {Array of type Metadata} metadata\n\t * @return {[type]}\n\t */\n\tPackage.prototype.unsubscribe = function (files) {\n\t  var self = this;\n\t  if (!_.isArray(files)) {\n\t    files = [files];\n\t  }\n\t  _.each(files, function (f) {\n\t    logger.debug('unsubscribing: ' + f.name);\n\t    logger.debug('type: ' + f.type);\n\t    var metadataTypeXmlName = f.type.xmlName;\n\t    if (_.has(self.subscription, metadataTypeXmlName)) {\n\t      if (self.subscription[metadataTypeXmlName] === '*') {\n\t        return false; // nothing to do here\n\t      } else {\n\t        var members = self.subscription[metadataTypeXmlName];\n\t        var newMembers = [];\n\t        _.each(members, function (member) {\n\t          if (member !== f.subscriptionName) {\n\t            newMembers.push(member);\n\t          }\n\t        });\n\t        self.subscription[metadataTypeXmlName] = newMembers;\n\t      }\n\t    } else {\n\t      self.subscription[metadataTypeXmlName] = f.subscriptionName;\n\t    }\n\t  });\n\t};\n\t\n\t/**\n\t * Take JS object representation of package.xml, serializes to XML\n\t * @param  {Object} packageXmlObject\n\t * @return {String}\n\t */\n\tPackage.prototype._serialize = function () {\n\t  var self = this;\n\t  logger.debug('serializing package:');\n\t  logger.debug(self.subscription);\n\t  var serialized = swig.renderFile(path.join(__dirname, 'templates', 'package.xml'), {\n\t    obj: self.subscription,\n\t    apiVersion: config.get('mm_api_version')\n\t  });\n\t  return serialized;\n\t};\n\t\n\t/**\n\t * Parses package.xml to JS object\n\t * @param {String} path - disk path of package.xml\n\t * @return {Promise} - resolves to JavaScript object\n\t */\n\tPackage.prototype._deserialize = function () {\n\t  var self = this;\n\t  return new Promise(function (resolve, reject) {\n\t    var pkg = {};\n\t    logger.debug('deserializing: ' + self.path);\n\t    if (!self.path) {\n\t      reject(new Error('Please set package.xml path'));\n\t    } else {\n\t      fs.readFile(self.path, function (err, data) {\n\t        if (err) {\n\t          reject(err);\n\t        } else {\n\t          try {\n\t            var parser = sax.parser(true);\n\t            var isValidPackage = true;\n\t            parser.onerror = function (e) {\n\t              logger.debug('Parse error: package.xml --> ' + e);\n\t              isValidPackage = false;\n\t              parser.resume();\n\t            };\n\t            parser.onend = function () {\n\t              if (!isValidPackage) {\n\t                reject(new Error('Could not parse package.xml, invalid XML'));\n\t              } else {\n\t                var doc = new xmldoc.XmlDocument(data);\n\t                _.each(doc.children, function (type) {\n\t                  var metadataType;\n\t                  var val = [];\n\t\n\t                  if (type.name !== 'types') {\n\t                    return;\n\t                  }\n\t                  _.each(type.children, function (node) {\n\t                    if (node.name === 'name' && node.val !== undefined) {\n\t                      metadataType = node.val;\n\t                      return false;\n\t                    }\n\t                  });\n\t                  _.each(type.children, function (node) {\n\t                    if (node.name === 'members') {\n\t                      if (node.val === '*') {\n\t                        val = '*';\n\t                        return false;\n\t                      } else {\n\t                        val.push(node.val);\n\t                      }\n\t                    }\n\t                  });\n\t                  pkg[metadataType] = val;\n\t                });\n\t                logger.debug('parsed package.xml to -->' + JSON.stringify(pkg));\n\t                resolve(pkg);\n\t              }\n\t            };\n\t            parser.write(data.toString().trim()).close();\n\t          } catch (e) {\n\t            reject('Could not deserialize package: ' + e.message);\n\t          }\n\t        }\n\t      });\n\t    }\n\t  });\n\t};\n\t\n\t/**\n\t * Member providers are overrides when creating a package for retrieval by salesforce\n\t * they are necessary because certain metadata types don't behave \"normally\"\n\t */\n\t\n\tfunction MemberProvider(sfdcClient) {\n\t  this.sfdcClient = sfdcClient;\n\t}\n\t\n\tMemberProvider.prototype = {\n\t  getMembers: function () {}\n\t};\n\t\n\tfunction ListProvider(sfdcClient) {\n\t  this.sfdcClient = sfdcClient;\n\t}\n\t\n\tListProvider.prototype = {\n\t  getList: function () {}\n\t};\n\t\n\tfunction SharingRulesMemberProvider(sfdcClient) {\n\t  MemberProvider.call(this, sfdcClient);\n\t}\n\t\n\tSharingRulesMemberProvider.prototype = Object.create(MemberProvider.prototype, {\n\t  getMembers: {\n\t    value: function () {\n\t      var self = this;\n\t      return new Promise(function (resolve, reject) {\n\t        self.sfdcClient.list('CustomObject').then(function (res) {\n\t          var customObjectNames = [];\n\t          _.each(res.CustomObject, function (r) {\n\t            customObjectNames.push(r.fullName);\n\t          });\n\t          resolve(customObjectNames);\n\t        }).catch(function (err) {\n\t          reject(err);\n\t        });\n\t      });\n\t    }\n\t  }\n\t});\n\tSharingRulesMemberProvider.prototype.constructor = SharingRulesMemberProvider;\n\t\n\tfunction SharingRulesListProvider(sfdcClient) {\n\t  ListProvider.call(this, sfdcClient);\n\t}\n\t\n\tSharingRulesListProvider.prototype = Object.create(ListProvider.prototype, {\n\t  getList: {\n\t    value: function () {\n\t      var self = this;\n\t      return new Promise(function (resolve, reject) {\n\t        var memberProvider = new SharingRulesMemberProvider(self.sfdcClient);\n\t        memberProvider.getMembers().then(function (members) {\n\t          return self.sfdcClient.retrieveUnpackaged({\n\t            SharingRules: members\n\t          });\n\t        }).then(function (retrieveResult) {\n\t          var res = {};\n\t          res.SharingRules = _.filter(retrieveResult.fileProperties, function (fileProperty) {\n\t            return fileProperty.type === 'SharingRules';\n\t          });\n\t          resolve(res);\n\t        }).catch(function (err) {\n\t          reject(err);\n\t        });\n\t      });\n\t    }\n\t  }\n\t});\n\t\n\tSharingRulesListProvider.prototype.constructor = SharingRulesListProvider;\n\t\n\tfunction CustomObjectMemberProvider(sfdcClient) {\n\t  MemberProvider.call(this, sfdcClient);\n\t}\n\t\n\tfunction WorkflowListProvider(sfdcClient) {\n\t  ListProvider.call(this, sfdcClient);\n\t}\n\t\n\tWorkflowListProvider.prototype = Object.create(ListProvider.prototype, {\n\t  getList: {\n\t    value: function () {\n\t      var self = this;\n\t      return new Promise(function (resolve, reject) {\n\t        Promise.all([\n\t        // retrieve CaseComment workflow file properties separately, since CaseComment isn't returned\n\t        // with list workflow call, see http://salesforce.stackexchange.com/q/100517/594\n\t        self.sfdcClient.retrieveUnpackaged({\n\t          Workflow: ['CaseComment']\n\t        }), self.sfdcClient.list('Workflow')]).then(function (results) {\n\t          var retrieveResults = results[0];\n\t          var listResults = results[1];\n\t          var output = listResults;\n\t          var caseCommentWorkflows = _.filter(retrieveResults.fileProperties, function (fileProperty) {\n\t            return fileProperty.type === 'Workflow';\n\t          });\n\t          output.Workflow = output.Workflow.concat(caseCommentWorkflows);\n\t          resolve(output);\n\t        }).catch(reject).done();\n\t      });\n\t    }\n\t  }\n\t});\n\t\n\tWorkflowListProvider.prototype.constructor = WorkflowListProvider;\n\t\n\tmodule.exports.Package = Package;\n\tmodule.exports.MemberProvider = MemberProvider;\n\tmodule.exports.ListProvider = ListProvider;\n\tmodule.exports.SharingRulesMemberProvider = SharingRulesMemberProvider;\n\tmodule.exports.SharingRulesListProvider = SharingRulesListProvider;\n\tmodule.exports.WorkflowListProvider = WorkflowListProvider;\n\t/* WEBPACK VAR INJECTION */}.call(exports, \"/\"))\n\n/***/ },\n/* 21 */\n/***/ function(module, exports) {\n\n\tmodule.exports = require(\"moment\");\n\n/***/ },\n/* 22 */\n/***/ function(module, exports) {\n\n\tmodule.exports = require(\"querystring\");\n\n/***/ },\n/* 23 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * @file Responsible for refreshing local metadata from the connected Salesforce server\n\t * @author Joseph Ferraro <@joeferraro>\n\t */\n\t\n\t'use strict';\n\t\n\tvar fs = __webpack_require__(26);\n\tvar path = __webpack_require__(6);\n\tvar Promise = __webpack_require__(1);\n\tvar logger = __webpack_require__(4);\n\tvar MetadataHelper = __webpack_require__(15).MetadataHelper;\n\tvar LightningService = __webpack_require__(16);\n\tvar Package = __webpack_require__(20).Package;\n\tvar util = __webpack_require__(3);\n\tvar temp = __webpack_require__(19);\n\tvar mavensMateFile = __webpack_require__(11);\n\t\n\t/**\n\t * Responsible for refreshing local copies of files/directories from the server\n\t * @param {Project} project - project instance (required)\n\t * @param {Array} paths - array of path strings [ 'foo/bar/src/classes', 'foo/bar/src/pages/foo.page' ]\n\t */\n\tvar RefreshDelegate = function (project, paths) {\n\t  if (!project || !paths) {\n\t    throw new Error('RefreshDelegate requires a valid project instance and an array of paths to refresh.');\n\t  }\n\t  this.project = project;\n\t  this.paths = paths;\n\t  this.metadataHelper = new MetadataHelper({ sfdcClient: this.project.sfdcClient });\n\t};\n\t\n\t/**\n\t * Executes refresh and overwrite for all delegate paths\n\t * @return {Promise}\n\t * TODO: handle src\n\t */\n\tRefreshDelegate.prototype.execute = function () {\n\t  // TODO: implement stash\n\t  var self = this;\n\t  return new Promise(function (resolve, reject) {\n\t    self._refreshLocalPaths().then(function (res) {\n\t      resolve(res);\n\t    }).catch(function (err) {\n\t      // TODO: revert via stash\n\t      logger.debug('Could not complete refresh request: ' + err.message);\n\t      reject(err);\n\t    });\n\t  });\n\t};\n\t\n\t/**\n\t * Retrieves source of metadata via retrieve\n\t * @param  {Array} metadata - array of Metadata instances\n\t * @return {Promise}\n\t */\n\tRefreshDelegate.prototype._refreshLocalPaths = function () {\n\t  // 1. get subscription for that path\n\t  // 2. create retrieve request\n\t  // 3. overwrite!\n\t  //\n\t\n\t  // [\n\t  //   'foo/bar/src/classes', -> 'TOP_LEVEL_METADATA_DIRECTORY'\n\t  //   'foo/bar/src/pages/mypage.page', -> 'TOP_LEVEL_METADATA_FILE'\n\t  //   'foo/bar/src/documents/myfolder', -> 'METADATA_FOLDER'\n\t  //   'foo/bar/src/email/myemailfolder/myemail.email', -> 'METADATA_FOLDER_ITEM'\n\t  //   'foo/bar/src/aura/mylightningbundle', -> 'LIGHTNING_BUNDLE'\n\t  //   'foo/bar/src/aura/mylightningbundle/mylightningbundleController.js' -> 'LIGHTNING_BUNDLE_ITEM'\n\t  // ]\n\t  //\n\t  // top-level directories (foo/bar/src/classes) can be refreshed more easily\n\t  // foo/bar/src/classes -> ApexClass -> look for ApexClass subscription in project package -> add to retrieve package\n\t  //\n\t  // top-level files (foo/bar/src/pages/mypage.page) can be refresh easily\n\t  // foo/bar/src/pages/mypage.page -> ApexPage -> add mypage.page to ApexPage subscription in retrieve package\n\t  //\n\t  // sub-directories (foo/bar/src/documents/myfolder) are more difficult\n\t\n\t  var self = this;\n\t  return new Promise(function (resolve, reject) {\n\t    if (self.paths.length === 0) {\n\t      return resolve();\n\t    }\n\t\n\t    // first we get a list of types we're refreshing\n\t    // foo/bar/src/classes -> ApexClass\n\t    // foo/bar/src/documents/myfolder -> Document\n\t    // once we have the types we're refreshing [ 'ApexClass', 'Document' ], we can figure out what the subscription is for those types\n\t    // so we look at the packagexml and create a retrieval package:\n\t    // {\n\t    //   ApexClass : '*',\n\t    //   Document : ['myfolder', 'myfolder/myfile', 'myotherfolder', 'myotherfolder/myfile']\n\t    // }\n\t\n\t    var files = mavensMateFile.createFileInstances(self.paths);\n\t    var lightningBundleItemFiles = mavensMateFile.getLightningBundleItemFiles(files);\n\t    var refreshSubscription = mavensMateFile.createPackageSubscription(files, self.project.packageXml);\n\t\n\t    // now we perform the retrieve\n\t    var newPath = temp.mkdirSync({ prefix: 'mm_' });\n\t    var retrievePath = path.join(newPath, 'unpackaged');\n\t    //fs.mkdirsSync(retrievePath);\n\t    var fileProperties;\n\t    var pkg = new Package({ subscription: refreshSubscription });\n\t    pkg.init().then(function () {\n\t      logger.debug('submitting retrieve request for pkg metadata');\n\t      logger.debug(pkg.subscription);\n\t      return self.project.sfdcClient.retrieveUnpackaged(pkg.subscription, true, newPath);\n\t    }).then(function (retrieveResult) {\n\t      fileProperties = retrieveResult.fileProperties;\n\t      return self.project.updateLocalStore(fileProperties);\n\t    }).then(function () {\n\t      // TODO: handle packaged\n\t      return self.project.replaceLocalFiles(retrievePath);\n\t    }).then(function (res) {\n\t      resolve(res);\n\t    }).catch(function (err) {\n\t      logger.debug('Could not refresh metadata: ' + err.message);\n\t      reject(err);\n\t    }).done();\n\t  });\n\t};\n\t\n\t/**\n\t * Retrieves source of lightning bundle items, overwrite local copies\n\t * @param  {Array} lightningMetadata - array of Metadata of type Lightning\n\t * @return {Promise}\n\t * TODO: overwrite local copies\n\t */\n\tRefreshDelegate.prototype._retrieveAndOverwriteLightningMetadata = function (lightningMetadata) {\n\t  var self = this;\n\t  return new Promise(function (resolve, reject) {\n\t    if (lightningMetadata.length === 0) {\n\t      return resolve();\n\t    }\n\t\n\t    logger.debug('refreshing lightning components');\n\t    logger.debug(lightningMetadata[0].path);\n\t\n\t    var lightningService = new LightningService(self.project);\n\t    lightningService.getBundleItems(lightningMetadata).then(function (result) {\n\t      // console.log('result from getting bundle items: ');\n\t      // console.log(result);\n\t      resolve(result);\n\t      // todo : overwrite\n\t    }).catch(function (err) {\n\t      reject(err);\n\t    }).done();\n\t  });\n\t};\n\t\n\tmodule.exports = RefreshDelegate;\n\n/***/ },\n/* 24 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * @file Responsible for CRUD of org connections (deploy targets)\n\t * @author Joseph Ferraro <@joeferraro>\n\t */\n\t\n\t'use strict';\n\t\n\tvar Promise = __webpack_require__(1);\n\tvar _ = __webpack_require__(7);\n\tvar fs = __webpack_require__(10);\n\tvar path = __webpack_require__(6);\n\tvar uuid = __webpack_require__(35);\n\tvar SalesforceClient = __webpack_require__(17);\n\tvar KeychainService = __webpack_require__(92);\n\tvar logger = __webpack_require__(4);\n\t\n\t/**\n\t * Service to get, add, update, remove org connections for a given project\n\t * @param {Object} project - project instance\n\t */\n\tfunction OrgConnectionService(project) {\n\t  this.project = project;\n\t  this.keychainService = new KeychainService();\n\t}\n\t\n\t/**\n\t * Lists all org connections for this project\n\t * @return {Array} - list of connections\n\t */\n\tOrgConnectionService.prototype.listAll = function () {\n\t  var self = this;\n\t  return new Promise(function (resolve, reject) {\n\t    fs.readJson(path.join(self.project.path, 'config', '.org_connections'), function (err, connections) {\n\t      if (err) {\n\t        if (err.message.indexOf('ENOENT') >= 0) {\n\t          resolve([]);\n\t        } else {\n\t          reject(new Error('Could not load org connections: ' + err.message));\n\t        }\n\t      } else {\n\t        _.each(connections, function (c) {\n\t          if (self.keychainService.useSystemKeychain()) {\n\t            c.accessToken = self.keychainService.getPassword(c.id, 'accessToken', true);\n\t            c.refreshToken = self.keychainService.getPassword(c.id, 'refreshToken', true);\n\t            c.password = self.keychainService.getPassword(c.id, 'password', true);\n\t          }\n\t        });\n\t        logger.debug('returning all org connections', connections);\n\t        resolve(connections);\n\t      }\n\t    });\n\t  });\n\t};\n\t\n\t/**\n\t * Returns the org connection by id\n\t * @return {Object} - connection\n\t */\n\tOrgConnectionService.prototype.getById = function (id) {\n\t  try {\n\t    var connections = fs.readJsonSync(path.join(this.project.path, 'config', '.org_connections'));\n\t    return _.find(connections, function (c) {\n\t      return c.id === id;\n\t    });\n\t  } catch (e) {\n\t    if (e.message.indexOf('ENOENT') >= 0) {\n\t      return null;\n\t    } else {\n\t      throw e;\n\t    }\n\t  }\n\t};\n\t\n\t/**\n\t * Adds an org connection\n\t * @param {Object} opts\n\t * @param {String} opts.name\n\t * @param {String} opts.accessToken\n\t * @param {String} opts.refreshToken\n\t * @param {String} opts.username\n\t * @param {String} opts.password\n\t * @param {String} opts.instanceUrl\n\t * @param {String} opts.orgType\n\t * @param {String} opts.loginUrl\n\t *\n\t */\n\tOrgConnectionService.prototype.add = function (opts) {\n\t  var self = this;\n\t  return new Promise(function (resolve, reject) {\n\t    var connectionId = uuid.v1();\n\t    if (opts.username && opts.password) {\n\t      var newConnection = {\n\t        name: opts.name,\n\t        id: connectionId,\n\t        username: opts.username,\n\t        orgType: opts.orgType,\n\t        loginUrl: opts.loginUrl\n\t      };\n\t    } else {\n\t      var newConnection = {\n\t        name: opts.name,\n\t        id: connectionId,\n\t        instanceUrl: opts.instanceUrl\n\t      };\n\t    }\n\t\n\t    if (opts.username && opts.password) {\n\t      if (self.keychainService.useSystemKeychain()) {\n\t        self.keychainService.storePassword(connectionId, opts.password, 'password');\n\t      } else {\n\t        newConnection.password = opts.password;\n\t      }\n\t    } else {\n\t      if (self.keychainService.useSystemKeychain()) {\n\t        self.keychainService.storePassword(connectionId, opts.accessToken, 'accessToken');\n\t        self.keychainService.storePassword(connectionId, opts.refreshToken, 'refreshToken');\n\t      } else {\n\t        newConnection.accessToken = opts.accessToken;\n\t        newConnection.refreshToken = opts.refreshToken;\n\t      }\n\t    }\n\t\n\t    if (opts.username && opts.password) {\n\t      var orgConnectionClient = new SalesforceClient({\n\t        username: opts.username,\n\t        password: opts.password,\n\t        instanceUrl: opts.instanceUrl,\n\t        loginUrl: opts.loginUrl,\n\t        orgType: opts.orgType\n\t      });\n\t    } else {\n\t      var orgConnectionClient = new SalesforceClient({\n\t        accessToken: opts.accessToken,\n\t        refreshToken: opts.refreshToken,\n\t        instanceUrl: opts.instanceUrl\n\t      });\n\t    }\n\t    orgConnectionClient.initialize().then(function () {\n\t      if (!fs.existsSync(path.join(self.project.path, 'config', '.org_connections'))) {\n\t        fs.outputFile(path.join(self.project.path, 'config', '.org_connections'), JSON.stringify([newConnection], null, 4), function (err) {\n\t          if (err) {\n\t            reject(err);\n\t          } else {\n\t            resolve();\n\t          }\n\t        });\n\t      } else {\n\t        fs.readJson(path.join(self.project.path, 'config', '.org_connections'), function (err, connections) {\n\t          if (err) {\n\t            reject(err);\n\t          } else {\n\t            connections.push(newConnection);\n\t            fs.outputFile(path.join(self.project.path, 'config', '.org_connections'), JSON.stringify(connections, null, 4), function (err) {\n\t              if (err) {\n\t                reject(err);\n\t              } else {\n\t                resolve();\n\t              }\n\t            });\n\t          }\n\t        });\n\t      }\n\t    }).catch(function (err) {\n\t      logger.error('could not initialize sfdc client for org connection: ' + err.message);\n\t      reject(err);\n\t    }).done();\n\t  });\n\t};\n\t\n\t/**\n\t * Updates an org connection by id\n\t * @param {Object} opts\n\t * @param {String} opts.name\n\t * @param {String} opts.accessToken\n\t * @param {String} opts.refreshToken\n\t * @param {String} opts.username\n\t * @param {String} opts.password\n\t * @param {String} opts.instanceUrl\n\t * @param {String} opts.orgType\n\t * @param {String} opts.loginUrl\n\t * @return {Promise}\n\t */\n\tOrgConnectionService.prototype.update = function (opts) {\n\t  var self = this;\n\t  return new Promise(function (resolve, reject) {\n\t    if (!fs.existsSync(path.join(self.project.path, 'config', '.org_connections'))) {\n\t      fs.writeSync(path.join(self.project.path, 'config', '.org_connections'), []);\n\t    }\n\t    fs.readJson(path.join(self.project.path, 'config', '.org_connections'), function (err, connections) {\n\t      if (err) {\n\t        reject(new Error('Could not load org connections: ' + err.message));\n\t      } else {\n\t        _.each(connections, function (c) {\n\t          if (c.id === opts.id) {\n\t            if (opts.username && opts.password) {\n\t              c.name = opts.name;\n\t              c.username = opts.username;\n\t              c.orgType = opts.orgType.toLowerCase();\n\t              c.loginUrl = opts.loginUrl;\n\t              if (self.keychainService.useSystemKeychain()) {\n\t                self.keychainService.replacePassword(c.id, opts.password, 'password');\n\t              } else {\n\t                c.password = opts.password;\n\t              }\n\t            } else {\n\t              c.name = opts.name;\n\t              c.instanceUrl = opts.instanceUrl;\n\t              if (self.keychainService.useSystemKeychain()) {\n\t                self.keychainService.replacePassword(c.id, opts.accessToken, 'accessToken');\n\t                self.keychainService.replacePassword(c.id, opts.refreshToken, 'refreshToken');\n\t              } else {\n\t                c.accessToken = opts.accessToken;\n\t                c.refreshToken = opts.refreshToken;\n\t              }\n\t            }\n\t            return false;\n\t          }\n\t        });\n\t        fs.outputFile(path.join(self.project.path, 'config', '.org_connections'), JSON.stringify(connections, null, 4), function (err) {\n\t          if (err) {\n\t            reject(new Error('Could not update org connections: ' + err.message));\n\t          } else {\n\t            resolve();\n\t          }\n\t        });\n\t      }\n\t    });\n\t  });\n\t};\n\t\n\t/**\n\t * Removes an org connection\n\t * @param  {String} id\n\t * @return {Promise}\n\t */\n\tOrgConnectionService.prototype.remove = function (id) {\n\t  var self = this;\n\t  return new Promise(function (resolve, reject) {\n\t    fs.readJson(path.join(self.project.path, 'config', '.org_connections'), function (err, connections) {\n\t      if (err) {\n\t        reject(new Error('Could not load org connections: ' + err.message));\n\t      } else {\n\t        var newConnections = [];\n\t        _.each(connections, function (c) {\n\t          if (c.id !== id) {\n\t            newConnections.push(c);\n\t          }\n\t        });\n\t        fs.outputFile(path.join(self.project.path, 'config', '.org_connections'), JSON.stringify(newConnections, null, 4), function (err) {\n\t          if (err) {\n\t            reject(new Error('Could not write org connections: ' + err.message));\n\t          } else {\n\t            resolve();\n\t          }\n\t        });\n\t      }\n\t    });\n\t  });\n\t};\n\t\n\tmodule.exports = OrgConnectionService;\n\n/***/ },\n/* 25 */\n/***/ function(module, exports) {\n\n\tmodule.exports = require(\"events\");\n\n/***/ },\n/* 26 */\n/***/ function(module, exports) {\n\n\tmodule.exports = require(\"fs-extra-promise\");\n\n/***/ },\n/* 27 */\n/***/ function(module, exports) {\n\n\tmodule.exports = require(\"os\");\n\n/***/ },\n/* 28 */\n/***/ function(module, exports) {\n\n\tmodule.exports = require(\"swig\");\n\n/***/ },\n/* 29 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/* WEBPACK VAR INJECTION */(function(__dirname) {var path = __webpack_require__(6);\n\tvar util = __webpack_require__(3);\n\tvar logger = __webpack_require__(4);\n\tvar _ = __webpack_require__(7);\n\tvar capitalize = __webpack_require__(111);\n\tvar camelize = __webpack_require__(96);\n\tvar EditorService = __webpack_require__(9);\n\t\n\tvar commands = {};\n\tvar cmdPath = path.join(__dirname);\n\tvar commandFiles = util.walkSync(cmdPath);\n\t_.each(commandFiles, function (filepath) {\n\t  commands[capitalize(camelize(path.basename(filepath).split('.')[0]) + 'Command')] = __webpack_require__(132)(filepath).command;\n\t});\n\t\n\t/**\n\t * Responses to the client that executed the command\n\t * @param  {Object|String} res   - response from the command\n\t * @param  {Boolean} success - whether the command was successfull (TODO: do we need this?)\n\t * @param  {Error} error   - error instance (for failed commands)\n\t * @return {String|Object|STDOUT}         - depends on the configuration of the client (more documentation needed here)\n\t */\n\tfunction _handleCommandResult(result) {\n\t  // if we're running via the cli, we can print human-friendly responses\n\t  // otherwise we return proper JSON\n\t  logger.info('handling command result');\n\t  if (result.result) {\n\t    logger.debug(result.result);\n\t  } else if (result.error) {\n\t    logger.error(result.error);\n\t  }\n\t\n\t  if (result.error) {\n\t    if (process.env.MAVENSMATE_CONTEXT !== 'cli') {\n\t      result.reject(result.error);\n\t    } else {\n\t      console.error(JSON.stringify({\n\t        error: result.error.message\n\t      }));\n\t      process.exit(1);\n\t    }\n\t  } else {\n\t    if (_.isString(result.result)) {\n\t      var response = {\n\t        message: result.result\n\t      };\n\t      if (process.env.MAVENSMATE_CONTEXT !== 'cli') {\n\t        result.resolve(response);\n\t      } else {\n\t        console.log(JSON.stringify(response));\n\t        process.exit(0);\n\t      }\n\t    } else {\n\t      if (process.env.MAVENSMATE_CONTEXT !== 'cli') {\n\t        result.resolve(result.result);\n\t      } else {\n\t        console.log(JSON.stringify(result.result));\n\t        process.exit(0);\n\t      }\n\t    }\n\t  }\n\t};\n\t\n\t/**\n\t * Command executor\n\t * @param  {Object} opts\n\t * @param  {Function} opts.openWindowFn - js function used to open a UI\n\t * @param  {Function} opts.project - project instance (used by the cli)\n\t * @return {Function}\n\t */\n\tmodule.exports = function (opts) {\n\t\n\t  opts = opts || {};\n\t\n\t  return {\n\t    /**\n\t     * Executes a command\n\t     * @param  {Object}   payload - object containing the following:\n\t     * @param  {String}   payload.name  - name of the command, e.g. new-project\n\t     * @param  {String}   payload.body  - arbitrary body of the command, e.g. { username: foo, password: bar } }\n\t     * @param  {String}   payload.project  - project instance or project id\n\t     * @param  {String}   payload.editor  - name of the editor, e.g. sublime, vscode, atom\n\t     * @param  {Function} payload.callback - callback, will be called when command finishes executing\n\t     * @return {Nothing}\n\t     */\n\t    execute: function (payload) {\n\t      return new Promise(function (resolve, reject) {\n\t        try {\n\t          logger.info('\\n\\n==================> executing command');\n\t          // logger.silly('payload ', payload);\n\t\n\t          var name, body, editor, project, openWindowFn, commandClassName;\n\t          name = payload.name;\n\t          body = payload.body;\n\t          editor = payload.editor || process.env.MAVENSMATE_EDITOR;\n\t          project = payload.project || opts.project;\n\t          openWindowFn = payload.openWindowFn || opts.openWindowFn;\n\t\n\t          // if we're in cli mode and our project has expired creds, we intercept the command and send them to authenticate\n\t          if (process.env.MAVENSMATE_CONTEXT === 'cli' && project && project.requiresAuthentication) {\n\t            name = 'oauth-project';\n\t          }\n\t\n\t          commandClassName = capitalize(camelize(name)) + 'Command'; // => new-project -> NewProjectCommand\n\t\n\t          var editorService = new EditorService(editor, openWindowFn);\n\t\n\t          var command = new commands[commandClassName](project, body, editorService);\n\t\n\t          logger.info('name: ', name);\n\t          logger.info('project: ', project && project.name ? project.name : 'none');\n\t          logger.info('body: ', JSON.stringify(body));\n\t          logger.info('editor: ', editor || 'none');\n\t          logger.debug('mavensmate command class name: ' + commandClassName);\n\t          logger.silly('mavensmate command instance: ', command);\n\t\n\t          if (!commands[commandClassName]) {\n\t            _handleCommandResult({\n\t              error: new Error('Command not supported: ' + name),\n\t              resolve: resolve,\n\t              reject: reject\n\t            });\n\t            return;\n\t          }\n\t\n\t          command.execute().then(function (result) {\n\t            _handleCommandResult({\n\t              result: result,\n\t              resolve: resolve,\n\t              reject: reject\n\t            });\n\t          }).catch(function (error) {\n\t            _handleCommandResult({\n\t              error: error,\n\t              resolve: resolve,\n\t              reject: reject\n\t            });\n\t          });\n\t        } catch (e) {\n\t          logger.error(e);\n\t          _handleCommandResult(e);\n\t        }\n\t      });\n\t    }\n\t  };\n\t};\n\t/* WEBPACK VAR INJECTION */}.call(exports, \"/\"))\n\n/***/ },\n/* 30 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * @file Represents a local MavensMate project\n\t * @author Joseph Ferraro <@joeferraro>\n\t */\n\t\n\t'use strict';\n\t\n\tvar Promise = __webpack_require__(1);\n\tvar temp = __webpack_require__(19);\n\tvar _ = __webpack_require__(7);\n\tvar fs = __webpack_require__(26);\n\tvar path = __webpack_require__(6);\n\tvar find = __webpack_require__(98);\n\tvar util = __webpack_require__(3);\n\tvar uuid = __webpack_require__(35);\n\tvar inherits = __webpack_require__(2);\n\tvar events = __webpack_require__(25);\n\tvar SalesforceClient = __webpack_require__(17);\n\tvar MetadataHelper = __webpack_require__(15).MetadataHelper;\n\tvar config = __webpack_require__(8);\n\tvar logger = __webpack_require__(4);\n\tvar normalize = __webpack_require__(112);\n\tvar IndexService = __webpack_require__(33);\n\tvar Package = __webpack_require__(20).Package;\n\tvar SymbolService = __webpack_require__(109);\n\tvar LogService = __webpack_require__(93);\n\tvar LightningService = __webpack_require__(16);\n\tvar KeychainService = __webpack_require__(92);\n\t\n\t/**\n\t * Represents a MavensMate project\n\t *\n\t * @constructor\n\t * @param {Object} [opts] - Options used in deployment\n\t * @param {String} [opts.name] - For new projects, sets the name of the project\n\t * @param {String} [opts.subscription] - (optional) Specifies list of Metadata types that the project should subscribe to\n\t * @param {String} [opts.workspace] - (optional) For new projects, sets the workspace\n\t * @param {String} [opts.path] - (optional) Explicitly sets path of the project (defaults to current working directory)\n\t * @param {String} [opts.origin] - (optional) When creating a MavensMate project from an existing directory, pass the existing path as \"origin\"\n\t */\n\tvar Project = function (opts) {\n\t  this.name = opts.name;\n\t  this.path = opts.path;\n\t  this.workspace = opts.workspace;\n\t  this.subscription = opts.subscription;\n\t  this.origin = opts.origin;\n\t  this.username = opts.username;\n\t  this.password = opts.password;\n\t  this.accessToken = opts.accessToken;\n\t  this.refreshToken = opts.refreshToken;\n\t  this.instanceUrl = opts.instanceUrl;\n\t  this.package = opts.package;\n\t  this.orgType = opts.orgType;\n\t  this.sfdcClient = opts.sfdcClient;\n\t  this.requiresAuthentication = true;\n\t  this.settings = {};\n\t  this.packageXml = null;\n\t  this.orgMetadata = null;\n\t  this.lightningIndex = null;\n\t  this.metadataHelper = null;\n\t  this.keychainService = new KeychainService();\n\t  this.logService = new LogService(this);\n\t  this.symbolService = new SymbolService(this);\n\t  this.lightningService = new LightningService(this);\n\t};\n\t\n\tinherits(Project, events.EventEmitter);\n\t\n\t/**\n\t * Initializes project instance based on whether this is a new or existing project\n\t * @param  {Boolean} isNewProject\n\t * @return {Promise}\n\t */\n\tProject.prototype.initialize = function (isNewProject, isExistingDirectory) {\n\t  var self = this;\n\t\n\t  return new Promise(function (resolve, reject) {\n\t    isNewProject = isNewProject || false;\n\t\n\t    if (!isNewProject) {\n\t      self._initExisting().then(function () {\n\t        resolve(self);\n\t      }).catch(function (error) {\n\t        logger.error('Could not initiate existing Project instance: ' + error.message);\n\t        reject(error);\n\t      }).done();\n\t    } else if (isNewProject) {\n\t      var initPromise = isExistingDirectory ? self._initNewProjectFromExistingDirectory() : self._initNew();\n\t      initPromise.then(function () {\n\t        resolve(self);\n\t      }).catch(function (error) {\n\t        logger.error('Could not initiate new Project instance: ' + error.message);\n\t        reject(error);\n\t      }).done();\n\t    }\n\t  });\n\t};\n\t\n\t/**\n\t * Initiates an existing (on disk) MavensMate project instance\n\t * @return {Promise}\n\t */\n\tProject.prototype._initNewProjectFromExistingDirectory = function () {\n\t  var self = this;\n\t  return new Promise(function (resolve, reject) {\n\t    var pkg, fileProperties;\n\t    if (!self.workspace) {\n\t      throw new Error('Please select a workspace for this project');\n\t    }\n\t    if (!self.origin) {\n\t      throw new Error('Please select an origin for this project');\n\t    }\n\t    if (!fs.existsSync(path.join(self.origin, 'src'))) {\n\t      return reject(new Error('Project must have a top-level src directory'));\n\t    }\n\t    if (!fs.existsSync(path.join(self.origin, 'src', 'package.xml'))) {\n\t      return reject(new Error('Project must have a valid package.xml file located in the src directory'));\n\t    }\n\t    self.name = path.basename(self.origin); // set name of the project to the basename of the project's origin path\n\t\n\t    // if they're moving the project into a workspace\n\t    if (self.workspace !== path.dirname(self.origin)) {\n\t      if (fs.existsSync(path.join(self.workspace, self.name))) {\n\t        return reject(new Error('Project with this name already exists in the selected workspace'));\n\t      } else {\n\t        // copy non-mavensmate project to selected workspace\n\t        fs.ensureDirSync(path.join(self.workspace, self.name));\n\t        fs.copySync(self.origin, path.join(self.workspace, self.name));\n\t      }\n\t    }\n\t\n\t    self.path = path.join(self.workspace, self.name);\n\t    fs.ensureDirSync(path.join(self.path, 'config'));\n\t\n\t    self.sfdcClient.describe().then(function (describe) {\n\t      self.metadataHelper = new MetadataHelper({ sfdcClient: self.sfdcClient });\n\t      return self.setDescribe(describe);\n\t    }).then(function () {\n\t      pkg = new Package({ project: self, path: path.join(self.path, 'src', 'package.xml') });\n\t      return pkg.init();\n\t    }).then(function () {\n\t      return self.sfdcClient.retrieveUnpackaged(pkg.subscription, true, self.path);\n\t    }).then(function (retrieveResult) {\n\t      logger.debug('retrieve result: ');\n\t      logger.debug(retrieveResult);\n\t      fileProperties = retrieveResult.fileProperties;\n\t      if (fs.existsSync(path.join(self.path, 'unpackaged'))) {\n\t        fs.removeSync(path.join(self.path, 'unpackaged'));\n\t      }\n\t      self.id = uuid.v1();\n\t      return self._initConfig();\n\t    }).then(function () {\n\t      logger.debug('initiating local store');\n\t      logger.silly(fileProperties);\n\t\n\t      return self._writeLocalStore(fileProperties);\n\t    }).then(function () {\n\t      resolve();\n\t    }).catch(function (error) {\n\t      // remove directory from workspace if we encounter an exception along the way\n\t      logger.error('Could not retrieve and write project to file system: ' + error.message);\n\t      logger.error(error.stack);\n\t      if (self.origin !== path.join(self.workspace, self.name) && fs.existsSync(path.join(self.workspace, self.name))) {\n\t        fs.removeSync(path.join(self.workspace, self.name));\n\t      }\n\t      reject(error);\n\t    }).done();\n\t  });\n\t};\n\t\n\t/**\n\t * Initiates an existing (on disk) MavensMate project instance\n\t * @return {Promise}\n\t */\n\tProject.prototype._initExisting = function () {\n\t  logger.debug('itializing existing project on the disk...');\n\t\n\t  var self = this;\n\t\n\t  return new Promise(function (resolve, reject) {\n\t    if (!self._hasValidStructure()) {\n\t      return reject(new Error('This does not seem to be a valid MavensMate project directory.'));\n\t    }\n\t\n\t    if (self.path) {\n\t      self.workspace = path.dirname(self.path);\n\t      self.name = path.basename(self.path);\n\t    } else if (self.workspace && self.name) {\n\t      self.path = path.join(self.workspace, self.name);\n\t    } else {\n\t      self.path = process.cwd();\n\t      self.workspace = path.dirname(self.path);\n\t      self.name = path.basename(self.path);\n\t    }\n\t\n\t    if (!fs.existsSync(self.path)) {\n\t      return reject(new Error('Project path does not exist.'));\n\t    }\n\t\n\t    logger.debug('project name', self.name);\n\t    logger.debug('project path', self.path);\n\t\n\t    self.settings = self._readSettings();\n\t    var creds = self._readCredentials();\n\t    if (!creds.password && !creds.accessToken && !creds.refreshToken) {\n\t      throw new Error('Could not retrieve credentials for project ' + self.name);\n\t    }\n\t    if (!creds.password && creds.accessToken && !creds.refreshToken) {\n\t      throw new Error('Project (' + self.name + ') is using Oauth for authentication but no refresh token was found');\n\t    }\n\t\n\t    self.packageXml = new Package({\n\t      project: self,\n\t      path: path.join(self.path, 'src', 'package.xml')\n\t    });\n\t    self.packageXml.init().then(function () {\n\t      if (!self.sfdcClient) {\n\t        logger.debug('Creating new sfdc client', self.settings, creds);\n\t        if (creds.refreshToken) {\n\t          self.sfdcClient = new SalesforceClient({\n\t            username: self.settings.username,\n\t            accessToken: creds.accessToken,\n\t            refreshToken: creds.refreshToken,\n\t            instanceUrl: self.settings.instanceUrl,\n\t            loginUrl: self.settings.loginUrl,\n\t            orgType: self.settings.orgType\n\t          });\n\t        } else {\n\t          self.sfdcClient = new SalesforceClient({\n\t            username: self.settings.username,\n\t            password: creds.password,\n\t            loginUrl: self.settings.loginUrl,\n\t            orgType: self.settings.orgType\n\t          });\n\t        }\n\t        self._listenForTokenUpdates();\n\t      }\n\t      return self.sfdcClient.initialize();\n\t    }).then(function (res) {\n\t      self.metadataHelper = new MetadataHelper({ sfdcClient: self.sfdcClient });\n\t      self.getLocalStore();\n\t      return self.getOrgMetadataIndexWithSelections();\n\t    }).then(function () {\n\t      return self._refreshDescribeFromServer();\n\t    }).then(function () {\n\t      self.sfdcClient.on('sfdcclient-new-log', function (message) {\n\t        if (message.sobject && message.sobject.Id) {\n\t          self.logService.downloadLog(message.sobject.Id).then(function (filePath) {\n\t            self.emit('new-log', filePath);\n\t          }).catch(function (error) {\n\t            logger.debug('Could not download log: ' + error.message);\n\t          }).done();\n\t        }\n\t      });\n\t      return self.sfdcClient.startSystemStreamingListener();\n\t    }).then(function () {\n\t      self.requiresAuthentication = false;\n\t      resolve();\n\t    }).catch(function (error) {\n\t      logger.error(error);\n\t      if (util.isCredentialsError(error)) {\n\t        logger.debug('project has expired access/refresh token, marking as invalid');\n\t        self.requiresAuthentication = true;\n\t      }\n\t      reject(error);\n\t    }).done();\n\t  });\n\t};\n\t\n\t/**\n\t * Initiates a new (not yet on disk) MavensMate project instance\n\t * @return {Promise}\n\t */\n\tProject.prototype._initNew = function () {\n\t  var self = this;\n\t  return new Promise(function (resolve, reject) {\n\t    if (!self.workspace) {\n\t      var workspace;\n\t      var workspaceSetting = config.get('mm_workspace');\n\t      logger.debug('Workspace not specified, retrieving base workspace: ');\n\t      logger.debug(workspaceSetting);\n\t      if (_.isArray(workspaceSetting)) {\n\t        workspace = workspaceSetting[0];\n\t      } else if (_.isString(workspaceSetting)) {\n\t        workspace = workspaceSetting;\n\t      }\n\t      if (workspace && !fs.existsSync(workspace)) {\n\t        fs.mkdirSync(workspace);\n\t      }\n\t      self.workspace = workspace;\n\t      logger.debug('workspace set to: ' + self.workspace);\n\t    } else if (!fs.existsSync(self.workspace)) {\n\t      fs.mkdirSync(self.workspace);\n\t    }\n\t    if (!self.workspace) {\n\t      throw new Error('Could not set workspace for new project');\n\t    }\n\t    self.path = path.join(self.workspace, self.name);\n\t    if (fs.existsSync(self.path)) {\n\t      reject(new Error('Directory already exists!'));\n\t    } else {\n\t      self.id = uuid.v1();\n\t      resolve(self.id);\n\t    }\n\t  });\n\t};\n\t\n\t/**\n\t * Whether this project has a valid MavensMate project structure\n\t * @return {Boolean}\n\t */\n\tProject.prototype._hasValidStructure = function () {\n\t  if (this.path) {\n\t    return fs.existsSync(path.join(this.path, 'config', '.settings'));\n\t  } else if (this.workspace && this.name) {\n\t    return fs.existsSync(path.join(this.workspace, this.name, 'config', '.settings'));\n\t  } else {\n\t    return fs.existsSync(path.join(process.cwd(), 'config', '.settings'));\n\t  }\n\t};\n\t\n\tProject.prototype.replaceLocalFiles = function (remotePath, replacePackageXml) {\n\t  var self = this;\n\t  return new Promise(function (resolve, reject) {\n\t    var finder = find(remotePath);\n\t    finder.on('file', function (file) {\n\t      var fileBasename = path.basename(file);\n\t      // file => /foo/bar/myproject/unpackaged/classes/myclass.cls\n\t      logger.debug('refreshing file: ' + file);\n\t\n\t      var directory = path.dirname(file); //=> /foo/bar/myproject/unpackaged/classes\n\t      var destinationDirectory = directory.replace(remotePath, path.join(self.workspace, self.name, 'src')); //=> /foo/bar/myproject/src/classes\n\t\n\t      // make directory if it doesnt exist (parent dirs included)\n\t      if (!fs.existsSync(destinationDirectory)) {\n\t        fs.mkdirpSync(destinationDirectory);\n\t      }\n\t\n\t      // remove project metadata, replace with recently retrieved\n\t      if (replacePackageXml && fileBasename === 'package.xml') {\n\t        fs.removeSync(path.join(destinationDirectory, fileBasename));\n\t        fs.copySync(file, path.join(destinationDirectory, fileBasename));\n\t      } else if (fileBasename !== 'package.xml') {\n\t        fs.removeSync(path.join(destinationDirectory, fileBasename));\n\t        fs.copySync(file, path.join(destinationDirectory, fileBasename));\n\t      }\n\t    });\n\t    finder.on('end', function () {\n\t      // remove retrieved\n\t      // TODO: package support\n\t      if (fs.existsSync(remotePath)) {\n\t        fs.removeAsync(remotePath).then(function () {\n\t          resolve();\n\t        }).catch(function (err) {\n\t          reject(err);\n\t        });\n\t      } else {\n\t        resolve();\n\t      }\n\t    });\n\t    finder.on('error', function (err) {\n\t      logger.debug('Could not process retrieved metadata: ' + err.message);\n\t      reject(err);\n\t    });\n\t  });\n\t};\n\t\n\t/**\n\t * Performs a Salesforce.com retrieve based on the type of project being requested,\n\t * create necessary /config, places on the disk in the correct workspace\n\t * @return {Promise}\n\t */\n\tProject.prototype.retrieveAndWriteToDisk = function () {\n\t  var self = this;\n\t\n\t  return new Promise(function (resolve, reject) {\n\t    var fileProperties;\n\t    if (fs.existsSync(self.path)) {\n\t      reject(new Error('Project with this name already exists in the specified workspace.'));\n\t    } else {\n\t      if (!self.package) {\n\t        // if user has not specified package, add standard developer objects to package\n\t        self.package = ['ApexClass', 'ApexComponent', 'ApexPage', 'ApexTrigger', 'StaticResource'];\n\t      }\n\t      self.sfdcClient.describe().then(function (describe) {\n\t        return self.setDescribe(describe);\n\t      }).then(function () {\n\t        self.path = path.join(self.workspace, self.name);\n\t        fs.mkdirSync(self.path);\n\t        fs.mkdirSync(path.join(self.path, 'config'));\n\t        return self.sfdcClient.retrieveUnpackaged(self.package, true, self.path);\n\t      }).then(function (retrieveResult) {\n\t        fileProperties = retrieveResult.fileProperties;\n\t        if (fs.existsSync(path.join(self.path, 'unpackaged'))) {\n\t          fs.renameSync(path.join(self.path, 'unpackaged'), path.join(self.path, 'src'));\n\t        }\n\t        // TODO: ensure packages write properly\n\t        return self._initConfig();\n\t      }).then(function () {\n\t        logger.debug('initiating local store');\n\t        logger.silly(fileProperties);\n\t\n\t        return self._writeLocalStore(fileProperties);\n\t      }).then(function () {\n\t        resolve();\n\t      }).catch(function (error) {\n\t        // remove directory from workspace if we encounter an exception along the way\n\t        logger.error('Could not retrieve and write project to file system: ' + error.message);\n\t        logger.error(error.stack);\n\t        if (fs.existsSync(self.path)) {\n\t          fs.removeSync(self.path);\n\t        }\n\t        reject(error);\n\t      }).done();\n\t    }\n\t  });\n\t};\n\t\n\t/**\n\t * Writes config/ files\n\t * @return {Promise}\n\t */\n\tProject.prototype._initConfig = function () {\n\t  var self = this;\n\t  return new Promise(function (resolve, reject) {\n\t    var settings = {\n\t      projectName: self.name,\n\t      username: self.sfdcClient.getUsername(),\n\t      id: self.id,\n\t      namespace: self.sfdcClient.getNamespace() || '',\n\t      orgType: self.sfdcClient.getOrgType(),\n\t      loginUrl: self.sfdcClient.getLoginUrl(),\n\t      instanceUrl: self.sfdcClient.getInstanceUrl(),\n\t      workspace: self.workspace,\n\t      subscription: self.subscription || config.get('mm_default_subscription')\n\t    };\n\t    self.writeSettings(settings);\n\t    self._writeCredentials();\n\t\n\t    var promises = [self._writeDebug(), self._writeEditorSettings(), self._refreshDescribeFromServer(), self.indexLightning()];\n\t\n\t    Promise.all(promises).then(function () {\n\t      resolve();\n\t    }).catch(function (err) {\n\t      logger.error('Could not initiate project config directory -->' + err.message);\n\t      reject(err);\n\t    }).done();\n\t  });\n\t};\n\t\n\t/**\n\t * Reverts a project to server state based on package.xml\n\t * TODO: handle packages!\n\t * @return {Promise}\n\t */\n\tProject.prototype.refreshFromServer = function () {\n\t  // TODO: implement stash!\n\t  var self = this;\n\t  return new Promise(function (resolve, reject) {\n\t    logger.debug('refreshing project from server...');\n\t    var retrieveResult;\n\t    var retrievePath = temp.mkdirSync({ prefix: 'mm_' });\n\t    self.packageXml = new Package({ project: self, path: path.join(self.path, 'src', 'package.xml') });\n\t    self.packageXml.init().then(function () {\n\t      return self.sfdcClient.retrieveUnpackaged(self.packageXml.subscription, true, retrievePath);\n\t    }).then(function (res) {\n\t      retrieveResult = res;\n\t      util.emptyDirectoryRecursiveSync(path.join(self.path, 'src'));\n\t      return self.replaceLocalFiles(path.join(retrievePath, 'unpackaged'), true);\n\t    }).then(function () {\n\t      return self._writeLocalStore(retrieveResult.fileProperties);\n\t    }).then(function () {\n\t      return self.indexLightning();\n\t    }).then(function () {\n\t      util.removeEmptyDirectoriesRecursiveSync(path.join(self.path, 'src'));\n\t      resolve();\n\t    }).catch(function (err) {\n\t      logger.error('Error refreshing project from server -->' + err.message);\n\t      reject(err);\n\t    }).done();\n\t  });\n\t};\n\t\n\t/**\n\t * Reverts a project to server state based on package.xml, also updates local metadata index and describe index\n\t * TODO: handle packages!\n\t * @return {Promise}\n\t */\n\tProject.prototype.clean = function () {\n\t  // TODO: implement stash!\n\t  var self = this;\n\t  return new Promise(function (resolve, reject) {\n\t    self.refreshFromServer().then(function () {\n\t      return self._refreshDescribeFromServer();\n\t    }).then(function () {\n\t      return self.indexMetadata();\n\t    }).then(function () {\n\t      resolve();\n\t    }).catch(function (err) {\n\t      logger.error('Error cleaning project -->' + err.message);\n\t      reject(err);\n\t    }).done();\n\t  });\n\t};\n\t\n\t/**\n\t * Compiles projects based on package.xml\n\t * @return {Promise}\n\t */\n\tProject.prototype.compile = function () {\n\t  var self = this;\n\t  return new Promise(function (resolve, reject) {\n\t    // writes temp directory, puts zip file inside\n\t    var newPath = temp.mkdirSync({ prefix: 'mm_' });\n\t    fs.copy(path.join(self.path, 'src'), path.join(newPath, 'unpackaged'), function (err) {\n\t      if (err) {\n\t        return reject(err);\n\t      } else {\n\t        var deployResult;\n\t        util.zipDirectory(path.join(newPath, 'unpackaged'), newPath).then(function () {\n\t          var zipStream = fs.createReadStream(path.join(newPath, 'unpackaged.zip'));\n\t          return self.sfdcClient.deploy(zipStream, { rollbackOnError: true, performRetrieve: true });\n\t        }).then(function (result) {\n\t          logger.debug('Compile result: ');\n\t          logger.debug(result);\n\t          deployResult = result;\n\t          if (deployResult.details.retrieveResult) {\n\t            return self.updateLocalStore(deployResult.details.retrieveResult.fileProperties);\n\t          } else {\n\t            return new Promise(function (resolve) {\n\t              resolve();\n\t            });\n\t          }\n\t        }).then(function () {\n\t          resolve(deployResult);\n\t        }).catch(function (error) {\n\t          reject(error);\n\t        }).done();\n\t      }\n\t    });\n\t  });\n\t};\n\t\n\t/**\n\t * Edits project based on provided payload (should be a JSON package)\n\t * @param  {Object} payload\n\t * @return {Promise}\n\t */\n\tProject.prototype.edit = function (pkg) {\n\t  // TODO: implement stash!\n\t  var self = this;\n\t  return new Promise(function (resolve, reject) {\n\t    var newPackage;\n\t    logger.debug('editing project, requested package is: ', pkg);\n\t    var retrievePath = temp.mkdirSync({ prefix: 'mm_' });\n\t    self.sfdcClient.retrieveUnpackaged(pkg, true, retrievePath).then(function (retrieveResult) {\n\t      return self._writeLocalStore(retrieveResult.fileProperties);\n\t    }).then(function () {\n\t      util.emptyDirectoryRecursiveSync(path.join(self.path, 'src'));\n\t      return self.replaceLocalFiles(path.join(retrievePath, 'unpackaged'), true);\n\t    }).then(function () {\n\t      newPackage = new Package({ project: self, path: path.join(self.path, 'src', 'package.xml') });\n\t      return newPackage.init();\n\t    }).then(function () {\n\t      self.packageXml = newPackage;\n\t      util.removeEmptyDirectoriesRecursiveSync(path.join(self.path, 'src'));\n\t      resolve();\n\t    }).catch(function (error) {\n\t      reject(error);\n\t    }).done();\n\t  });\n\t};\n\t\n\t/**\n\t * Retrieves config/.settings from the disk\n\t * @return {[type]} [description]\n\t */\n\tProject.prototype._readSettings = function () {\n\t  try {\n\t    return fs.readJsonSync(path.join(this.path, 'config', '.settings'));\n\t  } catch (err) {\n\t    logger.error('Error reading settings -->', err);\n\t    throw new Error('Could not read settings: ' + err.message);\n\t  }\n\t};\n\t\n\t/**\n\t * Writes settings to disk, updates local settings store\n\t */\n\tProject.prototype.writeSettings = function (settings) {\n\t  try {\n\t    for (var key in settings) {\n\t      this.settings[key] = settings[key];\n\t    }\n\t    fs.writeFileSync(path.join(this.path, 'config', '.settings'), JSON.stringify(this.settings, null, 4));\n\t  } catch (err) {\n\t    logger.error('Could not write settings', err);\n\t    throw new Error('Could not write settings', err);\n\t  }\n\t};\n\t\n\t// retrieves local_store from config/.local_store\n\tProject.prototype.getLocalStore = function () {\n\t  var localStore;\n\t  try {\n\t    localStore = fs.readJsonSync(path.join(this.path, 'config', '.local_store'));\n\t  } catch (e) {\n\t    if (e.message.indexOf('Unexpected end of input') >= 0) {\n\t      localStore = {};\n\t    } else {\n\t      throw e;\n\t    }\n\t  }\n\t  return localStore;\n\t};\n\t\n\tProject.prototype.getDebugSettingsSync = function () {\n\t  var debugSettings;\n\t  try {\n\t    debugSettings = fs.readJsonSync(path.join(this.path, 'config', '.debug'));\n\t  } catch (e) {\n\t    if (e.message.indexOf('Unexpected end of input') >= 0) {\n\t      debugSettings = {};\n\t    } else {\n\t      throw e;\n\t    }\n\t  }\n\t  return debugSettings;\n\t};\n\t\n\tProject.prototype.setLightningIndex = function (index) {\n\t  var self = this;\n\t  return new Promise(function (resolve, reject) {\n\t    try {\n\t      fs.outputFileSync(path.join(self.path, 'config', '.lightning'), JSON.stringify(index, null, 4));\n\t      self.lightningIndex = index;\n\t      resolve();\n\t    } catch (err) {\n\t      logger.error('Could not write lightning index file -->' + err.message);\n\t      reject(err);\n\t    }\n\t  });\n\t};\n\t\n\tProject.prototype.getLightningIndexSync = function () {\n\t  var lightningIndex;\n\t  try {\n\t    lightningIndex = fs.readJsonSync(path.join(this.path, 'config', '.lightning'));\n\t  } catch (e) {\n\t    if (e.message.indexOf('Unexpected end of input') >= 0) {\n\t      lightningIndex = [];\n\t    } else {\n\t      throw e;\n\t    }\n\t  }\n\t  return lightningIndex;\n\t};\n\t\n\tProject.prototype.getLightningIndex = function () {\n\t  var self = this;\n\t  return new Promise(function (resolve, reject) {\n\t    try {\n\t      var lightningIndex = fs.readJsonSync(path.join(self.path, 'config', '.lightning'));\n\t      return resolve(lightningIndex);\n\t    } catch (err) {\n\t      logger.debug('could not get index the first time');\n\t      logger.debug(err);\n\t      // if err is empty/missing file, index it\n\t      self.indexLightning().then(function () {\n\t        logger.debug('done indexing lightning, now go get it');\n\t        var lightningIndex = fs.readJsonSync(path.join(self.path, 'config', '.lightning'));\n\t        return resolve(lightningIndex);\n\t      }).catch(function (err) {\n\t        logger.error('Could not get lightning index -->' + err.message);\n\t        reject(err);\n\t      });\n\t    }\n\t  });\n\t};\n\t\n\t// retrieves describe from config/.describe\n\tProject.prototype.getDescribe = function () {\n\t  return this._describe;\n\t};\n\t\n\tProject.prototype.setDescribe = function (describe) {\n\t  var self = this;\n\t  return new Promise(function (resolve, reject) {\n\t    var describePath = path.join(self.path, 'config', '.describe');\n\t    if (fs.existsSync(path.join(self.path, 'config'))) {\n\t      fs.outputFile(describePath, JSON.stringify(describe, null, 4), function (err) {\n\t        if (err) {\n\t          return reject(err);\n\t        } else {\n\t          self._describe = describe;\n\t          resolve();\n\t        }\n\t      });\n\t    } else {\n\t      self._describe = describe;\n\t      resolve();\n\t    }\n\t  });\n\t};\n\t\n\tProject.prototype._refreshDescribeFromServer = function () {\n\t  var self = this;\n\t  return new Promise(function (resolve, reject) {\n\t    self.sfdcClient.describe().then(function (res) {\n\t      return self.setDescribe(res);\n\t    }).then(function () {\n\t      resolve();\n\t    }).catch(function (error) {\n\t      reject(error);\n\t    }).done();\n\t  });\n\t};\n\t\n\tProject.prototype.indexLightning = function () {\n\t  var self = this;\n\t  logger.debug('indexing lightning to config/.lightning');\n\t  return new Promise(function (resolve, reject) {\n\t    self.lightningService.getAll().then(function (res) {\n\t      return self.setLightningIndex(res);\n\t    }).then(function () {\n\t      return resolve();\n\t    }).catch(function (err) {\n\t      if (err.message.indexOf('sObject type \\'AuraDefinition\\' is not supported') >= 0 || err.message.indexOf('requested resource does not exist') >= 0) {\n\t        resolve();\n\t      } else {\n\t        logger.error('Could not index lightning -->' + err.message);\n\t        reject(err);\n\t      }\n\t    }).done();\n\t  });\n\t};\n\t\n\t/**\n\t * Indexes Apex symbols\n\t * @return {Promise}\n\t */\n\tProject.prototype.indexSymbols = function (apexClassName) {\n\t  var self = this;\n\t  return new Promise(function (resolve, reject) {\n\t    if (!fs.existsSync(path.join(self.path, 'config', '.symbols'))) {\n\t      fs.mkdirpSync(path.join(self.path, 'config', '.symbols'));\n\t    }\n\t\n\t    // todo: stash existing\n\t    var symbolPromise = apexClassName ? self.symbolService.indexApexClass(apexClassName) : self.symbolService.index();\n\t    symbolPromise.then(function () {\n\t      logger.debug('done indexing symbols!');\n\t      resolve();\n\t    }).catch(function (err) {\n\t      logger.error('Could not index apex symbols: ' + err.message);\n\t      reject(err);\n\t    }).done();\n\t  });\n\t};\n\t\n\t/**\n\t * Populates project's config/.org_metadata with server metadata based on the projects subscription\n\t * @return {Promise}\n\t */\n\tProject.prototype.indexMetadata = function () {\n\t  var self = this;\n\t  return new Promise(function (resolve, reject) {\n\t    // todo: stash existing\n\t    if (!self.indexService) {\n\t      self.indexService = new IndexService({ project: self });\n\t    }\n\t    self.indexService.indexServerProperties(self.settings.subscription).then(function (res) {\n\t      fs.outputFile(path.join(self.path, 'config', '.org_metadata'), JSON.stringify(res, null, 4), function (err) {\n\t        if (err) {\n\t          reject(err);\n\t        } else {\n\t          resolve();\n\t        }\n\t      });\n\t    }).catch(function (err) {\n\t      logger.error('Could not index metadataHelper: ' + err.message);\n\t      reject(err);\n\t    }).done();\n\t  });\n\t};\n\t\n\tProject.prototype.getOrgMetadataIndex = function () {\n\t  var self = this;\n\t  return new Promise(function (resolve, reject) {\n\t    fs.readJson(path.join(self.path, 'config', '.org_metadata'), function (err, orgMetadata) {\n\t      if (err) {\n\t        logger.debug('Could not return org metadata: ' + err.message);\n\t        resolve([]);\n\t      } else {\n\t        resolve(orgMetadata);\n\t      }\n\t    });\n\t  });\n\t};\n\t\n\tProject.prototype.getOrgMetadataIndexWithSelections = function (keyword, ids, packageXmlPath) {\n\t  var self = this;\n\t  return new Promise(function (resolve, reject) {\n\t    logger.debug('getOrgMetadataIndexWithSelections, package location: ', packageXmlPath);\n\t    if (fs.existsSync(path.join(self.path, 'config', '.org_metadata'))) {\n\t      try {\n\t        fs.readJson(path.join(self.path, 'config', '.org_metadata'), function (err, orgMetadata) {\n\t          if (err) {\n\t            reject(err);\n\t          } else {\n\t            self.orgMetadata = orgMetadata;\n\t            var promise;\n\t            var customPackage;\n\t            if (packageXmlPath) {\n\t              customPackage = new Package({ path: packageXmlPath });\n\t              promise = customPackage.init();\n\t            } else {\n\t              promise = Promise.resolve();\n\t            }\n\t\n\t            promise.then(function () {\n\t              if (!ids) {\n\t                ids = [];\n\t                var pkg = packageXmlPath ? customPackage : self.packageXml;\n\t                _.forOwn(pkg.subscription, function (packageMembers, metadataTypeXmlName) {\n\t                  var metadataType = self.metadataHelper.getTypeByXmlName(metadataTypeXmlName); //inFolder, childXmlNames\n\t                  if (!metadataType) {\n\t                    return reject(new Error('Unrecognized package.xml metadata type: ' + metadataTypeXmlName));\n\t                  }\n\t                  if (_.has(metadataType, 'parentXmlName')) {\n\t                    var parentMetadataType = self.metadataHelper.getTypeByXmlName(metadataType.parentXmlName);\n\t                  }\n\t                  if (packageMembers === '*') {\n\t                    ids.push(metadataTypeXmlName);\n\t                    var indexedType = _.find(orgMetadata, { 'xmlName': metadataTypeXmlName });\n\t                    if (_.has(indexedType, 'children')) {\n\t                      _.each(indexedType.children, function (child) {\n\t                        child.select = true;\n\t                      });\n\t                    }\n\t                  } else {\n\t                    _.each(packageMembers, function (member) {\n\t                      if (metadataType.inFolder) {\n\t                        // id : Document.FolderName.FileName.txt\n\t                        ids.push([metadataTypeXmlName, member.replace(/\\//, '.')].join('.'));\n\t                      } else if (parentMetadataType) {\n\t                        // id : CustomObject.Object_Name__c.fields.Field_Name__c\n\t                        var id = [parentMetadataType.xmlName, member.split('.')[0], metadataType.tagName, member.split('.')[1]].join('.');\n\t                        ids.push(id);\n\t                      } else if (_.has(metadataType, 'childXmlNames')) {\n\t                        var indexedType = _.find(orgMetadata, { 'xmlName': metadataTypeXmlName });\n\t                        if (indexedType) {\n\t                          var indexedNode = _.find(indexedType.children, { 'id': [metadataTypeXmlName, member].join('.') });\n\t                          if (_.has(indexedNode, 'children')) {\n\t                            _.each(indexedNode.children, function (child) {\n\t                              child.select = true;\n\t                              if (_.has(child, 'children')) {\n\t                                _.each(child.children, function (grandChild) {\n\t                                  grandChild.select = true;\n\t                                });\n\t                              }\n\t                            });\n\t                          }\n\t                          ids.push([metadataTypeXmlName, member].join('.'));\n\t                        }\n\t                      } else {\n\t                        // id: ApexClass.MyClassName\n\t                        ids.push([metadataTypeXmlName, member].join('.'));\n\t                      }\n\t                    });\n\t                  }\n\t                });\n\t              }\n\t              if (!self.indexService) {\n\t                self.indexService = new IndexService({ project: self });\n\t              }\n\t              self.indexService.setChecked(orgMetadata, ids);\n\t              self.indexService.ensureParentsAreCheckedIfNecessary(orgMetadata);\n\t              if (keyword) {\n\t                self.indexService.setVisibility(orgMetadata, keyword);\n\t              }\n\t              resolve(orgMetadata);\n\t            });\n\t          }\n\t        });\n\t      } catch (err) {\n\t        logger.debug('Could not getOrgMetadataIndexWithSelections: ' + err.message);\n\t        resolve([]);\n\t      }\n\t    } else {\n\t      logger.debug('org_metadata not found, returning empty array');\n\t      resolve([]);\n\t    }\n\t  });\n\t};\n\t\n\tProject.prototype.hasIndexedMetadata = function () {\n\t  return _.isArray(this.orgMetadata) && this.orgMetadata.length > 0;\n\t};\n\t\n\tProject.prototype.updateLocalStore = function (fileProperties) {\n\t  var self = this;\n\t  return new Promise(function (resolve, reject) {\n\t    Promise.resolve(fileProperties).then(function (properties) {\n\t      if (!_.isArray(properties)) {\n\t        properties = [properties];\n\t      }\n\t      try {\n\t        var store = self.getLocalStore();\n\t        _.each(properties, function (fp) {\n\t          if (fp.attributes) {\n\t            fp = normalize(fp);\n\t          }\n\t          var metadataType;\n\t          if (fp.type) {\n\t            metadataType = self.metadataHelper.getTypeByXmlName(fp.type);\n\t          } else if (fp.attributes && fp.attributes.type) {\n\t            metadataType = self.metadataHelper.getTypeByXmlName(fp.attributes.type);\n\t            fp.fullName = fp.name;\n\t            fp.fileName = ['unpackaged', metadataType.directoryName, fp.name + '.' + metadataType.suffix].join('/');\n\t            fp.createdByName = fp.createdBy.name;\n\t            fp.lastModifiedByName = fp.lastModifiedBy.name;\n\t            fp.manageableState = !fp.namespacePrefix ? 'unmanaged' : 'managed';\n\t            fp.namespacePrefix = fp.namespacePrefix;\n\t            fp.type = metadataType.xmlName;\n\t            delete fp.createdBy;\n\t            delete fp.lastModifiedBy;\n\t            delete fp.attributes;\n\t          } else {\n\t            metadataType = self.metadataHelper.getTypeByPath(fp.fileName.split('.')[1]);\n\t          }\n\t          logger.debug(metadataType);\n\t          if (metadataType && fp.attributes) {\n\t            var key = fp.name + '.' + metadataType.suffix;\n\t            var value = fp;\n\t            value.mmState = 'clean';\n\t            store[key] = value;\n\t          } else if (metadataType && fp.fullName.indexOf('package.xml') === -1) {\n\t            var key = fp.fullName + '.' + metadataType.suffix;\n\t            var value = fp;\n\t            value.mmState = 'clean';\n\t            store[key] = value;\n\t          } else {\n\t            if (fp.fullName.indexOf('package.xml') === -1) {\n\t              logger.debug('Could not determine metadata type for: ' + JSON.stringify(fp));\n\t            }\n\t          }\n\t        });\n\t\n\t        var filePath = path.join(self.path, 'config', '.local_store');\n\t        fs.outputFile(filePath, JSON.stringify(store, null, 4), function (err) {\n\t          if (err) {\n\t            logger.error('Could not write local store: ' + err.message);\n\t            reject(err);\n\t          } else {\n\t            resolve();\n\t          }\n\t        });\n\t      } catch (err) {\n\t        logger.error('Could not update local store -->' + err.message);\n\t        reject(err);\n\t      }\n\t    });\n\t  });\n\t};\n\t\n\tProject.prototype._writeLocalStore = function (fileProperties) {\n\t  var self = this;\n\t  return new Promise(function (resolve, reject) {\n\t    logger.debug('writing to local store');\n\t    Promise.resolve(fileProperties).then(function (properties) {\n\t      try {\n\t        if (!_.isArray(properties)) {\n\t          properties = [properties];\n\t        }\n\t        logger.debug('writing local store...');\n\t        logger.silly(properties);\n\t        var store = {};\n\t        _.each(properties, function (fp) {\n\t          if (!self.metadataHelper) {\n\t            self.metadataHelper = new MetadataHelper({ sfdcClient: self.sfdcClient });\n\t          }\n\t          var metadataType = self.metadataHelper.getTypeByPath(fp.fileName);\n\t          logger.silly(metadataType);\n\t          if (metadataType !== undefined && fp.fullName.indexOf('package.xml') === -1) {\n\t            var key = fp.fullName + '.' + metadataType.suffix;\n\t            var value = fp;\n\t            value.mmState = 'clean';\n\t            store[key] = value;\n\t          } else {\n\t            if (fp.fullName.indexOf('package.xml') === -1) {\n\t              logger.warn('Could not determine metadata type for: ' + JSON.stringify(fp));\n\t            }\n\t          }\n\t        });\n\t        var filePath = path.join(self.path, 'config', '.local_store');\n\t        fs.outputFile(filePath, JSON.stringify(store, null, 4), function (err) {\n\t          if (err) {\n\t            reject(new Error('Could not write local store: ' + err.message));\n\t          } else {\n\t            resolve();\n\t          }\n\t        });\n\t      } catch (err) {\n\t        logger.error('Could not initiate local store', err);\n\t        reject(err);\n\t      }\n\t    }).catch(function (err) {\n\t      logger.error('fileproperties promise rejected', err);\n\t      reject(err);\n\t    });\n\t  });\n\t};\n\t\n\t/**\n\t * Updates project debug settings\n\t * @param {String} key - setting key you'd like to override\n\t * @param  {Object} value - value to override\n\t * @return {Promise}                 [description]\n\t */\n\tProject.prototype._updateDebug = function (key, value) {\n\t  var self = this;\n\t  return new Promise(function (resolve, reject) {\n\t    logger.debug('updating debug setting [' + key + ']');\n\t    logger.debug(value);\n\t\n\t    var debug;\n\t    try {\n\t      debug = fs.readJsonSync(path.join(self.path, 'config', '.debug'));\n\t    } catch (err) {\n\t      reject(new Error('Could not read project .debug file: ' + err.message));\n\t    }\n\t\n\t    debug[key] = value;\n\t\n\t    logger.debug('Updating project debug: ');\n\t    logger.debug(debug);\n\t\n\t    try {\n\t      fs.writeFileSync(path.join(self.path, 'config', '.debug'), JSON.stringify(debug, null, 4));\n\t      resolve();\n\t    } catch (err) {\n\t      logger.error('Could not write project .debug file -->' + err.message);\n\t      reject(err);\n\t    }\n\t  });\n\t};\n\t\n\t/**\n\t * Writes config/.debug to the project on creation\n\t * @return {Promise}\n\t */\n\tProject.prototype._writeDebug = function () {\n\t  var self = this;\n\t  return new Promise(function (resolve, reject) {\n\t    var debug = {\n\t      users: [self.sfdcClient.conn.userInfo.user_id],\n\t      logType: 'USER_DEBUG',\n\t      debugLevelName: 'MAVENSMATE',\n\t      levels: {\n\t        Workflow: 'INFO',\n\t        Callout: 'INFO',\n\t        System: 'DEBUG',\n\t        Database: 'INFO',\n\t        ApexCode: 'DEBUG',\n\t        ApexProfiling: 'INFO',\n\t        Validation: 'INFO',\n\t        Visualforce: 'DEBUG'\n\t      },\n\t      expiration: 480\n\t    };\n\t\n\t    var filePath = path.join(self.path, 'config', '.debug');\n\t    fs.outputFile(filePath, JSON.stringify(debug, null, 4), function (err) {\n\t      if (err) {\n\t        reject(err);\n\t      } else {\n\t        resolve();\n\t      }\n\t    });\n\t  });\n\t};\n\t\n\t/**\n\t * Writes editor-specific config to the project root\n\t * @return {Promise}\n\t */\n\tProject.prototype._writeEditorSettings = function () {\n\t  var self = this;\n\t  return new Promise(function (resolve, reject) {\n\t    // TODO: right now these are written to every project root, regardless of editor\n\t\n\t    /*jshint camelcase: false */\n\t    var sublimeSettings = {\n\t      folders: [{\n\t        \"folder_exclude_patterns\": [\"config/.symbols\"],\n\t        path: '.'\n\t      }],\n\t      settings: {\n\t        auto_complete_triggers: [{\n\t          characters: '.',\n\t          selector: 'source - comment'\n\t        }, {\n\t          characters: ':',\n\t          selector: 'text.html - comment'\n\t        }, {\n\t          characters: '<',\n\t          selector: 'text.html - comment'\n\t        }, {\n\t          characters: ' ',\n\t          selector: 'text.html - comment'\n\t        }]\n\t      }\n\t    };\n\t    /*jshint camelcase: true */\n\t    var filePath = path.join(self.path, [self.name, 'sublime-project'].join('.'));\n\t    fs.outputFile(filePath, JSON.stringify(sublimeSettings, null, 4), function (err) {\n\t      if (err) {\n\t        reject(err);\n\t      } else {\n\t        resolve();\n\t      }\n\t    });\n\t  });\n\t};\n\t\n\t/**\n\t * Attaches listener to sfdcClient that updates the local token store on refresh\n\t * @return {Nothing}\n\t */\n\tProject.prototype._listenForTokenUpdates = function () {\n\t  var self = this;\n\t  if (self.sfdcClient.listeners('token-refresh').length === 0) {\n\t    self.sfdcClient.on('token-refresh', function () {\n\t      logger.debug('handling sfdcClient:token-refresh');\n\t      try {\n\t        self._writeCredentials(true);\n\t      } catch (err) {\n\t        logger.error('Could not store updated credentials', err);\n\t        throw err;\n\t      }\n\t    });\n\t  }\n\t};\n\t\n\t/**\n\t * Updates local credentials (in .settings and .credentials)\n\t * @param  {Object} creds\n\t * @return {Promise}\n\t */\n\tProject.prototype.updateCredentials = function (creds) {\n\t  var self = this;\n\t  logger.debug('updating project creds', creds);\n\t  return new Promise(function (resolve, reject) {\n\t    var username = creds.username || self.settings.username;\n\t    var password = creds.password;\n\t    var accessToken = creds.accessToken;\n\t    var refreshToken = creds.refreshToken;\n\t    var orgType = creds.orgType || self.settings.environment || self.settings.orgType;\n\t    var loginUrl = creds.loginUrl || self.settings.loginUrl;\n\t    var instanceUrl = creds.instanceUrl;\n\t    if (username && password) {\n\t      self.sfdcClient = new SalesforceClient({\n\t        username: username,\n\t        password: password,\n\t        orgType: orgType,\n\t        loginUrl: loginUrl,\n\t        instanceUrl: instanceUrl\n\t      });\n\t    } else {\n\t      self.sfdcClient = new SalesforceClient({\n\t        username: username,\n\t        accessToken: accessToken,\n\t        refreshToken: refreshToken,\n\t        orgType: orgType,\n\t        loginUrl: loginUrl,\n\t        instanceUrl: instanceUrl\n\t      });\n\t    }\n\t    self.sfdcClient.initialize().then(function () {\n\t      self._writeCredentials(true);\n\t      self.writeSettings({\n\t        username: username,\n\t        orgType: orgType,\n\t        loginUrl: loginUrl,\n\t        instanceUrl: instanceUrl\n\t      });\n\t      return self._updateDebug('users', [self.sfdcClient.getUserId()]);\n\t    }).then(function () {\n\t      if (self.requiresAuthentication) {\n\t        logger.debug('project required authentication, running init again');\n\t        return self._initExisting();\n\t      } else {\n\t        return new Promise(function (res) {\n\t          res();\n\t        });\n\t      }\n\t    }).then(function () {\n\t      self._listenForTokenUpdates();\n\t      resolve();\n\t    }).catch(function (err) {\n\t      logger.error('Could not update credentials -->' + err.message);\n\t      reject(err);\n\t    }).done();\n\t  });\n\t};\n\t\n\t/**\n\t * Writes accessToken/refreshToken to either the disk or the project's config/.credentials file\n\t * @param  {[type]} pw      [description]\n\t * @param  {[type]} replace [description]\n\t * @return {[type]}         [description]\n\t */\n\tProject.prototype._writeCredentials = function (replace) {\n\t  var self = this;\n\t  try {\n\t    logger.debug('_writeCredentials');\n\t    if (self.keychainService.useSystemKeychain()) {\n\t      logger.debug('storing credentials in system keychain');\n\t      var keychainAction = replace ? 'replacePassword' : 'storePassword';\n\t      if (self.sfdcClient.password) {\n\t        self.keychainService[keychainAction](self.id || self.settings.id, self.sfdcClient.password, 'password');\n\t      } else {\n\t        self.keychainService[keychainAction](self.id || self.settings.id, self.sfdcClient.accessToken, 'accessToken');\n\t        self.keychainService[keychainAction](self.id || self.settings.id, self.sfdcClient.refreshToken, 'refreshToken');\n\t      }\n\t      logger.debug('removing local .credentials store if it exists');\n\t      if (fs.existsSync(path.join(self.path, 'config', '.credentials'))) {\n\t        fs.removeSync(path.join(self.path, 'config', '.credentials'));\n\t      }\n\t    } else {\n\t      logger.debug('storing credentials in config/.credentials');\n\t      if (self.sfdcClient.password) {\n\t        fs.writeFileSync(path.join(self.path, 'config', '.credentials'), JSON.stringify({\n\t          password: self.sfdcClient.password\n\t        }, null, 4));\n\t      } else {\n\t        fs.writeFileSync(path.join(self.path, 'config', '.credentials'), JSON.stringify({\n\t          accessToken: self.sfdcClient.accessToken,\n\t          refreshToken: self.sfdcClient.refreshToken\n\t        }, null, 4));\n\t      }\n\t    }\n\t  } catch (err) {\n\t    logger.error('Error writing credentials -->', err);\n\t    throw new Error('Could not write credentials: ' + err.message);\n\t  }\n\t};\n\t\n\t/**\n\t * Retrieves access/refresh credentials from config/.credentials or the keychain\n\t * @return {Promise}\n\t */\n\tProject.prototype._readCredentials = function () {\n\t  try {\n\t    if (fs.existsSync(path.join(this.path, 'config', '.credentials'))) {\n\t      return fs.readJsonSync(path.join(this.path, 'config', '.credentials'));\n\t    } else {\n\t      return {\n\t        accessToken: this.keychainService.getPassword(this.settings.id, 'accessToken', true),\n\t        refreshToken: this.keychainService.getPassword(this.settings.id, 'refreshToken', true),\n\t        password: this.keychainService.getPassword(this.settings.id, 'password', true)\n\t      };\n\t    }\n\t  } catch (err) {\n\t    logger.error('Error reading credentials -->', err);\n\t    throw new Error('Could not read credentials for project ' + this.name + ': ' + err.message);\n\t  }\n\t};\n\t\n\tmodule.exports = Project;\n\n/***/ },\n/* 31 */\n/***/ function(module, exports) {\n\n\tmodule.exports = require(\"fs\");\n\n/***/ },\n/* 32 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * @file Service responsible for managing checkpoints in an org\n\t * @author Joseph Ferraro <@joeferraro>\n\t */\n\t\n\t'use strict';\n\t\n\tvar Promise = __webpack_require__(1);\n\tvar mavensMateFile = __webpack_require__(11);\n\tvar logger = __webpack_require__(4);\n\tvar _ = __webpack_require__(7);\n\t\n\tvar CheckpointService = function (project) {\n\t  this.project = project;\n\t};\n\t\n\t/**\n\t * Create checkpoint at the provided line for the provided file path\n\t * @param {String} filePath\n\t * @param {Integer} lineNumber\n\t * @return {Promise}\n\t */\n\tCheckpointService.prototype.createCheckpoint = function (filePath, lineNumber) {\n\t  var self = this;\n\t  return new Promise(function (resolve, reject) {\n\t    logger.debug('creating checkpoint for filepath: ' + filePath);\n\t    logger.debug(lineNumber);\n\t    var mmf = new mavensMateFile.MavensMateFile({ project: self.project, path: filePath });\n\t    self.project.sfdcClient.conn.tooling.sobject('ApexExecutionOverlayAction').create({\n\t      ActionScriptType: 'None',\n\t      ExecutableEntityId: mmf.id,\n\t      IsDumpingHeap: true,\n\t      Iteration: 1,\n\t      Line: lineNumber,\n\t      ScopeId: self.project.sfdcClient.getUserId()\n\t    }, function (err, res) {\n\t      if (err) {\n\t        reject(err);\n\t      } else {\n\t        resolve(res);\n\t      }\n\t    });\n\t  });\n\t};\n\t\n\t/**\n\t * Delete checkpoint at the provided line for the provided file path\n\t * @param {String} filePath\n\t * @param {Integer} lineNumber\n\t * @return {Promise}\n\t */\n\tCheckpointService.prototype.deleteCheckpointsForCurrentUser = function () {\n\t  var self = this;\n\t  return new Promise(function (resolve, reject) {\n\t    logger.debug('deleting checkpoints for current user');\n\t    self.project.sfdcClient.conn.tooling.query('Select Id From ApexExecutionOverlayAction Where ScopeId = \\'' + self.project.sfdcClient.getUserId() + '\\'', function (err, res) {\n\t      if (err) {\n\t        return reject(err);\n\t      } else {\n\t        if (res.size > 0) {\n\t          var ids = [];\n\t          _.each(res.records, function (r) {\n\t            ids.push(r.Id);\n\t          });\n\t          self.project.sfdcClient.conn.tooling.sobject('ApexExecutionOverlayAction').destroy(ids).then(function (deleteResult) {\n\t            return resolve(deleteResult);\n\t          }).catch(function (err) {\n\t            reject(err);\n\t          });\n\t        } else {\n\t          resolve();\n\t        }\n\t      }\n\t    });\n\t  });\n\t};\n\t\n\t/**\n\t * Delete checkpoint at the provided line for the provided file path\n\t * @param {String} filePath\n\t * @param {Integer} lineNumber\n\t * @return {Promise}\n\t */\n\tCheckpointService.prototype.deleteCheckpoint = function (filePath, lineNumber) {\n\t  var self = this;\n\t  return new Promise(function (resolve, reject) {\n\t    logger.debug('deleting checkpoint');\n\t    var mmf = new mavensMateFile.MavensMateFile({ project: self.project, path: filePath });\n\t    self.project.sfdcClient.conn.tooling.query('Select Id From ApexExecutionOverlayAction Where ExecutableEntityId = \\'' + mmf.id + '\\' AND ScopeId = \\'' + self.project.sfdcClient.getUserId() + '\\' AND Line = ' + lineNumber + '', function (err, res) {\n\t      logger.debug(err);\n\t      logger.debug(res);\n\t      if (err) {\n\t        return reject(err);\n\t      } else {\n\t        if (res.size > 0) {\n\t          self.project.sfdcClient.conn.tooling.sobject('ApexExecutionOverlayAction').destroy(res.records[0].Id).then(function (deleteResult) {\n\t            return resolve(deleteResult);\n\t          }).catch(function (err) {\n\t            reject(err);\n\t          });\n\t        } else {\n\t          resolve();\n\t        }\n\t      }\n\t    });\n\t  });\n\t};\n\t\n\t/**\n\t * List checkpoints for the provided filepath\n\t * @return {Promise}\n\t */\n\tCheckpointService.prototype.listCheckpoints = function (filePath) {\n\t  var self = this;\n\t  return new Promise(function (resolve, reject) {\n\t    logger.debug('listing checkpoints for filePath: ' + filePath);\n\t    var mmf = new mavensMateFile.MavensMateFile({ project: self.project, path: filePath });\n\t    self.project.sfdcClient.conn.tooling.query('Select Id From ApexExecutionOverlayAction Where ExecutableEntityId = \\'' + mmf.id + '\\' AND ScopeId = \\'' + self.project.sfdcClient.getUserId() + '\\'', function (err, res) {\n\t      if (err) {\n\t        reject(err);\n\t      } else {\n\t        resolve(res);\n\t      }\n\t    });\n\t  });\n\t};\n\t\n\tmodule.exports = CheckpointService;\n\n/***/ },\n/* 33 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * @file Responsible for locally indexing Salesforce metadata (Custom Objects, Apex Classes, Lightning files, etc.)\n\t * @author Joseph Ferraro <@joeferraro>\n\t */\n\t\n\t'use strict';\n\t\n\tvar _ = __webpack_require__(7);\n\tvar Promise = __webpack_require__(1);\n\tvar temp = __webpack_require__(19);\n\tvar config = __webpack_require__(8);\n\tvar path = __webpack_require__(6);\n\tvar util = __webpack_require__(3);\n\tvar find = __webpack_require__(98);\n\tvar logger = __webpack_require__(4);\n\tvar parseXml = __webpack_require__(147).parseString;\n\tvar MetadataHelper = __webpack_require__(15).MetadataHelper;\n\tvar pkg = __webpack_require__(20);\n\tvar MavensMateFile = __webpack_require__(11).MavensMateFile;\n\t\n\t/**\n\t * Service to get an index of an org's metadata\n\t * @param {Object} project - project instance (optional)\n\t * @param {Object} sfdcClient - client instance (optional)\n\t */\n\tfunction IndexService(opts) {\n\t  util.applyProperties(this, opts);\n\t  if (this.project) {\n\t    this.metadataHelper = new MetadataHelper({ sfdcClient: this.project.sfdcClient });\n\t    this.sfdcClient = this.project.sfdcClient;\n\t  } else if (this.sfdcClient) {\n\t    this.metadataHelper = new MetadataHelper({ sfdcClient: this.sfdcClient });\n\t  }\n\t}\n\t\n\t/**\n\t * Indexes children Metadata by preparing and submitting retrieve requests\n\t * @param  {Object} indexedType\n\t * @param  {Object} typeMap\n\t * @param  {String} xmlName\n\t * @param  {Array} childNames\n\t * @return {Promise}\n\t */\n\tIndexService.prototype._indexChildren = function (indexedType, typeMap, xmlName, childNames) {\n\t  var self = this;\n\t  return new Promise(function (resolve, reject) {\n\t    try {\n\t      logger.debug('_indexChildren -->' + xmlName);\n\t      logger.debug(childNames);\n\t\n\t      var childRetrievePackage = {};\n\t\n\t      if (childNames && childNames.length > 0) {\n\t        childRetrievePackage[xmlName] = childNames;\n\t      }\n\t\n\t      logger.debug('child retrieve package is: ');\n\t      logger.debug(childRetrievePackage);\n\t\n\t      var retrievePath = temp.mkdirSync({ prefix: 'mm_' });\n\t      self.sfdcClient.retrieveUnpackaged(childRetrievePackage, true, retrievePath).then(function (retrieveResult) {\n\t        var finder = find(path.join(retrievePath, 'unpackaged', typeMap[xmlName].directoryName));\n\t        finder.on('file', function (file) {\n\t\n\t          var fileBasename = path.basename(file);\n\t          var fileBasenameNoExtension = fileBasename.split('.')[0];\n\t          var fileBody = util.getFileBody(file);\n\t\n\t          logger.silly(fileBasename);\n\t          logger.silly(fileBasenameNoExtension);\n\t          logger.silly(fileBody);\n\t\n\t          var indexedChildType = _.find(indexedType.children, { 'id': [xmlName, fileBasenameNoExtension].join('.') });\n\t\n\t          logger.silly('indexedChildType -->');\n\t          logger.silly(indexedChildType);\n\t          logger.silly('\\n\\n');\n\t\n\t          parseXml(fileBody, function (err, xmlObject) {\n\t\n\t            _.forOwn(xmlObject[xmlName], function (value, tagName) {\n\t\n\t              // we're tracking this child type, now we need to add as a level 3 child\n\t              var matchingChildType = _.find(self.metadataHelper.childTypes, { 'tagName': tagName });\n\t              if (matchingChildType) {\n\t\n\t                var leaves = [];\n\t\n\t                //now add level leaves (lowest level is 4 at the moment)\n\t                if (!_.isArray(value)) {\n\t                  value = [value];\n\t                }\n\t                _.each(value, function (item) {\n\t                  var key;\n\t                  if (item.fullName) {\n\t                    key = item.fullName[0];\n\t                  } else if (item.actionName) {\n\t                    key = item.actionName[0];\n\t                  } else {\n\t                    logger.error('Unrecognized child metadata type ', matchingChildType, item);\n\t                  }\n\t                  if (key) {\n\t                    leaves.push({\n\t                      leaf: true,\n\t                      checked: false,\n\t                      level: 4,\n\t                      text: key,\n\t                      title: key,\n\t                      isFolder: false,\n\t                      id: [xmlName, fileBasenameNoExtension, tagName, key].join('.'),\n\t                      select: false\n\t                    });\n\t                  }\n\t                });\n\t\n\t                if (!_.find(indexedChildType, { 'text': tagName })) {\n\t                  indexedChildType.children.push({\n\t                    checked: false,\n\t                    level: 3,\n\t                    id: [xmlName, fileBasenameNoExtension, tagName].join('.'),\n\t                    text: tagName,\n\t                    title: tagName,\n\t                    isFolder: true,\n\t                    children: leaves,\n\t                    select: false,\n\t                    cls: 'folder'\n\t                  });\n\t                }\n\t              }\n\t            });\n\t          });\n\t        });\n\t        finder.on('end', function () {\n\t          // todo: delete tmp directory?\n\t          resolve(indexedType);\n\t        });\n\t        finder.on('error', function (err) {\n\t          logger.error('Could not crawl retrieved metadata: ' + err.message);\n\t          reject(err);\n\t        });\n\t      }).catch(function (err) {\n\t        logger.error('Could not index metadata type ' + xmlName + ': ' + err.message);\n\t        logger.error(err.stack);\n\t        reject(err);\n\t      }).done();\n\t    } catch (err) {\n\t      logger.error('Could not index metadata type ' + xmlName + ': ' + err.message);\n\t      reject(err);\n\t    }\n\t  });\n\t};\n\t\n\t/**\n\t * Indexes folder-based Metadata by preparing and submitting folder-based retrieve requests\n\t * @param  {Object} indexedType\n\t * @param  {Object} typeMap\n\t * @param  {String} xmlName\n\t * @return {Promise}\n\t */\n\tIndexService.prototype._indexFolders = function (indexedType, typeMap, xmlName) {\n\t  var self = this;\n\t  return new Promise(function (resolve, reject) {\n\t    var listFolderRequests = [];\n\t    _.each(indexedType.children, function (folder) {\n\t      listFolderRequests.push(self.sfdcClient.listFolder(xmlName, folder.fullName));\n\t    });\n\t\n\t    Promise.all(listFolderRequests).then(function (results) {\n\t\n\t      // console.log(results);\n\t      // console.log('---')\n\t\n\t      _.each(results, function (r) {\n\t\n\t        var folderName = Object.keys(r)[0];\n\t        var folderContents = r[folderName];\n\t\n\t        var indexedFolder = _.find(indexedType.children, { 'text': folderName });\n\t\n\t        _.each(folderContents, function (item) {\n\t          indexedFolder.children.push({\n\t            leaf: true,\n\t            title: item.fullName.split('/')[1],\n\t            checked: false,\n\t            text: item.fullName.split('/')[1],\n\t            level: 3,\n\t            isFolder: false,\n\t            id: [xmlName, item.fullName.split('/')[0], item.fullName.split('/')[1]].join('.'),\n\t            select: false\n\t          });\n\t        });\n\t      });\n\t\n\t      resolve(indexedType);\n\t    }).catch(function (error) {\n\t      logger.error('Could not finish indexing server properties: ' + error.message);\n\t      reject(error);\n\t    }).done();\n\t  });\n\t};\n\t\n\t/**\n\t * TODO: handle managed/unmanaged metadata\n\t *\n\t * Builds a 4-level hierarchy index for the specified type\n\t * @param  {Object} typeListResult\n\t * @param  {Object} typeMap\n\t * @return {Promise}\n\t */\n\tIndexService.prototype._indexType = function (typeListResult, typeMap) {\n\t  var self = this;\n\t  return new Promise(function (resolve, reject) {\n\t    // typeListResult will be an object with an xmlName key, array of results\n\t    // { \"ApexClass\" : [ { \"fullName\" : \"MyApexClass\" }, { \"fullName\" : \"MyOtherApexClass\" } ] }\n\t\n\t    logger.debug('indexing type ');\n\t    logger.silly(typeListResult);\n\t\n\t    var indexedType = {};\n\t    var childNames = [];\n\t    var hasChildTypes;\n\t    var isFolderType;\n\t    var xmlName;\n\t\n\t    // process the type returned (ApexClass, ApexPage, CustomObject, etc.)\n\t    _.forOwn(typeListResult, function (items, key) {\n\t      if (util.endsWith(key, 'Folder')) {\n\t        key = self._transformFolderNameToBaseName(key);\n\t      }\n\t\n\t      logger.silly('key: ' + key);\n\t      logger.silly('items: ');\n\t      logger.silly(items);\n\t\n\t      xmlName = key;\n\t      hasChildTypes = _.has(typeMap[key], 'childXmlNames');\n\t      isFolderType = typeMap[key].inFolder;\n\t\n\t      // top level (1)\n\t      var metadataTypeDef = typeMap[key];\n\t      indexedType.id = key;\n\t      indexedType.type = metadataTypeDef;\n\t      indexedType.title = key;\n\t      indexedType.xmlName = key;\n\t      indexedType.text = key;\n\t      indexedType.key = key;\n\t      indexedType.level = 1; //todo\n\t      indexedType.hasChildTypes = hasChildTypes;\n\t      indexedType.isFolder = true;\n\t      indexedType.inFolder = isFolderType;\n\t      indexedType.cls = 'folder';\n\t      indexedType.select = false;\n\t      indexedType.expanded = false;\n\t\n\t      // children (2)\n\t      _.each(items, function (item) {\n\t        logger.silly('---->');\n\t        logger.silly(item);\n\t        item.fullName = item.fullName || new MavensMateFile({ path: item.fileName }).name;\n\t        item.leaf = hasChildTypes || isFolderType ? false : true;\n\t        item.title = item.fullName;\n\t        item.checked = false;\n\t        item.id = [key, item.fullName].join('.');\n\t        item.text = item.fullName;\n\t        item.cls = hasChildTypes || isFolderType ? 'folder' : '';\n\t        item.level = 2;\n\t        item.isFolder = hasChildTypes || isFolderType;\n\t        item.children = [];\n\t        item.select = false;\n\t\n\t        if (hasChildTypes) {\n\t          childNames.push(item.fullName);\n\t        }\n\t      });\n\t\n\t      items = _.sortBy(items, 'title');\n\t      indexedType.children = items;\n\t    });\n\t\n\t    var indexPromise;\n\t    // we need to retrieve child metadata, crawl the result and insert levels 3 and 4 of metadata\n\t    // examples of metadata types with child types: CustomObject or Workflow\n\t    // examples of metadata types with folders: Document or Dashboard (folders go 1-level deep currently)\n\t    if (hasChildTypes) {\n\t      indexPromise = self._indexChildren(indexedType, typeMap, xmlName, childNames);\n\t    } else if (isFolderType) {\n\t      indexPromise = self._indexFolders(indexedType, typeMap, xmlName);\n\t    }\n\t\n\t    if (indexPromise !== undefined) {\n\t      indexPromise.then(function (result) {\n\t        resolve(result);\n\t      }).catch(function (err) {\n\t        logger.error('Could not index children/folders for ' + xmlName + ': ' + err.message);\n\t        reject(err);\n\t      }).done();\n\t    } else {\n\t      resolve(indexedType);\n\t    }\n\t  });\n\t};\n\t\n\t/**\n\t * Indexes Salesforce.com org (writes to .org_metadata) based on project subscription\n\t * @return {Promise}\n\t */\n\tIndexService.prototype.indexServerProperties = function (typeXmlNames) {\n\t  var self = this;\n\t  return new Promise(function (resolve, reject) {\n\t    if (!typeXmlNames) {\n\t      typeXmlNames = config.get('mm_default_subscription');\n\t    }\n\t\n\t    logger.debug('indexing typeXmlNames: ');\n\t    logger.debug(typeXmlNames);\n\t\n\t    var typeMap = {};\n\t\n\t    var listRequests = [];\n\t\n\t    _.each(typeXmlNames, function (typeXmlName) {\n\t      logger.debug('adding type to map: ');\n\t      logger.debug(typeXmlName);\n\t\n\t      var mType = self.metadataHelper.getTypeByXmlName(typeXmlName);\n\t\n\t      if (!mType) {\n\t        throw new Error('Unknown metadata type: ' + typeXmlName);\n\t      }\n\t\n\t      typeMap[typeXmlName] = mType;\n\t\n\t      var typeRequestName; // name to submit to list query\n\t\n\t      // prepare folder-based metadata for query\n\t      var isFolderMetadata = typeMap[typeXmlName].inFolder;\n\t      if (isFolderMetadata) {\n\t        typeRequestName = self._transformFolderNameForListRequest(typeXmlName);\n\t      } else {\n\t        typeRequestName = typeXmlName;\n\t      }\n\t\n\t      logger.silly(pkg);\n\t      if (_.has(pkg, typeXmlName + 'ListProvider')) {\n\t        var listProvider = new pkg[typeXmlName + 'ListProvider'](self.sfdcClient);\n\t        listRequests.push(listProvider.getList());\n\t      } else {\n\t        listRequests.push(self.sfdcClient.list(typeRequestName));\n\t      }\n\t    });\n\t\n\t    Promise.all(listRequests).then(function (results) {\n\t      var typePromises = [];\n\t      _.each(results, function (metadataListResult) {\n\t        logger.silly('indexing type promise: ');\n\t        logger.silly(metadataListResult);\n\t        logger.silly(JSON.stringify(typeMap));\n\t        typePromises.push(self._indexType(metadataListResult, typeMap));\n\t      });\n\t      return Promise.all(typePromises);\n\t    }).then(function (results) {\n\t      resolve(results);\n\t    }).catch(function (error) {\n\t      logger.error('An error occurred indexing server properties');\n\t      logger.error(error.message);\n\t      logger.error(error.stack);\n\t      reject(error);\n\t    });\n\t  });\n\t};\n\t\n\t/**\n\t * The Salesforce.com metadata api can be wonky, this transforms a folder type name to a list-friendly name\n\t * @param  {String} typeName\n\t * @return {String}\n\t */\n\tIndexService.prototype._transformFolderNameForListRequest = function (typeName) {\n\t  var metadataRequestType = typeName + 'Folder';\n\t  if (metadataRequestType === 'EmailTemplateFolder') {\n\t    metadataRequestType = 'EmailFolder';\n\t  }\n\t  return metadataRequestType;\n\t};\n\t\n\tIndexService.prototype._transformFolderNameToBaseName = function (typeName) {\n\t  if (typeName === 'EmailFolder') {\n\t    return 'EmailTemplate';\n\t  } else {\n\t    return typeName.replace('Folder', '');\n\t  }\n\t};\n\t\n\t/**\n\t * a number of protoype methods to crawl the org metadata index and select/deselect nodes\n\t */\n\tIndexService.prototype.crawlDict = function (jsonData, depth, query, parentVisiblity) {\n\t  var self = this;\n\t  depth += 1;\n\t  var visibility = 0;\n\t  var childVisibility = 0;\n\t\n\t  // if (!parentVisiblity) {\n\t  //   parentVisiblity = 0;\n\t  // }\n\t  // console.log('crawling dict: ', jsonData);\n\t  // console.log('parentVisiblity: ', parentVisiblity);\n\t\n\t  _.forOwn(jsonData, function (value, key) {\n\t    if (key === 'title') {\n\t      // console.log('VALUE IS ---> ', value);\n\t      // console.log('KEY IS ---> ', key);\n\t      if (_.isString(value) && value.toLowerCase().indexOf(query) >= 0) {\n\t        visibility = 1;\n\t      } else if (!_.isObject(value) && !_.isArray(value) && value.toLowerCase().indexOf(query) >= 0) {\n\t        visibility = 1;\n\t      }\n\t      // console.log(visibility);\n\t    }\n\t  });\n\t\n\t  _.forOwn(jsonData, function (value, key) {\n\t    if (self.crawl(value, depth, query, visibility) > 0) {\n\t      childVisibility = 1;\n\t    }\n\t    if (visibility > childVisibility) {\n\t      visibility = visibility;\n\t    } else {\n\t      visibility = childVisibility;\n\t    }\n\t  });\n\t\n\t  jsonData.visibility = visibility;\n\t\n\t  if (visibility === 0) {\n\t    jsonData.cls = 'hidden';\n\t    jsonData.addClass = 'dynatree-hidden';\n\t  }\n\t\n\t  return visibility;\n\t};\n\t\n\tIndexService.prototype.crawlArray = function (jsonData, depth, query, parentVisiblity) {\n\t  var self = this;\n\t  depth += 1;\n\t  var elementsToRemove = [];\n\t  var index = 0;\n\t  var childVisibility;\n\t\n\t  _.each(jsonData, function (value) {\n\t    if (_.isString(value)) {\n\t      childVisibility = value.toLowerCase().indexOf(query) >= 0;\n\t    } else if (_.isObject(value)) {\n\t      childVisibility = self.crawl(value, depth, query, parentVisiblity);\n\t      value.index = index;\n\t    } else {\n\t      childVisibility = value.toLowerCase().indexOf(query) >= 0;\n\t    }\n\t\n\t    if (childVisibility === 0 && parentVisiblity === 0) {\n\t      elementsToRemove.push(value);\n\t      value.cls = 'hidden';\n\t      value.addClass = 'dynatree-hidden';\n\t    } else {\n\t      if (value.isFolder) {\n\t        value.expanded = true;\n\t      }\n\t    }\n\t\n\t    index += 1;\n\t  });\n\t};\n\t\n\tIndexService.prototype.crawl = function (jsonData, depth, query, parentVisiblity) {\n\t  var self = this;\n\t  if (_.isArray(jsonData)) {\n\t    self.crawlArray(jsonData, depth, query, parentVisiblity);\n\t    var hv = false;\n\t    _.each(jsonData, function (jd) {\n\t      if (_.has(jd, 'visibility') && jd.visibility === 1) {\n\t        hv = true;\n\t        return false;\n\t      }\n\t    });\n\t    return hv;\n\t  } else if (_.isObject(jsonData)) {\n\t    return self.crawlDict(jsonData, depth, query, parentVisiblity);\n\t  } else {\n\t    return 0;\n\t  }\n\t};\n\t\n\tIndexService.prototype.setVisibility = function (jsonData, query) {\n\t  this.crawl(jsonData, 0, query.toLowerCase(), 0);\n\t};\n\t\n\tIndexService.prototype.ensureParentsAreCheckedIfNecessary = function (orgMetadata) {\n\t  _.each(orgMetadata, function (metadataType) {\n\t    if (metadataType.children && _.isArray(metadataType.children)) {\n\t      var numberOfChildrenSelected = 0;\n\t      _.each(metadataType.children, function (c) {\n\t        if (c.select) {\n\t          numberOfChildrenSelected++;\n\t        }\n\t      });\n\t      if (metadataType.children.length === numberOfChildrenSelected && metadataType.children > 0) {\n\t        metadataType.checked = true;\n\t        metadataType.select = true;\n\t      }\n\t    }\n\t  });\n\t};\n\t\n\tIndexService.prototype.setChecked = function (src, ids, dpth, key) {\n\t  // Recursively find checked item\n\t  if (!key) {\n\t    key = '';\n\t  }\n\t  if (!ids) {\n\t    ids = [];\n\t  }\n\t  if (!dpth) {\n\t    dpth = 0;\n\t  }\n\t  var self = this;\n\t  if (_.isArray(src)) {\n\t    _.each(src, function (litem) {\n\t      if (_.isObject(litem)) {\n\t        if (_.has(litem, 'id') && ids.indexOf(litem.id) >= 0) {\n\t          litem.checked = true;\n\t          litem.select = true;\n\t        }\n\t      }\n\t      self.setChecked(litem, ids, dpth + 2);\n\t    });\n\t  } else if (_.isObject(src)) {\n\t    _.forOwn(src, function (value, key) {\n\t      self.setChecked(value, ids, dpth + 1, key);\n\t    });\n\t  }\n\t};\n\t\n\tIndexService.prototype.setThirdStateChecked = function (src, ids, dpth, key) {\n\t  // Recursively find checked item\n\t  var self = this;\n\t  if (!key) {\n\t    key = '';\n\t  }\n\t  if (!ids) {\n\t    ids = [];\n\t  }\n\t  if (!dpth) {\n\t    dpth = 0;\n\t  }\n\t  if (_.isArray(src)) {\n\t    _.each(src, function (litem) {\n\t      if (_.isObject(litem)) {\n\t        return false;\n\t      }\n\t      self.setThirdStateChecked(litem, ids, dpth + 2);\n\t    });\n\t  } else if (_.isObject(src)) {\n\t    if (_.has(src, 'children') && _.isArray(src.children) && src.children.length > 0) {\n\t      var children = src.children;\n\t      var numberOfPossibleChecked = children.length;\n\t      var numberOfChecked = 0;\n\t      _.each(children, function (c) {\n\t        if (_.has(c, 'checked') && c.checked) {\n\t          numberOfChecked += 1;\n\t        }\n\t      });\n\t      if (numberOfPossibleChecked === numberOfChecked) {\n\t        src.checked = true;\n\t      } else if (numberOfChecked > 0) {\n\t        src.cls = 'x-tree-checkbox-checked-disabled';\n\t      }\n\t    }\n\t\n\t    _.forOwn(src, function (value, key) {\n\t      self.setThirdStateChecked(value, ids, dpth + 1, key);\n\t    });\n\t  }\n\t};\n\t\n\tmodule.exports = IndexService;\n\n/***/ },\n/* 34 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * @file Service responsible for running tests and parsing results\n\t * @author Joseph Ferraro <@joeferraro>\n\t */\n\t\n\t'use strict';\n\t\n\tvar Promise = __webpack_require__(1);\n\tvar _ = __webpack_require__(7);\n\tvar path = __webpack_require__(6);\n\tvar util = __webpack_require__(3);\n\tvar fs = __webpack_require__(10);\n\tvar logger = __webpack_require__(4);\n\tvar moment = __webpack_require__(21);\n\tvar config = __webpack_require__(8);\n\tvar swig = __webpack_require__(28);\n\t\n\t/**\n\t * Represents an apex test execution\n\t * @param {Object} opts\n\t * @param {Array} opts.project - instance of Project\n\t * @param {Array} opts.tests - array of test names, either an array of paths ['/path/to/test1.cls'] or ['test1.cls']\n\t * @param {Boolean} opts.skipCoverage - set to true to ignore coverage results\n\t */\n\tfunction ApexTest(opts) {\n\t  opts.tests = opts.tests || opts.classes || opts.paths || [];\n\t  util.applyProperties(this, opts);\n\t  this._initialize();\n\t}\n\t\n\tApexTest.prototype._initialize = function () {\n\t  var self = this;\n\t  self.apexClassOrTriggerIdToName = {};\n\t  self.testClassNames = [];\n\t  _.each(this.tests, function (t) {\n\t    var testNameOrPath = _.isString(t) ? t : t.testNameOrPath;\n\t    if (testNameOrPath.indexOf(path.sep) !== -1) {\n\t      if (testNameOrPath.indexOf(self.project.path) === -1) {\n\t        throw new Error('Test does not exist in this project: ' + testNameOrPath);\n\t      }\n\t    } else {\n\t      if (testNameOrPath.indexOf('.') === -1) {\n\t        testNameOrPath = testNameOrPath + '.cls';\n\t      }\n\t      var fullPath = path.join(self.project.path, 'src', 'classes', testNameOrPath);\n\t      if (fullPath.indexOf(self.project.path) === -1 || !fs.existsSync(fullPath)) {\n\t        throw new Error('Test does not exist in this project: ' + testNameOrPath);\n\t      }\n\t    }\n\t    self.testClassNames.push(testNameOrPath.indexOf(path.sep) !== -1 ? path.basename(testNameOrPath) : testNameOrPath);\n\t  });\n\t};\n\t\n\tApexTest.prototype.getResultHtml = function (result) {\n\t  result.project = this.project;\n\t  return swig.renderFile('views/unit_test/result.html', result);\n\t};\n\t\n\t/**\n\t * Executes requested tests\n\t * @return {Promise} resolves with {Object}\n\t */\n\tApexTest.prototype.execute = function () {\n\t  var self = this;\n\t  return new Promise(function (resolve, reject) {\n\t    var localStore = self.project.getLocalStore();\n\t    logger.silly(localStore);\n\t\n\t    var testsPayload = []; // this will either be an array of class ids or an array of objects containing class names and methods\n\t    var testClassIds = [];\n\t\n\t    if (_.isString(self.tests[0])) {\n\t      // an array of class ids\n\t      testsPayload = [];\n\t      _.each(self.testClassNames, function (testClassName) {\n\t        logger.debug('adding test to job', testClassName);\n\t        if (!localStore[testClassName]) {\n\t          return reject(new Error('Invalid project metadata cache. Run Index Metadata command to reset the cache.'));\n\t        }\n\t        var apexClassId = localStore[testClassName].id;\n\t        testsPayload.push(apexClassId);\n\t        testClassIds.push(apexClassId);\n\t      });\n\t    } else {\n\t      _.each(self.tests, function (test) {\n\t        logger.debug('adding test to job', test);\n\t        if (!localStore[path.basename(test.testNameOrPath)]) {\n\t          return reject(new Error('Invalid project metadata cache. Run Index Metadata command to reset the cache.'));\n\t        }\n\t        var apexClassId = localStore[path.basename(test.testNameOrPath)].id;\n\t        testsPayload.push({\n\t          classId: apexClassId,\n\t          testMethods: test.methodNames\n\t        });\n\t        testClassIds.push(apexClassId);\n\t      });\n\t    }\n\t\n\t    logger.debug('running the following tests: ');\n\t    logger.debug(testsPayload);\n\t\n\t    var classResults;\n\t    var methodResults;\n\t    var projectClassIds = [];\n\t    var projectTriggerIds = [];\n\t    var coverageResults = {};\n\t    var testResults = {};\n\t\n\t    self.project.sfdcClient.runTests(testsPayload).then(function (results) {\n\t      classResults = results.classResults;\n\t      methodResults = results.methodResults;\n\t      _.forOwn(self.project.getLocalStore(), function (value, key) {\n\t        if (util.endsWith(key, '.cls')) {\n\t          projectClassIds.push(value.id);\n\t          self.apexClassOrTriggerIdToName[value.id] = value.fullName;\n\t        } else if (util.endsWith(key, '.trigger')) {\n\t          projectTriggerIds.push(value.id);\n\t          self.apexClassOrTriggerIdToName[value.id] = value.fullName;\n\t        }\n\t      });\n\t\n\t      var logDownloadPromises = [];\n\t      var logIdsToDownload = [];\n\t\n\t      if (config.get('mm_download_categorized_test_logs')) {\n\t        _.each(methodResults.records, function (r) {\n\t          if (r.ApexLogId && logIdsToDownload.indexOf(r.ApexLogId) === -1) {\n\t            logIdsToDownload.push(r.ApexLogId);\n\t            logDownloadPromises.push(self._downloadLog(r.ApexClass.Name, r.ApexLogId));\n\t          }\n\t        });\n\t      }\n\t\n\t      return Promise.all(logDownloadPromises);\n\t    }).then(function () {\n\t      _.each(classResults.records, function (classResult) {\n\t        var key = classResult.ApexClass.Name;\n\t        testResults[key] = classResult;\n\t        testResults[key].results = _.where(methodResults.records, { ApexClassId: classResult.ApexClassId });\n\t      });\n\t\n\t      if (self.skipCoverage) {\n\t        logger.info('skipping test coverage...');\n\t        resolve({ testResults: testResults });\n\t      } else {\n\t        logger.info('getting test coverage...');\n\t        self.getCoverage(projectClassIds, testClassIds).then(function (classCoverageResults) {\n\t          coverageResults.classes = classCoverageResults;\n\t          return self.getCoverage(projectTriggerIds, testClassIds);\n\t        }).then(function (triggerCoverageResults) {\n\t          coverageResults.triggers = triggerCoverageResults;\n\t          resolve({ testResults: testResults, coverageResults: coverageResults });\n\t        }).catch(function (err) {\n\t          logger.error('Failed to get coverage');\n\t          logger.error(err);\n\t          reject(err);\n\t        }).done();\n\t      }\n\t    }).catch(function (err) {\n\t      logger.error('Could not run tests');\n\t      logger.error(err);\n\t      reject(err);\n\t    }).done();\n\t  });\n\t};\n\t\n\tApexTest.prototype.getOrgWideCoverage = function () {\n\t  var self = this;\n\t  return new Promise(function (resolve, reject) {\n\t    var query = 'SELECT PercentCovered FROM ApexOrgWideCoverage';\n\t    self.project.sfdcClient.conn.tooling.query(query, function (err, res) {\n\t      if (err) {\n\t        reject(err);\n\t      } else {\n\t        resolve(res.records[0].PercentCovered);\n\t      }\n\t    });\n\t  });\n\t};\n\t\n\tApexTest.prototype.getCoverage = function (classOrTriggerIds, testClassIds) {\n\t  var self = this;\n\t  return new Promise(function (resolve, reject) {\n\t    var coverageObject = 'ApexCodeCoverage';\n\t    if (testClassIds === undefined) {\n\t      coverageObject = 'ApexCodeCoverageAggregate';\n\t    }\n\t\n\t    var fields = ['NumLinesCovered', 'NumLinesUncovered', 'Coverage', 'ApexClassOrTriggerId'].join(',');\n\t    var andTestClassIdQualifier;\n\t    if (testClassIds && testClassIds.length > 0) {\n\t      andTestClassIdQualifier = ' AND ApexTestClassId IN (' + util.joinForQuery(testClassIds) + ')';\n\t    }\n\t\n\t    function queryForCoverage(classOrTriggerIdChunk) {\n\t      return new Promise(function (rresolve, rreject) {\n\t        var query = 'SELECT ' + fields + ' FROM ' + coverageObject + ' WHERE ApexClassOrTriggerId IN (' + util.joinForQuery(classOrTriggerIdChunk) + ')';\n\t\n\t        if (andTestClassIdQualifier) {\n\t          query += andTestClassIdQualifier;\n\t        }\n\t\n\t        logger.debug('coverage query: ', query);\n\t\n\t        self.project.sfdcClient.conn.tooling.query(query, function (err, res) {\n\t          if (err) {\n\t            rreject(err);\n\t          } else {\n\t            rresolve(res);\n\t          }\n\t        });\n\t      });\n\t    }\n\t\n\t    // 21 = 18 char id plus single quote plus comma, e.g. 'dsfklfdsjksdf',\n\t    // leave 6300 for AND ApexTestClassId IN statement (300 test classes run at the same time) (this is just a shot in the dark)\n\t    // max length of an individual classOrTriggerIds chunk = 13550/21 = ~600\n\t\n\t    var classOrTriggerIdsChunks = _.chunk(classOrTriggerIds, 250);\n\t    var coveragePromises = [];\n\t    _.each(classOrTriggerIdsChunks, function (chunk) {\n\t      coveragePromises.push(queryForCoverage(chunk));\n\t    });\n\t\n\t    Promise.all(coveragePromises).then(function (coveragePromiseResults) {\n\t      return self._aggregateCoverage(coveragePromiseResults);\n\t    }).then(function (res) {\n\t      resolve(res);\n\t    }).catch(function (err) {\n\t      logger.error('Could not get coverage: ' + err.message);\n\t      reject(err);\n\t    });\n\t  });\n\t};\n\t\n\tApexTest.prototype._downloadLog = function (testName, logId) {\n\t  var self = this;\n\t  return new Promise(function (resolve, reject) {\n\t    // create test name directory in debug/tests\n\t    if (!fs.existsSync(path.join(self.project.path, 'debug', 'tests', testName))) {\n\t      fs.mkdirpSync(path.join(self.project.path, 'debug', 'tests', testName));\n\t    }\n\t\n\t    var url = self.project.sfdcClient.conn.tooling._baseUrl() + '/sobjects/ApexLog/' + logId + '/Body';\n\t    self.project.sfdcClient.conn.tooling.request(url, function (err, res) {\n\t      if (err) {\n\t        reject(new Error('Could not download log: ' + err.message));\n\t      } else {\n\t        var logFileName = [moment().format('YYYY-MM-DD HH-mm-ss'), 'log'].join('.');\n\t        var filePath = path.join(self.project.path, 'debug', 'tests', testName, logFileName);\n\t        fs.outputFile(filePath, res, function (e) {\n\t          if (e) {\n\t            reject(new Error('Could not write log file: ' + e.message));\n\t          } else {\n\t            resolve();\n\t          }\n\t        });\n\t      }\n\t    });\n\t  });\n\t};\n\t\n\t/**\n\t * Transforms a CodeCoverage result into a dictionary of aggregate coverage results, keyed by the class name\n\t * @return {Promise}\n\t */\n\tApexTest.prototype._aggregateCoverage = function (coverageResultRecordSets) {\n\t  var self = this;\n\t  return new Promise(function (resolve, reject) {\n\t    try {\n\t      var result = {}; // { \"MyClass.cls\" : { \"coveredLines\" : 5, \"uncoveredLines\" : 10 } }\n\t      _.each(coverageResultRecordSets, function (coverageResultRecordSet) {\n\t        _.each(coverageResultRecordSet.records, function (coverageResult) {\n\t\n\t          logger.silly('coverage result : -->');\n\t          logger.silly(coverageResult);\n\t\n\t          var classOrTriggerName = self.apexClassOrTriggerIdToName[coverageResult.ApexClassOrTriggerId];\n\t\n\t          logger.silly(classOrTriggerName);\n\t\n\t          if (!_.has(result, classOrTriggerName)) {\n\t            logger.silly('adding coverage result for ', classOrTriggerName);\n\t            result[classOrTriggerName] = {};\n\t            result[classOrTriggerName].coveredLines = coverageResult.Coverage.coveredLines;\n\t            result[classOrTriggerName].uncoveredLines = coverageResult.Coverage.uncoveredLines;\n\t            logger.silly(result[classOrTriggerName]);\n\t          } else {\n\t            var currentValue = result[classOrTriggerName];\n\t            logger.silly('have coverage result for ', classOrTriggerName);\n\t            logger.silly('adding coverage');\n\t            currentValue.coveredLines = _.union(currentValue.coveredLines, coverageResult.Coverage.coveredLines);\n\t            currentValue.uncoveredLines = _.union(currentValue.uncoveredLines, coverageResult.Coverage.uncoveredLines);\n\t            logger.silly(currentValue);\n\t          }\n\t        });\n\t      });\n\t\n\t      logger.silly('coverage results: ', result);\n\t\n\t      // coveredLines: [\n\t      //   3, 4, 5\n\t      // ]\n\t\n\t      // uncoveredLines: [\n\t      //   1, 2, 3\n\t      // ]\n\t      //\n\t      // => [1, 2]\n\t\n\t      _.forOwn(result, function (coverageResult, apexClassOrTriggerId) {\n\t        // console.log('for apexClassOrTriggerId: '+apexClassOrTriggerId);\n\t        coverageResult.uncoveredLines = _.difference(coverageResult.uncoveredLines, coverageResult.coveredLines);\n\t        coverageResult.totalLines = coverageResult.coveredLines.length + coverageResult.uncoveredLines.length;\n\t        if (coverageResult.totalLines === 0) {\n\t          coverageResult.percentCovered = 0;\n\t        } else {\n\t          coverageResult.percentCovered = Math.round(parseFloat(coverageResult.coveredLines.length / coverageResult.totalLines * 100));\n\t        }\n\t      });\n\t\n\t      resolve(result);\n\t    } catch (e) {\n\t      reject(new Error('Could not aggregate coverage: ' + e.message));\n\t    }\n\t  });\n\t};\n\t\n\tmodule.exports = ApexTest;\n\n/***/ },\n/* 35 */\n/***/ function(module, exports) {\n\n\tmodule.exports = require(\"node-uuid\");\n\n/***/ },\n/* 36 */\n/***/ function(module, exports) {\n\n\tmodule.exports = {\n\t  mm_workspace: {\n\t    title: 'Workspaces',\n\t    description: 'Array of local workspaces. These should be absolute, valid paths.',\n\t    example: '*nix paths should include a leading slash. Windows paths should include the drive and escaped back slashes.<br/><br/>*nix Example: [ \"/path/to/workspace\", \"/path/to/another/workspace\" ]<br/>Windows Example: [ \"C:\\\\\\\\some\\\\\\\\path\", \"C:\\\\\\\\another\\\\\\\\path\" ]',\n\t    type: 'array',\n\t    default: [],\n\t    order: 10\n\t  },\n\t  mm_api_version: {\n\t    title: 'Salesforce API Version',\n\t    description: 'The API version you would like to use when accessing the Salesforce APIs.',\n\t    type: 'string',\n\t    default: '36.0',\n\t    order: 20\n\t  },\n\t  mm_compile_check_conflicts: {\n\t    title: 'Check conflicts before compile',\n\t    description: 'Set to true to check for conflicts when compiling Apex/Visualforce metadata.',\n\t    type: 'boolean',\n\t    default: true,\n\t    order: 35\n\t  },\n\t  mm_download_categorized_test_logs: {\n\t    title: 'Download categorized Apex unit test logs',\n\t    description: 'Set to true to download Apex unit test logs to your project\\'s debug/<test-name>/ directory',\n\t    type: 'boolean',\n\t    default: false,\n\t    order: 36\n\t  },\n\t  mm_timeout: {\n\t    title: 'Timeout, in seconds',\n\t    description: 'Timeout (in seconds) for MavensMate commands.',\n\t    type: 'integer',\n\t    default: 600,\n\t    order: 40\n\t  },\n\t  mm_default_subscription: {\n\t    title: 'Default metadata subscription',\n\t    description: 'Array of metadata types that should be included in every new MavensMate project, e.g. ApexClass, ApexPage, CustomObject, StaticResource',\n\t    type: 'array',\n\t    default: ['ApexClass', 'ApexComponent', 'ApexPage', 'ApexTrigger', 'StaticResource'],\n\t    order: 50\n\t  },\n\t  mm_ignore_managed_metadata: {\n\t    title: 'Ignore managed metadata',\n\t    description: 'Set to true to prevent managed metadata from being downloaded to your MavensMate projects',\n\t    type: 'boolean',\n\t    default: true,\n\t    order: 160\n\t  },\n\t  mm_use_keyring: {\n\t    title: 'Use keyring',\n\t    description: 'Set to true if you would like MavensMate to use your machine\\'s keychain support to store/retrieve Salesforce.com credentials. If set to false, MavensMate will store passwords in plain text in your project\\'s config/.settings and config/.org_connections files.',\n\t    type: 'boolean',\n\t    default: true,\n\t    order: 60\n\t  },\n\t  mm_compile_with_tooling_api: {\n\t    title: 'Compile Apex/Visualforce metadata with Tooling API',\n\t    description: 'Set to true to use the tooling api to compile apex metadata (if you\\'re experiencing compile issues, set this to false to use the metadata api)',\n\t    type: 'boolean',\n\t    default: true,\n\t    order: 30\n\t  },\n\t  mm_subl_location: {\n\t    title: 'Sublime Text location',\n\t    description: 'The full path of your Sublime Text executable (Sublime Text users only).',\n\t    type: 'object',\n\t    order: 11,\n\t    default: {\n\t      \"windows\": \"C:\\\\Program Files\\\\Sublime Text 3\\\\sublime_text.exe\",\n\t      \"linux\": \"/usr/bin/subl\",\n\t      \"osx\": \"/Applications/Sublime Text.app/Contents/SharedSupport/bin/subl\"\n\t    }\n\t  },\n\t  mm_atom_exec_path: {\n\t    title: 'Atom executable location',\n\t    description: 'The full path to atom executable (Atom users only).',\n\t    type: 'object',\n\t    default: {\n\t      \"windows\": \"C:\\\\Program Files\\\\Atom\\\\Atom.exe\",\n\t      \"linux\": \"/usr/bin/atom\",\n\t      \"osx\": \"/usr/local/bin/atom\"\n\t    },\n\t    order: 150\n\t  },\n\t  mm_vscode_exec_path: {\n\t    title: 'Visual Studio Code executable location',\n\t    description: 'The full path to Visual Studio \"code\" executable (Visual Studio Code users only).',\n\t    type: 'object',\n\t    default: {\n\t      \"windows\": \"C:\\\\Program Files\\\\Code\\\\Code.exe\",\n\t      \"linux\": \"/usr/bin/code\",\n\t      \"osx\": \"/usr/local/bin/code\"\n\t    },\n\t    order: 150\n\t  },\n\t  mm_log_location: {\n\t    title: 'MavensMate logs location',\n\t    description: 'Full path to the location where you would like MavensMate to store its logs. When this and mm_log_level are set, MavensMate will write logs to this path with the file name mavensmate.log. Relevant logs should be included with any bug reports.',\n\t    type: 'string',\n\t    default: '',\n\t    order: 70\n\t  },\n\t  mm_log_level: {\n\t    title: 'Plugin log level',\n\t    description: 'Possible values: INFO, WARN, DEBUG, VERBOSE, SILLY',\n\t    type: 'string',\n\t    default: 'DEBUG',\n\t    order: 80\n\t  },\n\t  mm_play_sounds: {\n\t    title: 'Play sounds',\n\t    description: 'Set to true if you would like MavensMate to play notification sounds on events like deployments, unit tests, etc.',\n\t    type: 'boolean',\n\t    default: true,\n\t    order: 90\n\t  },\n\t  mm_template_location: {\n\t    title: 'MavensMate templates location',\n\t    description: 'Possible values: remote or local. Set to \"remote\" when templates should be sourced from GitHub. Set to \"local\" if you have cloned MavensMate-Templates locally and wish to source templates from your local file system.',\n\t    type: 'string',\n\t    default: 'remote',\n\t    order: 130\n\t  },\n\t  mm_template_source: {\n\t    title: 'MavensMate template source',\n\t    description: 'If \"mm_template_location\" is set to \"local\", set this to the absolute location of the directory where you\\'ve forked the MavensMate-Templates project.',\n\t    example: '\"/path/on/your/machine/to/templates\"<br/>If \"mm_template_location\" is set to \"remote\", set to github location (\"username/reponame/branchname\"). Project structure must be in the format found here: https://github.com/joeferraro/MavensMate-Templates',\n\t    type: 'string',\n\t    default: 'joeferraro/MavensMate-Templates/master',\n\t    order: 140\n\t  },\n\t  mm_apex_file_extensions: {\n\t    title: 'Salesforce file extensions',\n\t    description: 'Array of file extensions that should be considered \"Salesforce\" file extensions.',\n\t    type: 'array',\n\t    default: [\".page\", \".component\", \".cls\", \".object\", \".trigger\", \".layout\", \".resource\", \".remoteSite\", \".labels\", \".app\", \".dashboard\", \".permissionset\", \".workflow\", \".email\", \".profile\", \".scf\", \".queue\", \".reportType\", \".report\", \".weblink\", \".tab\", \".letter\", \".role\", \".homePageComponent\", \".homePageLayout\", \".objectTranslation\", \".flow\", \".datacategorygroup\", \".snapshot\", \".site\", \".sharingRules\", \".settings\", \".callCenter\", \".community\", \".authProvider\", \".customApplicationComponent\", \".quickAction\", \".approvalProcess\", \".html\"],\n\t    order: 170\n\t  },\n\t  mm_http_proxy: {\n\t    title: 'HTTP Proxy',\n\t    description: 'Set if you are behind a proxy (you can also set via export HTTP_PROXY, export HTTPS_PROXY). Example: http:\\/\\/10.10.1.10:3128 or http:\\/\\/user:pass@10.10.1.10:3128/',\n\t    type: 'string',\n\t    default: '',\n\t    order: 190\n\t  },\n\t  mm_https_proxy: {\n\t    title: 'HTTPS Proxy',\n\t    description: 'Set if you are behind a proxy (you can also set via export HTTP_PROXY, export HTTPS_PROXY). Example: http:\\/\\/10.10.1.10:3128 or http:\\/\\/user:pass@10.10.1.10:3128/',\n\t    type: 'string',\n\t    default: '',\n\t    order: 200\n\t  },\n\t  mm_purge_on_delete: {\n\t    title: 'Purge on delete',\n\t    description: 'Set to true to perform a hard delete when deleting metadata.',\n\t    type: 'boolean',\n\t    default: true,\n\t    order: 200\n\t  },\n\t  mm_legacy_compile: {\n\t    title: 'Use legacy compile method',\n\t    description: 'Set to true to perform a retrieve via the metadata API after Apex/VF compilation. Only set to true if you are having trouble compiling.',\n\t    type: 'boolean',\n\t    default: false,\n\t    order: 210\n\t  }\n\t};\n\n/***/ },\n/* 37 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * @file Collection of helper functions for the swig renderer\n\t * @author Joseph Ferraro <@joeferraro>\n\t */\n\t\n\t'use strict';\n\t\n\tvar path = __webpack_require__(6);\n\tvar fs = __webpack_require__(10);\n\tvar util = __webpack_require__(3);\n\tvar _ = __webpack_require__(7);\n\tvar config = __webpack_require__(8);\n\tvar logger = __webpack_require__(4);\n\tvar querystring = __webpack_require__(22);\n\t\n\tvar ViewHelper = function (opts) {\n\t  util.applyProperties(this, opts);\n\t};\n\t\n\tViewHelper.prototype.util = util;\n\tViewHelper.prototype.config = config;\n\t\n\tViewHelper.prototype.getSupportedEditors = function () {\n\t  return this.supportedEditors;\n\t};\n\t\n\tViewHelper.prototype.isMenuItemActive = function (url, resource) {\n\t  if (_.isString(resource)) {\n\t    return url.indexOf('/app/' + resource) === 0;\n\t  } else if (_.isArray(resource)) {\n\t    for (var r in resource) {\n\t      if (url.indexOf('/app/' + resource[r]) === 0) return true;\n\t    }\n\t    return false;\n\t  } else {\n\t    return false;\n\t  }\n\t};\n\t\n\tViewHelper.prototype.getPhotoUrl = function (project) {\n\t  try {\n\t    return project.sfdcClient.conn.userInfo.photos.thumbnail + '?oauth_token=' + project.sfdcClient.accessToken;\n\t  } catch (e) {\n\t    return null;\n\t  }\n\t};\n\t\n\tViewHelper.prototype.getPathBaseName = function (p) {\n\t  return path.basename(p);\n\t};\n\t\n\tViewHelper.prototype.getRobotPath = function () {\n\t  return this.getBaseUrl() + '/app/static/images/robots/' + (Math.floor(Math.random() * 5) + 1).toString() + '.png';\n\t};\n\t\n\tViewHelper.prototype.getRobotNoise = function () {\n\t  var noises = ['blerg', 'bloop', 'beep boop boop', 'beep boop beep', 'morp', 'jonk', 'ping', 'zonk', 'xonx', 'morple', 'fwat', 'turple'];\n\t  var index = Math.floor(Math.random() * noises.length) + 0;\n\t  return noises[index];\n\t};\n\t\n\tViewHelper.prototype.listProjects = function () {\n\t  var workspaces = config.get('mm_workspace');\n\t  var projects = [];\n\t  if (_.isString(workspaces) && workspaces === '') {\n\t    workspaces = [];\n\t  }\n\t  if (!_.isArray(workspaces)) {\n\t    workspaces = [workspaces];\n\t  }\n\t  _.each(workspaces, function (workspacePath) {\n\t    try {\n\t      var projectPaths = util.listDirectories(workspacePath);\n\t      _.each(projectPaths, function (projectPath) {\n\t        var settingsPath = path.join(projectPath, 'config', '.settings');\n\t        if (fs.existsSync(settingsPath)) {\n\t          var settings = util.getFileBody(settingsPath, true);\n\t          projects.push({\n\t            id: settings.id,\n\t            path: projectPath\n\t          });\n\t        }\n\t      });\n\t    } catch (e) {\n\t      logger.error('Could not list projects: ' + e.message);\n\t    }\n\t  });\n\t  return projects;\n\t};\n\t\n\tViewHelper.prototype.getStaticResourcePath = function () {\n\t  return this.getBaseUrl() + '/app/static';\n\t};\n\t\n\tViewHelper.prototype.getBaseUrl = function () {\n\t  return 'http://localhost:' + this.port;\n\t};\n\t\n\tViewHelper.prototype.getDefaultSubscription = function () {\n\t  return config.get('mm_default_subscription');\n\t};\n\t\n\tViewHelper.prototype.getWorkspaces = function () {\n\t  var workspaces = config.get('mm_workspace');\n\t  if (!_.isArray(workspaces)) {\n\t    workspaces = [workspaces];\n\t  }\n\t  return workspaces;\n\t};\n\t\n\tViewHelper.prototype.getMetadataObjects = function (project) {\n\t  return _.sortBy(project.getDescribe().metadataObjects, 'xmlName');\n\t};\n\t\n\tViewHelper.prototype.doesClassOrTriggerExist = function (project, classOrTriggerName, type) {\n\t  var self = this;\n\t  if (type === 'ApexClass') {\n\t    return fs.existsSync(path.join(project.path), 'src', 'classes', classOrTriggerName + '.cls');\n\t  } else if (type === 'ApexTrigger') {\n\t    return fs.existsSync(path.join(project.path), 'src', 'triggers', classOrTriggerName + '.trigger');\n\t  }\n\t};\n\t\n\tViewHelper.prototype.getFileLines = function (project, classOrTriggerName, type) {\n\t  var self = this;\n\t  if (type === 'ApexClass') {\n\t    return fs.readFileSync(path.join(project.path, 'src', 'classes', classOrTriggerName + '.cls'), 'utf8').toString().split(/\\r?\\n/);\n\t  } else if (type === 'ApexTrigger') {\n\t    return fs.readFileSync(path.join(project.path, 'src', 'triggers', classOrTriggerName + '.trigger'), 'utf8').toString().split(/\\r?\\n/);\n\t  }\n\t};\n\t\n\tViewHelper.prototype.getCoverageCssClass = function (percentCovered) {\n\t  if (percentCovered <= 40) {\n\t    return 'error';\n\t  } else if (percentCovered < 75) {\n\t    return 'warning';\n\t  } else {\n\t    return 'success';\n\t  }\n\t};\n\t\n\tViewHelper.prototype.htmlize = function (str) {\n\t  try {\n\t    str = str.replace(/&/g, '&amp;');\n\t    str = str.replace(/\"/g, '&quot;');\n\t    str = str.replace(/</g, '&lt;');\n\t    str = str.replace(/>/g, '&gt;');\n\t    str = str.replace(/\\n/g, '<br/>');\n\t    str = str.replace(/\\t/g, '&nbsp;&nbsp;&nbsp;&nbsp;');\n\t    str = str.replace(/\\s/g, '&nbsp;');\n\t    return str;\n\t  } catch (e) {\n\t    return str;\n\t  }\n\t};\n\t\n\tViewHelper.prototype.getDeployMessageFileNameBaseName = function (str) {\n\t  return str.split('/').pop();\n\t};\n\t\n\tViewHelper.prototype.isFalse = function (input) {\n\t  return input === false || input === 'false' || input === 0;\n\t};\n\t\n\tViewHelper.prototype.isTrue = function (input) {\n\t  return input === true || input === 'true' || input === 1;\n\t};\n\t\n\tmodule.exports = ViewHelper;\n\n/***/ },\n/* 38 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * @file Creates a new apex script and places in the project's apex-scripts directory\n\t * @author Joseph Ferraro <@joeferraro>\n\t */\n\t\n\t'use strict';\n\t\n\tvar Promise = __webpack_require__(1);\n\tvar BaseCommand = __webpack_require__(5);\n\tvar inherits = __webpack_require__(2);\n\tvar ApexScriptService = __webpack_require__(91);\n\t\n\tfunction Command() {\n\t  Command.super_.call(this, Array.prototype.slice.call(arguments, 0));\n\t}\n\t\n\tinherits(Command, BaseCommand);\n\t\n\tCommand.prototype.execute = function () {\n\t  var self = this;\n\t  return new Promise(function (resolve, reject) {\n\t    var apexScriptService = new ApexScriptService(self.getProject());\n\t    apexScriptService.create(self.payload.name).then(function (result) {\n\t      resolve(result);\n\t    }).catch(function (error) {\n\t      reject(error);\n\t    }).done();\n\t  });\n\t};\n\t\n\texports.command = Command;\n\texports.addSubCommand = function (program) {\n\t  program.command('new-apex-script [scriptName]').description('Creates a new apex script').action(function (scriptName) {\n\t    if (scriptName) {\n\t      program.commandExecutor.execute({\n\t        name: this._name,\n\t        body: { name: scriptName }\n\t      });\n\t    } else {\n\t      console.error('Please specify a script name');\n\t      process.exit(1);\n\t    }\n\t  });\n\t};\n\n/***/ },\n/* 39 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * @file Executes an apex script anonymously\n\t * @author Joseph Ferraro <@joeferraro>\n\t */\n\t\n\t'use strict';\n\t\n\tvar Promise = __webpack_require__(1);\n\tvar BaseCommand = __webpack_require__(5);\n\tvar inherits = __webpack_require__(2);\n\tvar ApexScriptService = __webpack_require__(91);\n\tvar util = __webpack_require__(3);\n\t\n\tfunction Command() {\n\t  Command.super_.call(this, Array.prototype.slice.call(arguments, 0));\n\t}\n\t\n\tinherits(Command, BaseCommand);\n\t\n\tCommand.prototype.execute = function () {\n\t  var self = this;\n\t  return new Promise(function (resolve, reject) {\n\t    var apexScriptService = new ApexScriptService(self.getProject());\n\t    apexScriptService.execute(self.payload.paths).then(function (result) {\n\t      resolve(result);\n\t    }).catch(function (error) {\n\t      reject(error);\n\t    }).done();\n\t  });\n\t};\n\t\n\texports.command = Command;\n\texports.addSubCommand = function (program) {\n\t  program.command('run-apex-script [scriptPath]').alias('execute-apex-script').description('Executes an apex script').action(function (scriptPath) {\n\t    if (scriptPath) {\n\t      program.commandExecutor.execute({\n\t        name: this._name,\n\t        body: { paths: util.getAbsolutePaths([scriptPath]) }\n\t      });\n\t    } else {\n\t      console.error('Please specify a valid script path');\n\t      process.exit(1);\n\t    }\n\t  });\n\t};\n\n/***/ },\n/* 40 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * @file Deletes a checkpoint\n\t * @author Joseph Ferraro <@joeferraro>\n\t */\n\t\n\t'use strict';\n\t\n\tvar Promise = __webpack_require__(1);\n\tvar inherits = __webpack_require__(2);\n\tvar BaseCommand = __webpack_require__(5);\n\tvar CheckpointService = __webpack_require__(32);\n\t\n\tfunction Command() {\n\t  Command.super_.call(this, Array.prototype.slice.call(arguments, 0));\n\t}\n\t\n\tinherits(Command, BaseCommand);\n\t\n\tCommand.prototype.execute = function () {\n\t  var self = this;\n\t  return new Promise(function (resolve, reject) {\n\t    var project = self.getProject();\n\t    var checkpointService = new CheckpointService(project);\n\t    checkpointService.deleteCheckpoint(self.payload.path, self.payload.lineNumber).then(function (res) {\n\t      resolve(res);\n\t    }).catch(function (error) {\n\t      reject(error);\n\t    }).done();\n\t  });\n\t};\n\t\n\texports.command = Command;\n\texports.addSubCommand = function (program) {\n\t  program.command('delete-checkpoint [filePath] [lineNumber]').description('Creates Apex checkpoint').action(function (filePath, lineNumber) {\n\t    program.commandExecutor.execute({\n\t      name: this._name,\n\t      body: {\n\t        path: filePath,\n\t        lineNumber: lineNumber\n\t      }\n\t    });\n\t  });\n\t};\n\n/***/ },\n/* 41 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * @file Downloads a debug log by id\n\t * @author Joseph Ferraro <@joeferraro>\n\t */\n\t\n\t'use strict';\n\t\n\tvar Promise = __webpack_require__(1);\n\tvar inherits = __webpack_require__(2);\n\tvar BaseCommand = __webpack_require__(5);\n\tvar LogService = __webpack_require__(93);\n\t\n\tfunction Command() {\n\t  Command.super_.call(this, Array.prototype.slice.call(arguments, 0));\n\t}\n\t\n\tinherits(Command, BaseCommand);\n\t\n\tCommand.prototype.execute = function () {\n\t  var self = this;\n\t  return new Promise(function (resolve, reject) {\n\t    var project = self.getProject();\n\t    var logService = new LogService(project);\n\t    logService.downloadLog(self.payload.logId).then(function (result) {\n\t      resolve(result);\n\t    }).catch(function (error) {\n\t      reject(error);\n\t    }).done();\n\t  });\n\t};\n\t\n\texports.command = Command;\n\texports.addSubCommand = function (program) {\n\t  program.command('download-log [logId]').description('Downloads a log to your project\\'s debug/logs directory').action(function (logId) {\n\t    program.commandExecutor.execute({\n\t      name: this._name,\n\t      body: { logId: logId }\n\t    });\n\t  });\n\t};\n\n/***/ },\n/* 42 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\r\n\t * @file Executes anonymous Apex\r\n\t * @author Joseph Ferraro <@joeferraro>\r\n\t */\n\t\n\t'use strict';\n\t\n\tvar Promise = __webpack_require__(1);\n\tvar util = __webpack_require__(3);\n\tvar BaseCommand = __webpack_require__(5);\n\tvar inherits = __webpack_require__(2);\n\tvar EditorService = __webpack_require__(9);\n\t\n\tfunction Command() {\n\t  Command.super_.call(this, Array.prototype.slice.call(arguments, 0));\n\t}\n\t\n\tinherits(Command, BaseCommand);\n\t\n\tCommand.prototype.execute = function () {\n\t  var self = this;\n\t  return new Promise(function (resolve, reject) {\n\t    if (self.isUICommand()) {\n\t      self.editorService.launchUI('apex/new', { pid: self.getProject().settings.id });\n\t      resolve('Success');\n\t    } else {\n\t      self.getProject().sfdcClient.executeApex(self.payload).then(function (result) {\n\t        resolve(result);\n\t      }).catch(function (error) {\n\t        reject(error);\n\t      }).done();\n\t    }\n\t  });\n\t};\n\t\n\texports.command = Command;\n\texports.addSubCommand = function (program) {\n\t  program.command('execute-apex').option('--ui', 'Launches the Apex execute anonymous UI.').description('Execute Apex code anonymously').action(function () /* Args here */{\n\t    if (this.ui) {\n\t      program.commandExecutor.execute({\n\t        name: this._name,\n\t        body: { args: { ui: true } },\n\t        editor: this.parent.editor\n\t      });\n\t    } else {\n\t      var self = this;\n\t      util.getPayload().then(function (payload) {\n\t        program.commandExecutor.execute({\n\t          name: self._name,\n\t          body: payload,\n\t          editor: self.parent.editor\n\t        });\n\t      });\n\t    }\n\t  });\n\t};\n\n/***/ },\n/* 43 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * @file Flushes all local logs from a project\n\t * @author Joseph Ferraro <@joeferraro>\n\t */\n\t\n\t'use strict';\n\t\n\tvar Promise = __webpack_require__(1);\n\tvar inherits = __webpack_require__(2);\n\tvar BaseCommand = __webpack_require__(5);\n\tvar path = __webpack_require__(6);\n\tvar fs = __webpack_require__(26);\n\t\n\tfunction Command() {\n\t  Command.super_.call(this, Array.prototype.slice.call(arguments, 0));\n\t}\n\t\n\tinherits(Command, BaseCommand);\n\t\n\tCommand.prototype.execute = function () {\n\t  var self = this;\n\t  return new Promise(function (resolve, reject) {\n\t    var project = self.getProject();\n\t    var debugDirectory = path.join(project.path, 'debug');\n\t    if (fs.existsSync(debugDirectory)) {\n\t      fs.removeAsync(debugDirectory).then(function () {\n\t        resolve('Successfully flushed debug logs');\n\t      }).catch(function (error) {\n\t        reject(error);\n\t      });\n\t    } else {\n\t      resolve('No debug directory detected');\n\t    }\n\t  });\n\t};\n\t\n\texports.command = Command;\n\texports.addSubCommand = function (program) {\n\t  program.command('flush-logs').alias('delete-logs').description('Deletes all log files in a project').action(function () /* Args here */{\n\t    program.commandExecutor.execute({\n\t      name: this._name\n\t    });\n\t  });\n\t};\n\n/***/ },\n/* 44 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * @file Lists checkpoints for a given file\n\t * @author Joseph Ferraro <@joeferraro>\n\t */\n\t\n\t'use strict';\n\t\n\tvar Promise = __webpack_require__(1);\n\tvar inherits = __webpack_require__(2);\n\tvar BaseCommand = __webpack_require__(5);\n\tvar CheckpointService = __webpack_require__(32);\n\t\n\tfunction Command() {\n\t  Command.super_.call(this, Array.prototype.slice.call(arguments, 0));\n\t}\n\t\n\tinherits(Command, BaseCommand);\n\t\n\tCommand.prototype.execute = function () {\n\t  var self = this;\n\t  return new Promise(function (resolve, reject) {\n\t    var project = self.getProject();\n\t    var checkpointService = new CheckpointService(project);\n\t    checkpointService.listCheckpoints(self.payload.path).then(function (res) {\n\t      resolve(res);\n\t    }).catch(function (error) {\n\t      reject(error);\n\t    }).done();\n\t  });\n\t};\n\t\n\texports.command = Command;\n\texports.addSubCommand = function (program) {\n\t  program.command('new-checkpoint [filePath]').description('List Apex checkpoints for filepath').action(function (filePath) {\n\t    program.commandExecutor.execute({\n\t      name: this._name,\n\t      body: {\n\t        path: filePath\n\t      }\n\t    });\n\t  });\n\t};\n\n/***/ },\n/* 45 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * @file Create a new checkpoint on a file given a line number\n\t * @author Joseph Ferraro <@joeferraro>\n\t */\n\t\n\t'use strict';\n\t\n\tvar Promise = __webpack_require__(1);\n\tvar inherits = __webpack_require__(2);\n\tvar BaseCommand = __webpack_require__(5);\n\tvar CheckpointService = __webpack_require__(32);\n\t\n\tfunction Command() {\n\t  Command.super_.call(this, Array.prototype.slice.call(arguments, 0));\n\t}\n\t\n\tinherits(Command, BaseCommand);\n\t\n\tCommand.prototype.execute = function () {\n\t  var self = this;\n\t  return new Promise(function (resolve, reject) {\n\t    var project = self.getProject();\n\t    var checkpointService = new CheckpointService(project);\n\t    checkpointService.createCheckpoint(self.payload.path, self.payload.lineNumber).then(function (res) {\n\t      resolve(res);\n\t    }).catch(function (error) {\n\t      reject(error);\n\t    }).done();\n\t  });\n\t};\n\t\n\texports.command = Command;\n\texports.addSubCommand = function (program) {\n\t  program.command('new-checkpoint [filePath] [lineNumber]').description('Creates Apex checkpoint').action(function (filePath, lineNumber) {\n\t    program.commandExecutor.execute({\n\t      name: this._name,\n\t      body: {\n\t        path: filePath,\n\t        lineNumber: lineNumber\n\t      }\n\t    });\n\t  });\n\t};\n\n/***/ },\n/* 46 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * @file Deletes existing trace flags and creates new trace flags for all user ids listed in a project's config/.debug file\n\t * @author Joseph Ferraro <@joeferraro>\n\t */\n\t\n\t'use strict';\n\t\n\tvar Promise = __webpack_require__(1);\n\tvar inherits = __webpack_require__(2);\n\tvar BaseCommand = __webpack_require__(5);\n\tvar moment = __webpack_require__(21);\n\t\n\tfunction Command() {\n\t  Command.super_.call(this, Array.prototype.slice.call(arguments, 0));\n\t}\n\t\n\tinherits(Command, BaseCommand);\n\t\n\tCommand.prototype.execute = function () {\n\t  var self = this;\n\t  return new Promise(function (resolve, reject) {\n\t    var project = self.getProject();\n\t    var sfdcClient = project.sfdcClient;\n\t    var projectDebugSettings = project.getDebugSettingsSync();\n\t    var expirationDate = moment().add(projectDebugSettings.expiration, 'minutes');\n\t    sfdcClient.startLogging(projectDebugSettings, expirationDate).then(function () {\n\t      resolve('Started logging for debug users');\n\t    }).catch(function (error) {\n\t      reject(error);\n\t    }).done();\n\t  });\n\t};\n\t\n\texports.command = Command;\n\texports.addSubCommand = function (program) {\n\t  program.command('start-logging').description('Starts logging Apex execution for all user ids listed in your project\\'s config/.debug file').action(function () /* Args here */{\n\t    program.commandExecutor.execute({\n\t      name: this._name\n\t    });\n\t  });\n\t};\n\n/***/ },\n/* 47 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * @file Deletes trace flags for all user ids in the config/.debug file created by the running user\n\t * @author Joseph Ferraro <@joeferraro>\n\t */\n\t\n\t'use strict';\n\t\n\tvar Promise = __webpack_require__(1);\n\tvar inherits = __webpack_require__(2);\n\tvar BaseCommand = __webpack_require__(5);\n\tvar moment = __webpack_require__(21);\n\t\n\tfunction Command() {\n\t  Command.super_.call(this, Array.prototype.slice.call(arguments, 0));\n\t}\n\t\n\tinherits(Command, BaseCommand);\n\t\n\tCommand.prototype.execute = function () {\n\t  var self = this;\n\t  return new Promise(function (resolve, reject) {\n\t    var project = self.getProject();\n\t    var sfdcClient = project.sfdcClient;\n\t    var projectDebugSettings = project.getDebugSettingsSync();\n\t    sfdcClient.stopLogging(projectDebugSettings.users).then(function () {\n\t      resolve('Stopped logging for debug users');\n\t    }).catch(function (error) {\n\t      reject(error);\n\t    }).done();\n\t  });\n\t};\n\t\n\texports.command = Command;\n\texports.addSubCommand = function (program) {\n\t  program.command('stop-logging').description('Stops logging Apex execution for all user ids listed in your project\\'s config/.debug file').action(function () /* Args here */{\n\t    program.commandExecutor.execute({\n\t      name: this._name\n\t    });\n\t  });\n\t};\n\n/***/ },\n/* 48 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * @file Deletes an org connection locally\n\t * @author Joseph Ferraro <@joeferraro>\n\t */\n\t\n\t'use strict';\n\t\n\tvar Promise = __webpack_require__(1);\n\tvar util = __webpack_require__(3);\n\tvar OrgConnectionService = __webpack_require__(24);\n\tvar inherits = __webpack_require__(2);\n\tvar BaseCommand = __webpack_require__(5);\n\t\n\tfunction Command() {\n\t  Command.super_.call(this, Array.prototype.slice.call(arguments, 0));\n\t}\n\t\n\tinherits(Command, BaseCommand);\n\t\n\tCommand.prototype.execute = function () {\n\t  var self = this;\n\t  return new Promise(function (resolve, reject) {\n\t    var project = self.getProject();\n\t    var orgConnectionService = new OrgConnectionService(project);\n\t    orgConnectionService.remove(self.payload.id).then(function () {\n\t      resolve('Successfully deleted org connection');\n\t    }).catch(function (error) {\n\t      reject(error);\n\t    }).done();\n\t  });\n\t};\n\t\n\texports.command = Command;\n\texports.addSubCommand = function (program) {\n\t  program.command('delete-connection [connectionId]').description('Removes a new deployment connection').action(function (connectionId) {\n\t    program.commandExecutor.execute({\n\t      name: this._name,\n\t      body: { id: connectionId }\n\t    });\n\t  });\n\t};\n\n/***/ },\n/* 49 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * @file Deploys to one or more remote targets\n\t * @author Joseph Ferraro <@joeferraro>\n\t */\n\t\n\t'use strict';\n\t\n\tvar Promise = __webpack_require__(1);\n\tvar util = __webpack_require__(3);\n\tvar Deploy = __webpack_require__(18);\n\tvar inherits = __webpack_require__(2);\n\tvar BaseCommand = __webpack_require__(5);\n\tvar logger = __webpack_require__(4);\n\tvar EditorService = __webpack_require__(9);\n\t\n\tfunction Command() {\n\t  Command.super_.call(this, Array.prototype.slice.call(arguments, 0));\n\t}\n\t\n\tinherits(Command, BaseCommand);\n\t\n\tCommand.prototype.execute = function () {\n\t  var self = this;\n\t  return new Promise(function (resolve, reject) {\n\t    if (self.isUICommand()) {\n\t\n\t      self.editorService.launchUI('deploy/new', { pid: self.getProject().settings.id }).then(function () {\n\t        resolve('Success');\n\t      }).catch(function (error) {\n\t        reject(error);\n\t      });\n\t    } else {\n\t      var deployPayload = self.payload;\n\t      deployPayload.project = self.getProject();\n\t      logger.debug('initiating deploy: ', deployPayload.targets, deployPayload.package);\n\t      var deploy = new Deploy(deployPayload);\n\t\n\t      var deployOptions = deployPayload.deployOptions || undefined;\n\t\n\t      logger.debug('deploying: ');\n\t      logger.debug('deployOptions: ', deployOptions);\n\t\n\t      deploy.executeRemote(deployOptions).then(function (result) {\n\t        if (self.payload.ui) {\n\t          resolve(deploy.getResultHtml(deployPayload.targets, deployPayload.deployOptions, result));\n\t        } else {\n\t          resolve(result);\n\t        }\n\t      }).catch(function (error) {\n\t        reject(error);\n\t      }).done();\n\t    }\n\t  });\n\t};\n\t\n\texports.command = Command;\n\texports.addSubCommand = function (program) {\n\t  program.command('deploy').option('--ui', 'Launches the default UI for the selected command.').description('Deploys metadata to one or more remote Salesforce.com orgs').action(function () /* Args here */{\n\t    if (this.ui) {\n\t      program.commandExecutor.execute({\n\t        name: this._name,\n\t        body: { args: { ui: true } },\n\t        editor: this.parent.editor\n\t      });\n\t    } else {\n\t      var self = this;\n\t      util.getPayload().then(function (payload) {\n\t        program.commandExecutor.execute({\n\t          name: self._name,\n\t          body: payload,\n\t          editor: self.parent.editor\n\t        });\n\t      });\n\t    }\n\t  });\n\t};\n\n/***/ },\n/* 50 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * @file Lists org connections for a project\n\t * @author Joseph Ferraro <@joeferraro>\n\t */\n\t\n\t'use strict';\n\t\n\tvar Promise = __webpack_require__(1);\n\tvar util = __webpack_require__(3);\n\tvar OrgConnectionService = __webpack_require__(24);\n\tvar inherits = __webpack_require__(2);\n\tvar BaseCommand = __webpack_require__(5);\n\t\n\tfunction Command() {\n\t  Command.super_.call(this, Array.prototype.slice.call(arguments, 0));\n\t}\n\t\n\tinherits(Command, BaseCommand);\n\t\n\tCommand.prototype.execute = function () {\n\t  var self = this;\n\t  return new Promise(function (resolve, reject) {\n\t    var project = self.getProject();\n\t    var orgConnectionService = new OrgConnectionService(project);\n\t    orgConnectionService.listAll().then(function (result) {\n\t      resolve(result);\n\t    }).catch(function (error) {\n\t      reject(error);\n\t    }).done();\n\t  });\n\t};\n\t\n\texports.command = Command;\n\texports.addSubCommand = function (program) {\n\t  program.command('get-connections').alias('list-connections').description('Retrieves a list of deployment connections').action(function () /* Args here */{\n\t    program.commandExecutor.execute({\n\t      name: this._name\n\t    });\n\t  });\n\t};\n\n/***/ },\n/* 51 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * @file Creates a new org connection for the project\n\t * @author Joseph Ferraro <@joeferraro>\n\t */\n\t\n\t'use strict';\n\t\n\tvar Promise = __webpack_require__(1);\n\tvar util = __webpack_require__(3);\n\tvar OrgConnectionService = __webpack_require__(24);\n\tvar inherits = __webpack_require__(2);\n\tvar BaseCommand = __webpack_require__(5);\n\t\n\tfunction Command() {\n\t  Command.super_.call(this, Array.prototype.slice.call(arguments, 0));\n\t}\n\t\n\tinherits(Command, BaseCommand);\n\t\n\tCommand.prototype.execute = function () {\n\t  var self = this;\n\t  return new Promise(function (resolve, reject) {\n\t    var project = self.getProject();\n\t    var orgConnectionService = new OrgConnectionService(project);\n\t    orgConnectionService.add(self.payload).then(function () {\n\t      resolve('Org connection successfully created');\n\t    }).catch(function (error) {\n\t      reject(error);\n\t    }).done();\n\t  });\n\t};\n\t\n\texports.command = Command;\n\texports.addSubCommand = function (program) {\n\t  program.command('new-connection [username] [password] [orgType]').description('Adds a new deployment connection').action(function (username, password, orgType) {\n\t    program.commandExecutor.execute({\n\t      name: this._name,\n\t      body: {\n\t        username: username,\n\t        password: password,\n\t        orgType: orgType\n\t      }\n\t    });\n\t  });\n\t};\n\n/***/ },\n/* 52 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * @file Updates the creds for an existing org connection\n\t * @author Joseph Ferraro <@joeferraro>\n\t */\n\t\n\t'use strict';\n\t\n\tvar Promise = __webpack_require__(1);\n\tvar util = __webpack_require__(3);\n\tvar OrgConnectionService = __webpack_require__(24);\n\tvar inherits = __webpack_require__(2);\n\tvar BaseCommand = __webpack_require__(5);\n\t\n\tfunction Command() {\n\t  Command.super_.call(this, Array.prototype.slice.call(arguments, 0));\n\t}\n\t\n\tinherits(Command, BaseCommand);\n\t\n\tCommand.prototype.execute = function () {\n\t  var self = this;\n\t  return new Promise(function (resolve, reject) {\n\t    var project = self.getProject();\n\t    var orgConnectionService = new OrgConnectionService(project);\n\t    orgConnectionService.update(self.payload).then(function (result) {\n\t      resolve(result);\n\t    }).catch(function (error) {\n\t      reject(error);\n\t    }).done();\n\t  });\n\t};\n\t\n\texports.command = Command;\n\texports.addSubCommand = function (program) {\n\t  program.command('update-connection [connectiondId] [username] [password] [orgType]').description('Updates a new deployment connection').action(function (connectiondId, username, password, orgType) {\n\t    program.commandExecutor.execute({\n\t      name: this._name,\n\t      body: {\n\t        id: connectiondId,\n\t        username: username,\n\t        password: password,\n\t        orgType: orgType\n\t      }\n\t    });\n\t  });\n\t};\n\n/***/ },\n/* 53 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * @file Creates a new lightning app/opens the new lightning app ui\n\t * @author Joseph Ferraro <@joeferraro>\n\t */\n\t\n\t'use strict';\n\t\n\tvar Promise = __webpack_require__(1);\n\tvar _ = __webpack_require__(7);\n\tvar util = __webpack_require__(3);\n\tvar inherits = __webpack_require__(2);\n\tvar BaseCommand = __webpack_require__(5);\n\tvar EditorService = __webpack_require__(9);\n\tvar LightningService = __webpack_require__(16);\n\tvar RefreshDelegate = __webpack_require__(23);\n\tvar path = __webpack_require__(6);\n\tvar MavensMateFile = __webpack_require__(11).MavensMateFile;\n\t\n\tfunction Command() {\n\t  Command.super_.call(this, Array.prototype.slice.call(arguments, 0));\n\t}\n\t\n\tinherits(Command, BaseCommand);\n\t\n\tCommand.prototype.execute = function () {\n\t  var self = this;\n\t  return new Promise(function (resolve, reject) {\n\t    if (self.isUICommand()) {\n\t\n\t      self.editorService.launchUI('lightning/app/new', { pid: self.getProject().settings.id }).then(function () {\n\t        resolve('Success');\n\t      }).catch(function (error) {\n\t        reject(error);\n\t      });\n\t    } else {\n\t      var project = self.getProject();\n\t      var lightningService = new LightningService(project);\n\t      var apiName = self.payload.apiName;\n\t      var newAuraFile;\n\t      var newBundleId;\n\t      return lightningService.createBundle(apiName, self.payload.description).then(function (result) {\n\t        newBundleId = result.id;\n\t        var createPromises = [];\n\t        createPromises.push(lightningService.createApplication(newBundleId));\n\t        if (self.payload.createController) {\n\t          createPromises.push(lightningService.createController(newBundleId));\n\t        }\n\t        if (self.payload.createHelper) {\n\t          createPromises.push(lightningService.createHelper(newBundleId));\n\t        }\n\t        if (self.payload.createStyle) {\n\t          createPromises.push(lightningService.createStyle(newBundleId));\n\t        }\n\t        if (self.payload.createDocumentation) {\n\t          createPromises.push(lightningService.createDocumentation(newBundleId));\n\t        }\n\t        if (self.payload.createRenderer) {\n\t          createPromises.push(lightningService.createRenderer(newBundleId));\n\t        }\n\t        return Promise.all(createPromises);\n\t      }).then(function (result) {\n\t        var failures = _.where(result, { 'success': false });\n\t        if (failures.length > 0) {\n\t          lightningService.deleteBundle(newBundleId).then(function () {\n\t            throw new Error(JSON.stringify(failures));\n\t          });\n\t        } else {\n\t          newAuraFile = new MavensMateFile({ project: project, path: path.join(project.path, 'src', 'aura', apiName) });\n\t          newAuraFile.writeToDiskSync();\n\t          project.packageXml.subscribe(newAuraFile);\n\t          return project.packageXml.writeFileSync();\n\t        }\n\t      }).then(function () {\n\t        var refreshDelegate = new RefreshDelegate(project, [newAuraFile.path]);\n\t        return refreshDelegate.execute();\n\t      }).then(function () {\n\t        return project.indexLightning();\n\t      }).then(function () {\n\t        resolve('Lightning app created successfully');\n\t      }).catch(function (error) {\n\t        reject(error);\n\t      }).done();\n\t    }\n\t  });\n\t};\n\t\n\texports.command = Command;\n\texports.addSubCommand = function (program) {\n\t  program.command('new-lightning-app').option('--ui', 'Launches the default UI for the selected command.').description('Creates new lightning application').action(function () {\n\t    if (this.ui) {\n\t      program.commandExecutor.execute({\n\t        name: this._name,\n\t        body: { args: { ui: true } },\n\t        editor: this.parent.editor\n\t      });\n\t    } else {\n\t      var self = this;\n\t      util.getPayload().then(function (payload) {\n\t        program.commandExecutor.execute({\n\t          name: self._name,\n\t          body: payload,\n\t          editor: self.parent.editor\n\t        });\n\t      });\n\t    }\n\t  });\n\t};\n\n/***/ },\n/* 54 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * @file Creates a new lightning component/opens the new lightning component ui\n\t * @author Joseph Ferraro <@joeferraro>\n\t */\n\t\n\t'use strict';\n\t\n\tvar Promise = __webpack_require__(1);\n\tvar _ = __webpack_require__(7);\n\tvar util = __webpack_require__(3);\n\tvar inherits = __webpack_require__(2);\n\tvar BaseCommand = __webpack_require__(5);\n\tvar EditorService = __webpack_require__(9);\n\tvar LightningService = __webpack_require__(16);\n\tvar RefreshDelegate = __webpack_require__(23);\n\tvar path = __webpack_require__(6);\n\tvar MavensMateFile = __webpack_require__(11).MavensMateFile;\n\t\n\tfunction Command() {\n\t  Command.super_.call(this, Array.prototype.slice.call(arguments, 0));\n\t}\n\t\n\tinherits(Command, BaseCommand);\n\t\n\tCommand.prototype.execute = function () {\n\t  var self = this;\n\t  return new Promise(function (resolve, reject) {\n\t    if (self.isUICommand()) {\n\t      self.editorService.launchUI('lightning/component/new', { pid: self.getProject().settings.id }).then(function () {\n\t        resolve('Success');\n\t      }).catch(function (error) {\n\t        reject(error);\n\t      });\n\t    } else {\n\t      var project = self.getProject();\n\t      var lightningService = new LightningService(project);\n\t      var apiName = self.payload.apiName;\n\t      var newAuraFile;\n\t      var newBundleId;\n\t      return lightningService.createBundle(apiName, self.payload.description).then(function (result) {\n\t        newBundleId = result.id;\n\t        var createPromises = [];\n\t        createPromises.push(lightningService.createComponent(newBundleId));\n\t        if (self.payload.createController) {\n\t          createPromises.push(lightningService.createController(newBundleId));\n\t        }\n\t        if (self.payload.createHelper) {\n\t          createPromises.push(lightningService.createHelper(newBundleId));\n\t        }\n\t        if (self.payload.createStyle) {\n\t          createPromises.push(lightningService.createStyle(newBundleId));\n\t        }\n\t        if (self.payload.createDocumentation) {\n\t          createPromises.push(lightningService.createDocumentation(newBundleId));\n\t        }\n\t        if (self.payload.createRenderer) {\n\t          createPromises.push(lightningService.createRenderer(newBundleId));\n\t        }\n\t        return Promise.all(createPromises);\n\t      }).then(function (result) {\n\t        var failures = _.where(result, { 'success': false });\n\t        if (failures.length > 0) {\n\t          lightningService.deleteBundle(newBundleId).then(function () {\n\t            throw new Error(JSON.stringify(failures));\n\t          });\n\t        } else {\n\t          newAuraFile = new MavensMateFile({ project: project, path: path.join(project.path, 'src', 'aura', apiName) });\n\t          newAuraFile.writeToDiskSync();\n\t          project.packageXml.subscribe(newAuraFile);\n\t          return project.packageXml.writeFileSync();\n\t        }\n\t      }).then(function () {\n\t        var refreshDelegate = new RefreshDelegate(project, [newAuraFile.path]);\n\t        return refreshDelegate.execute();\n\t      }).then(function () {\n\t        return project.indexLightning();\n\t      }).then(function () {\n\t        resolve('Lightning component created successfully');\n\t      }).catch(function (error) {\n\t        reject(error);\n\t      }).done();\n\t    }\n\t  });\n\t};\n\t\n\texports.command = Command;\n\texports.addSubCommand = function (program) {\n\t  program.command('new-lightning-component').option('--ui', 'Launches the default UI for the selected command.').description('Creates new lightning component').action(function () {\n\t    if (this.ui) {\n\t      program.commandExecutor.execute({\n\t        name: this._name,\n\t        body: { args: { ui: true } },\n\t        editor: this.parent.editor\n\t      });\n\t    } else {\n\t      var self = this;\n\t      util.getPayload().then(function (payload) {\n\t        program.commandExecutor.execute({\n\t          name: self._name,\n\t          body: payload,\n\t          editor: self.parent.editor\n\t        });\n\t      });\n\t    }\n\t  });\n\t};\n\n/***/ },\n/* 55 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * @file Creates a new lightning event/opens the new lightning event ui\n\t * @author Joseph Ferraro <@joeferraro>\n\t */\n\t\n\t'use strict';\n\t\n\tvar Promise = __webpack_require__(1);\n\tvar _ = __webpack_require__(7);\n\tvar util = __webpack_require__(3);\n\tvar inherits = __webpack_require__(2);\n\tvar BaseCommand = __webpack_require__(5);\n\tvar EditorService = __webpack_require__(9);\n\tvar LightningService = __webpack_require__(16);\n\tvar MavensMateFile = __webpack_require__(11).MavensMateFile;\n\tvar path = __webpack_require__(6);\n\tvar RefreshDelegate = __webpack_require__(23);\n\t\n\tfunction Command() {\n\t  Command.super_.call(this, Array.prototype.slice.call(arguments, 0));\n\t}\n\t\n\tinherits(Command, BaseCommand);\n\t\n\tCommand.prototype.execute = function () {\n\t  var self = this;\n\t  return new Promise(function (resolve, reject) {\n\t    if (self.isUICommand()) {\n\t\n\t      self.editorService.launchUI('lightning/event/new', { pid: self.getProject().settings.id }).then(function () {\n\t        resolve('Success');\n\t      }).catch(function (error) {\n\t        reject(error);\n\t      });\n\t    } else {\n\t      var project = self.getProject();\n\t      var lightningService = new LightningService(project);\n\t      var apiName = self.payload.apiName;\n\t      var newAuraFile;\n\t      var newBundleId;\n\t      return lightningService.createBundle(apiName, self.payload.description).then(function (result) {\n\t        newBundleId = result.id;\n\t        var createPromises = [];\n\t        createPromises.push(lightningService.createEvent(newBundleId));\n\t        return Promise.all(createPromises);\n\t      }).then(function (result) {\n\t        var failures = _.where(result, { 'success': false });\n\t        if (failures.length > 0) {\n\t          lightningService.deleteBundle(newBundleId).then(function () {\n\t            throw new Error(JSON.stringify(failures));\n\t          });\n\t        } else {\n\t          newAuraFile = new MavensMateFile({ project: project, path: path.join(project.path, 'src', 'aura', apiName) });\n\t          newAuraFile.writeToDiskSync();\n\t          project.packageXml.subscribe(newAuraFile);\n\t          return project.packageXml.writeFileSync();\n\t        }\n\t      }).then(function () {\n\t        var refreshDelegate = new RefreshDelegate(project, [newAuraFile.path]);\n\t        return refreshDelegate.execute();\n\t      }).then(function () {\n\t        return project.indexLightning();\n\t      }).then(function () {\n\t        resolve('Lightning event created successfully');\n\t      }).catch(function (error) {\n\t        reject(error);\n\t      }).done();\n\t    }\n\t  });\n\t};\n\t\n\texports.command = Command;\n\texports.addSubCommand = function (program) {\n\t  program.command('new-lightning-event').option('--ui', 'Launches the default UI for the selected command.').description('Creates new lightning event').action(function () {\n\t    if (this.ui) {\n\t      program.commandExecutor.execute({\n\t        name: this._name,\n\t        body: { args: { ui: true } },\n\t        editor: this.parent.editor\n\t      });\n\t    } else {\n\t      var self = this;\n\t      util.getPayload().then(function (payload) {\n\t        program.commandExecutor.execute({\n\t          name: self._name,\n\t          body: payload,\n\t          editor: self.parent.editor\n\t        });\n\t      });\n\t    }\n\t  });\n\t};\n\n/***/ },\n/* 56 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * @file Creates a new lightning interface/opens the new lightning interface ui\n\t * @author Joseph Ferraro <@joeferraro>\n\t */\n\t\n\t'use strict';\n\t\n\tvar Promise = __webpack_require__(1);\n\tvar _ = __webpack_require__(7);\n\tvar util = __webpack_require__(3);\n\tvar inherits = __webpack_require__(2);\n\tvar BaseCommand = __webpack_require__(5);\n\tvar EditorService = __webpack_require__(9);\n\tvar LightningService = __webpack_require__(16);\n\tvar MavensMateFile = __webpack_require__(11).MavensMateFile;\n\tvar path = __webpack_require__(6);\n\tvar RefreshDelegate = __webpack_require__(23);\n\t\n\tfunction Command() {\n\t  Command.super_.call(this, Array.prototype.slice.call(arguments, 0));\n\t}\n\t\n\tinherits(Command, BaseCommand);\n\t\n\tCommand.prototype.execute = function () {\n\t  var self = this;\n\t  return new Promise(function (resolve, reject) {\n\t    if (self.isUICommand()) {\n\t\n\t      self.editorService.launchUI('lightning/interface/new', { pid: self.getProject().settings.id }).then(function () {\n\t        resolve('Success');\n\t      }).catch(function (error) {\n\t        reject(error);\n\t      });\n\t    } else {\n\t      var project = self.getProject();\n\t      var lightningService = new LightningService(project);\n\t      var apiName = self.payload.apiName;\n\t      var newAuraFile;\n\t      var newBundleId;\n\t      return lightningService.createBundle(apiName, self.payload.description).then(function (result) {\n\t        newBundleId = result.id;\n\t        var createPromises = [];\n\t        createPromises.push(lightningService.createInterface(newBundleId));\n\t        return Promise.all(createPromises);\n\t      }).then(function (result) {\n\t        var failures = _.where(result, { 'success': false });\n\t        if (failures.length > 0) {\n\t          lightningService.deleteBundle(newBundleId).then(function () {\n\t            throw new Error(JSON.stringify(failures));\n\t          });\n\t        } else {\n\t          newAuraFile = new MavensMateFile({ project: project, path: path.join(project.path, 'src', 'aura', apiName) });\n\t          newAuraFile.writeToDiskSync();\n\t          project.packageXml.subscribe(newAuraFile);\n\t          return project.packageXml.writeFileSync();\n\t        }\n\t      }).then(function () {\n\t        var refreshDelegate = new RefreshDelegate(project, [newAuraFile.path]);\n\t        return refreshDelegate.execute();\n\t      }).then(function () {\n\t        return project.indexLightning();\n\t      }).then(function () {\n\t        resolve('Lightning interface created successfully');\n\t      }).catch(function (error) {\n\t        reject(error);\n\t      }).done();\n\t    }\n\t  });\n\t};\n\t\n\texports.command = Command;\n\texports.addSubCommand = function (program) {\n\t  program.command('new-lightning-interface').option('--ui', 'Launches the default UI for the selected command.').description('Creates new lightning interface').action(function () {\n\t    if (this.ui) {\n\t      program.commandExecutor.execute({\n\t        name: this._name,\n\t        body: { args: { ui: true } },\n\t        editor: this.parent.editor\n\t      });\n\t    } else {\n\t      var self = this;\n\t      util.getPayload().then(function (payload) {\n\t        program.commandExecutor.execute({\n\t          name: self._name,\n\t          body: payload,\n\t          editor: self.parent.editor\n\t        });\n\t      });\n\t    }\n\t  });\n\t};\n\n/***/ },\n/* 57 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\r\n\t * @file Compiles metadata\r\n\t * @author Joseph Ferraro <@joeferraro>\r\n\t */\n\t\n\t'use strict';\n\t\n\tvar Promise = __webpack_require__(1);\n\tvar util = __webpack_require__(3);\n\tvar inherits = __webpack_require__(2);\n\tvar BaseCommand = __webpack_require__(5);\n\tvar CompileDelegate = __webpack_require__(107);\n\t\n\tfunction Command() {\n\t  Command.super_.call(this, Array.prototype.slice.call(arguments, 0));\n\t}\n\t\n\tinherits(Command, BaseCommand);\n\t\n\tCommand.prototype.execute = function () {\n\t  var self = this;\n\t  return new Promise(function (resolve, reject) {\n\t    var project = self.getProject();\n\t    var compileDelegate = new CompileDelegate(project, self.payload.paths, self.payload.force);\n\t    compileDelegate.execute().then(function (result) {\n\t      resolve(result);\n\t    }).catch(function (error) {\n\t      reject(error);\n\t    }).done();\n\t  });\n\t};\n\t\n\texports.command = Command;\n\texports.addSubCommand = function (program) {\n\t  program.command('compile-metadata [path]').alias('compile').description('Compiles metadata').action(function (path) {\n\t    if (path) {\n\t      program.commandExecutor.execute({\n\t        name: this._name,\n\t        body: {\n\t          paths: util.getAbsolutePaths([path])\n\t        }\n\t      });\n\t    } else {\n\t      var self = this;\n\t      util.getPayload().then(function (payload) {\n\t        program.commandExecutor.execute({\n\t          name: self._name,\n\t          body: payload,\n\t          editor: self.parent.editor\n\t        });\n\t      });\n\t    }\n\t  });\n\t};\n\n/***/ },\n/* 58 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\r\n\t * @file Deletes metadata\r\n\t * @author Joseph Ferraro <@joeferraro>\r\n\t */\n\t\n\t'use strict';\n\t\n\tvar Promise = __webpack_require__(1);\n\tvar util = __webpack_require__(3);\n\tvar inherits = __webpack_require__(2);\n\tvar BaseCommand = __webpack_require__(5);\n\tvar DeleteDelegate = __webpack_require__(108);\n\tvar mavensMateFile = __webpack_require__(11);\n\t\n\tfunction Command() {\n\t  Command.super_.call(this, Array.prototype.slice.call(arguments, 0));\n\t}\n\t\n\tinherits(Command, BaseCommand);\n\t\n\tCommand.prototype.execute = function () {\n\t  var self = this;\n\t  return new Promise(function (resolve, reject) {\n\t    var project = self.getProject();\n\t    var payload = self.payload;\n\t    payload.project = project;\n\t    var deleteDelegate = new DeleteDelegate(project, payload.paths);\n\t    var deleteResult;\n\t    deleteDelegate.execute().then(function (result) {\n\t      deleteResult = result;\n\t      if (result.success) {\n\t        var files = mavensMateFile.createFileInstances(payload.paths);\n\t        project.packageXml.unsubscribe(files);\n\t        return project.packageXml.writeFile();\n\t      } else {\n\t        return new Promise(function (res) {\n\t          res();\n\t        });\n\t      }\n\t    }).then(function () {\n\t      resolve(deleteResult);\n\t    }).catch(function (error) {\n\t      reject(error);\n\t    }).done();\n\t  });\n\t};\n\t\n\texports.command = Command;\n\texports.addSubCommand = function (program) {\n\t  program.command('delete-metadata [path]').alias('delete').description('Deletes metadata from the salesforce.com server').action(function (path) {\n\t    if (path) {\n\t      program.commandExecutor.execute({\n\t        name: this._name,\n\t        body: {\n\t          paths: util.getAbsolutePaths([path])\n\t        }\n\t      });\n\t    } else {\n\t      var self = this;\n\t      util.getPayload().then(function (payload) {\n\t        program.commandExecutor.execute({\n\t          name: self._name,\n\t          body: payload,\n\t          editor: self.parent.editor\n\t        });\n\t      });\n\t    }\n\t  });\n\t};\n\n/***/ },\n/* 59 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\r\n\t * @file Creates new metadata\r\n\t * @author Joseph Ferraro <@joeferraro>\r\n\t */\n\t\n\t'use strict';\n\t\n\tvar Promise = __webpack_require__(1);\n\tvar util = __webpack_require__(3);\n\tvar mavensMateFile = __webpack_require__(11);\n\tvar Deploy = __webpack_require__(18);\n\tvar inherits = __webpack_require__(2);\n\tvar BaseCommand = __webpack_require__(5);\n\tvar EditorService = __webpack_require__(9);\n\tvar path = __webpack_require__(6);\n\tvar Package = __webpack_require__(20).Package;\n\tvar temp = __webpack_require__(19);\n\tvar fs = __webpack_require__(10);\n\tvar logger = __webpack_require__(4);\n\t\n\tfunction Command() {\n\t  Command.super_.call(this, Array.prototype.slice.call(arguments, 0));\n\t}\n\t\n\tinherits(Command, BaseCommand);\n\t\n\tCommand.prototype.execute = function () {\n\t  var self = this;\n\t  return new Promise(function (resolve, reject) {\n\t    if (self.isUICommand()) {\n\t      self.editorService.launchUI('metadata/' + self.payload.args.type + '/new', { pid: self.getProject().settings.id, type: self.payload.args.type }).then(function () {\n\t        resolve('Success');\n\t      }).catch(function (err) {\n\t        reject({\n\t          message: 'Could not open new metadata UI',\n\t          error: err\n\t        });\n\t      });\n\t    } else {\n\t      var retrievePackage;\n\t      var project = self.getProject();\n\t      var newFile = new mavensMateFile.MavensMateFile({ project: project });\n\t      newFile.setTypeByXmlName(self.payload.metadataTypeXmlName);\n\t      newFile.template = self.payload.template;\n\t      newFile.templateValues = self.payload.templateValues;\n\t      newFile.apexTriggerObjectName = self.payload.templateValues.object_name || self.payload.templateValues.objectName;\n\t      newFile.name = self.payload.templateValues.api_name || self.payload.templateValues.apiName;\n\t      if (!newFile.name) {\n\t        return reject(new Error('You must provide an API name'));\n\t      }\n\t      newFile.setAbstractPath();\n\t      var tempRetrievePath = temp.mkdirSync({ prefix: 'mm_' });\n\t      var unpackagedRetrievePath = path.join(tempRetrievePath, 'unpackaged');\n\t      fs.mkdirsSync(unpackagedRetrievePath);\n\t      project.sfdcClient.createApexMetadata(newFile).then(function (createResult) {\n\t        retrievePackage = new Package({ subscription: mavensMateFile.createPackageSubscription([newFile]) });\n\t        return retrievePackage.init();\n\t      }).then(function () {\n\t        return project.sfdcClient.retrieveUnpackaged(retrievePackage.subscription, true, tempRetrievePath);\n\t      }).then(function (retrieveResult) {\n\t        return project.updateLocalStore(retrieveResult.fileProperties);\n\t      }).then(function () {\n\t        return project.replaceLocalFiles(unpackagedRetrievePath);\n\t      }).then(function () {\n\t        project.packageXml.subscribe(newFile);\n\t        return project.packageXml.writeFile();\n\t      }).then(function () {\n\t        logger.debug('attempting to open metadata ...');\n\t        var newMetadataPath = path.join(project.path, 'src', newFile.type.directoryName, [newFile.name, newFile.type.suffix].join('.'));\n\t        logger.debug(newMetadataPath);\n\t        logger.debug(self.editorService.editor);\n\t        if (self.editorService && self.editorService.editor) {\n\t          return self.editorService.open(newMetadataPath);\n\t        } else {\n\t          return resolve('New metadata successfully created');\n\t        }\n\t      }).then(function () {\n\t        resolve('New metadata successfully created');\n\t      }).catch(function (error) {\n\t        reject(error);\n\t      }).done();\n\t    }\n\t  });\n\t};\n\t\n\texports.command = Command;\n\texports.addSubCommand = function (program) {\n\t  program.command('new-metadata').option('--ui', 'Launches the default UI for the selected command.').option('-t, --type [type]', 'Type of metadata to create (ApexClass, ApexPage, ApexTrigger, ApexComponent, etc.').description('Creates new metadata based on supplied template and params').action(function () {\n\t    if (this.ui) {\n\t      program.commandExecutor.execute({\n\t        name: this._name,\n\t        body: { args: { ui: true, type: this.type } }\n\t      });\n\t    } else {\n\t      var self = this;\n\t      util.getPayload().then(function (payload) {\n\t        program.commandExecutor.execute({\n\t          name: self._name,\n\t          body: payload,\n\t          editor: self.parent.editor\n\t        });\n\t      });\n\t    }\n\t  });\n\t};\n\n/***/ },\n/* 60 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\r\n\t * @file Opens existing metadata in the Salesforce UI\r\n\t * @author Joseph Ferraro <@joeferraro>\r\n\t */\n\t\n\t'use strict';\n\t\n\tvar Promise = __webpack_require__(1);\n\tvar util = __webpack_require__(3);\n\tvar inherits = __webpack_require__(2);\n\tvar BaseCommand = __webpack_require__(5);\n\tvar _ = __webpack_require__(7);\n\tvar EditorService = __webpack_require__(9);\n\tvar MavensMateFile = __webpack_require__(11).MavensMateFile;\n\tvar mavensMateFileTypes = __webpack_require__(11).types;\n\tvar logger = __webpack_require__(4);\n\t\n\tfunction Command() {\n\t  Command.super_.call(this, Array.prototype.slice.call(arguments, 0));\n\t}\n\t\n\tinherits(Command, BaseCommand);\n\t\n\tCommand.prototype.execute = function () {\n\t  var self = this;\n\t  return new Promise(function (resolve, reject) {\n\t    var paths = self.payload.paths;\n\t    var project = self.getProject();\n\t\n\t    var frontdoorUrl = project.sfdcClient.getInstanceUrl() + '/secur/frontdoor.jsp?sid=' + project.sfdcClient.getAccessToken() + '&retURL=';\n\t    var openUrlPromises = [];\n\t    var urls = {};\n\t    _.each(paths, function (p) {\n\t      var mmFile = new MavensMateFile({ project: project, path: p });\n\t      var retUrl = '';\n\t      if (mmFile.type.xmlName === 'ApexPage' && self.payload.preview) {\n\t        retUrl = '/apex/' + mmFile.name;\n\t      } else if (mmFile.isLightningType && self.payload.preview) {\n\t        var bundleName;\n\t        if (mmFile.classification === mavensMateFileTypes.LIGHTNING_BUNDLE_ITEM) {\n\t          bundleName = mmFile.folderBaseName;\n\t        } else {\n\t          bundleName = mmFile.name;\n\t        }\n\t        // retUrl = project.sfdcClient.getInstanceUrl() + '/' + project.sfdcClient.getNamespace() + '/' + bundleName + '.app'; // TODO: non app lightning will not work\n\t        retUrl = '/' + project.sfdcClient.getNamespace() + '/' + bundleName + '.app'; // TODO: non app lightning will not work\n\t      } else {\n\t        if (mmFile.type.xmlName === 'CustomObject') {\n\t          retUrl = '/p/setup/layout/LayoutFieldList?type=' + mmFile.name + '%23CustomFieldRelatedList_target';\n\t        } else {\n\t          retUrl = '/' + mmFile.id;\n\t        }\n\t      }\n\t      logger.debug('url generated : ' + frontdoorUrl + retUrl);\n\t      if (self.payload.callThrough) {\n\t        openUrlPromises.push(self.editorService.openUrl(frontdoorUrl + retUrl));\n\t      } else {\n\t        urls[mmFile.basename] = frontdoorUrl + retUrl;\n\t      }\n\t    });\n\t\n\t    if (self.payload.callThrough) {\n\t      Promise.all(openUrlPromises).then(function () {\n\t        resolve('Success');\n\t      }).catch(function (error) {\n\t        reject(error);\n\t      });\n\t    } else {\n\t      resolve(urls);\n\t    }\n\t  });\n\t};\n\t\n\texports.command = Command;\n\texports.addSubCommand = function (program) {\n\t  program.command('open-metadata [path]').description('Opens metadata in the browser').action(function (path) {\n\t    if (path) {\n\t      program.commandExecutor.execute({\n\t        name: this._name,\n\t        body: {\n\t          paths: util.getAbsolutePaths([path])\n\t        }\n\t      });\n\t    } else {\n\t      var self = this;\n\t      util.getPayload().then(function (payload) {\n\t        program.commandExecutor.execute({\n\t          name: self._name,\n\t          body: payload,\n\t          editor: self.parent.editor\n\t        });\n\t      });\n\t    }\n\t  });\n\t};\n\n/***/ },\n/* 61 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\r\n\t * @file Refreshes metadata from the server\r\n\t * @author Joseph Ferraro <@joeferraro>\r\n\t */\n\t\n\t'use strict';\n\t\n\tvar Promise = __webpack_require__(1);\n\tvar path = __webpack_require__(6);\n\tvar util = __webpack_require__(3);\n\tvar inherits = __webpack_require__(2);\n\tvar BaseCommand = __webpack_require__(5);\n\tvar RefreshDelegate = __webpack_require__(23);\n\tvar EditorService = __webpack_require__(9);\n\tvar logger = __webpack_require__(4);\n\t\n\tfunction Command() {\n\t  Command.super_.call(this, Array.prototype.slice.call(arguments, 0));\n\t}\n\t\n\tinherits(Command, BaseCommand);\n\t\n\tCommand.prototype.execute = function () {\n\t  var self = this;\n\t  return new Promise(function (resolve, reject) {\n\t    var project = self.getProject();\n\t    var paths = self.payload.paths;\n\t    var refreshPromise;\n\t    if (paths.length === 1 && (paths[0] === project.path || paths[0] === path.join(project.path, 'src'))) {\n\t      logger.debug('refreshing project from server ...');\n\t      refreshPromise = project.refreshFromServer();\n\t    } else {\n\t      logger.debug('refreshing paths from server ...');\n\t      var refreshDelegate = new RefreshDelegate(project, paths);\n\t      refreshPromise = refreshDelegate.execute();\n\t    }\n\t    refreshPromise.then(function (result) {\n\t      logger.debug('refresh command result: ');\n\t      logger.debug(result);\n\t      if (self.editorService && self.editorService.editor === 'sublime') {\n\t        self.editorService.runCommand('refresh_folder_list').then(function () {\n\t          resolve();\n\t        }).catch(function (err) {\n\t          logger.error(err);\n\t          resolve();\n\t        });\n\t      } else {\n\t        return Promise.resolve();\n\t      }\n\t    }).then(function () {\n\t      resolve('Metadata successfully refreshed');\n\t    }).catch(function (error) {\n\t      reject(error);\n\t    }).done();\n\t  });\n\t};\n\t\n\texports.command = Command;\n\texports.addSubCommand = function (program) {\n\t  program.command('refresh-metadata [path]').alias('refresh').description('Refreshes metadata from the salesforce.com server').action(function (path) {\n\t    if (path) {\n\t      program.commandExecutor.execute({\n\t        name: this._name,\n\t        body: {\n\t          paths: util.getAbsolutePaths([path])\n\t        }\n\t      });\n\t    } else {\n\t      var self = this;\n\t      util.getPayload().then(function (payload) {\n\t        program.commandExecutor.execute({\n\t          name: self._name,\n\t          body: payload,\n\t          editor: self.parent.editor\n\t        });\n\t      });\n\t    }\n\t  });\n\t};\n\n/***/ },\n/* 62 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * @file Syncs a local piece of Apex/VF/Lightning metadata with the server\n\t * @author Joseph Ferraro <@joeferraro>\n\t */\n\t\n\t'use strict';\n\t\n\tvar Promise = __webpack_require__(1);\n\tvar util = __webpack_require__(3);\n\tvar inherits = __webpack_require__(2);\n\tvar BaseCommand = __webpack_require__(5);\n\tvar SyncDelegate = __webpack_require__(110);\n\t\n\tfunction Command() {\n\t  Command.super_.call(this, Array.prototype.slice.call(arguments, 0));\n\t}\n\t\n\tinherits(Command, BaseCommand);\n\t\n\tCommand.prototype.execute = function () {\n\t  var self = this;\n\t  return new Promise(function (resolve, reject) {\n\t    var project = self.getProject();\n\t    var syncDelegate = new SyncDelegate(project, self.payload.path);\n\t    syncDelegate.execute().then(function (result) {\n\t      resolve(result);\n\t    }).catch(function (error) {\n\t      reject(error);\n\t    }).done();\n\t  });\n\t};\n\t\n\texports.command = Command;\n\texports.addSubCommand = function (program) {\n\t  program.command('sync-with-server [path]').description('Syncs the local path with the server').action(function (path) {\n\t    if (path) {\n\t      program.commandExecutor.execute({\n\t        name: this._name,\n\t        body: {\n\t          path: util.getAbsolutePaths([path])[0]\n\t        }\n\t      });\n\t    } else {\n\t      var self = this;\n\t      util.getPayload().then(function (payload) {\n\t        program.commandExecutor.execute({\n\t          name: self._name,\n\t          body: payload,\n\t          editor: self.parent.editor\n\t        });\n\t      });\n\t    }\n\t  });\n\t};\n\n/***/ },\n/* 63 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * @file Queries salesforce on behalf of the running user\n\t * @author Joseph Ferraro <@joeferraro>\n\t */\n\t\n\t'use strict';\n\t\n\tvar Promise = __webpack_require__(1);\n\tvar inherits = __webpack_require__(2);\n\tvar BaseCommand = __webpack_require__(5);\n\t\n\tfunction Command() {\n\t  Command.super_.call(this, Array.prototype.slice.call(arguments, 0));\n\t}\n\t\n\tinherits(Command, BaseCommand);\n\t\n\tCommand.prototype.execute = function () {\n\t  var self = this;\n\t  return new Promise(function (resolve, reject) {\n\t    var project = self.getProject();\n\t    project.sfdcClient.executeSoql(self.payload.soql).then(function (res) {\n\t      resolve(res);\n\t    }).catch(function (error) {\n\t      reject(error);\n\t    }).done();\n\t  });\n\t};\n\t\n\texports.command = Command;\n\texports.addSubCommand = function (program) {\n\t  program.command('execute-soql [soql]').description('Executes soql query').action(function (soql) {\n\t    program.commandExecutor.execute({\n\t      name: this._name,\n\t      body: {\n\t        soql: soql\n\t      }\n\t    });\n\t  });\n\t};\n\n/***/ },\n/* 64 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * @file Returns setting value for provided key\n\t * @author Joseph Ferraro <@joeferraro>\n\t */\n\t\n\t'use strict';\n\t\n\tvar Promise = __webpack_require__(1);\n\tvar inherits = __webpack_require__(2);\n\tvar BaseCommand = __webpack_require__(5);\n\tvar config = __webpack_require__(8);\n\t\n\tfunction Command() {\n\t  Command.super_.call(this, Array.prototype.slice.call(arguments, 0));\n\t}\n\t\n\tinherits(Command, BaseCommand);\n\t\n\tCommand.prototype.execute = function () {\n\t  var self = this;\n\t  return new Promise(function (resolve, reject) {\n\t    resolve({\n\t      value: config.get(self.payload.key)\n\t    });\n\t  });\n\t};\n\t\n\texports.command = Command;\n\texports.addSubCommand = function (program) {\n\t  program.command('get-setting [key]').description('Returns the setting value for the given key').action(function (key) {\n\t    program.commandExecutor.execute({\n\t      name: this._name,\n\t      body: {\n\t        key: key\n\t      }\n\t    });\n\t  });\n\t};\n\n/***/ },\n/* 65 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * @file Indexes the symbol tables for a given apex class\n\t * @author Joseph Ferraro <@joeferraro>\n\t */\n\t\n\t'use strict';\n\t\n\tvar path = __webpack_require__(6);\n\tvar Promise = __webpack_require__(1);\n\tvar util = __webpack_require__(3);\n\tvar inherits = __webpack_require__(2);\n\tvar BaseCommand = __webpack_require__(5);\n\t\n\tfunction Command() {\n\t  Command.super_.call(this, Array.prototype.slice.call(arguments, 0));\n\t}\n\t\n\tinherits(Command, BaseCommand);\n\t\n\tCommand.prototype.execute = function () {\n\t  var self = this;\n\t  return new Promise(function (resolve, reject) {\n\t    var project = self.getProject();\n\t    var apexClassName = path.basename(self.payload.className, '.cls');\n\t    project.indexSymbols(apexClassName).then(function () {\n\t      resolve('Symbols successfully indexed for ' + self.payload.className);\n\t    }).catch(function (error) {\n\t      reject(error);\n\t    }).done();\n\t  });\n\t};\n\t\n\texports.command = Command;\n\texports.addSubCommand = function (program) {\n\t  program.command('index-apex-class [className]').description('Indexes Apex class\\'s symbols').action(function (className) {\n\t    program.commandExecutor.execute({\n\t      name: this._name,\n\t      body: {\n\t        className: className\n\t      }\n\t    });\n\t  });\n\t};\n\n/***/ },\n/* 66 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\r\n\t * @file Indexes all apex symbols for a given project\r\n\t * @author Joseph Ferraro <@joeferraro>\r\n\t */\n\t\n\t'use strict';\n\t\n\tvar Promise = __webpack_require__(1);\n\tvar inherits = __webpack_require__(2);\n\tvar BaseCommand = __webpack_require__(5);\n\t\n\tfunction Command() {\n\t  Command.super_.call(this, Array.prototype.slice.call(arguments, 0));\n\t}\n\t\n\tinherits(Command, BaseCommand);\n\t\n\tCommand.prototype.execute = function () {\n\t  var self = this;\n\t  return new Promise(function (resolve, reject) {\n\t    var project = self.getProject();\n\t    project.indexSymbols().then(function () {\n\t      resolve('Symbols successfully indexed');\n\t    }).catch(function (error) {\n\t      reject(error);\n\t    }).done();\n\t  });\n\t};\n\t\n\texports.command = Command;\n\texports.addSubCommand = function (program) {\n\t  program.command('index-apex').alias('index-symbols').description('Indexes project\\'s Apex symbols').action(function () /* Args here */{\n\t    program.commandExecutor.execute({\n\t      name: this._name\n\t    });\n\t  });\n\t};\n\n/***/ },\n/* 67 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * @file Returns an active salesforce session\n\t * @author Joseph Ferraro <@joeferraro>\n\t */\n\t\n\t'use strict';\n\t\n\tvar Promise = __webpack_require__(1);\n\tvar util = __webpack_require__(3);\n\tvar inherits = __webpack_require__(2);\n\tvar BaseCommand = __webpack_require__(5);\n\tvar SalesforceClient = __webpack_require__(17);\n\tvar IndexService = __webpack_require__(33);\n\tvar _ = __webpack_require__(7);\n\tvar logger = __webpack_require__(4);\n\t\n\tfunction Command() {\n\t  Command.super_.call(this, Array.prototype.slice.call(arguments, 0));\n\t}\n\t\n\tinherits(Command, BaseCommand);\n\t\n\tCommand.prototype.execute = function () {\n\t  var self = this;\n\t  return new Promise(function (resolve, reject) {\n\t    logger.debug('payload', self.payload);\n\t    var sfdcClient = new SalesforceClient({\n\t      accessToken: self.payload.accessToken,\n\t      instanceUrl: self.payload.instanceUrl,\n\t      transient: true\n\t    });\n\t    sfdcClient.initialize().then(function () {\n\t      var indexService = new IndexService({ sfdcClient: sfdcClient });\n\t      return indexService.indexServerProperties(self.payload.metadataTypes);\n\t    }).then(function (index) {\n\t      resolve(index);\n\t    }).catch(function (error) {\n\t      reject(error);\n\t    }).done();\n\t  });\n\t};\n\t\n\texports.command = Command;\n\texports.addSubCommand = function (program) {\n\t  program.command('list-metadata [typeXmlName').description('Lists metadata for given type').action(function (typeXmlName) {\n\t    if (typeXmlName) {\n\t      program.commandExecutor.execute({\n\t        name: this._name,\n\t        body: {\n\t          metadataTypes: [typeXmlName]\n\t        }\n\t      });\n\t    } else {\n\t      var self = this;\n\t      util.getPayload().then(function (payload) {\n\t        program.commandExecutor.execute({\n\t          name: self._name,\n\t          body: payload,\n\t          editor: self.parent.editor\n\t        });\n\t      });\n\t    }\n\t  });\n\t};\n\n/***/ },\n/* 68 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * @file Opens the MavensMate UI in a browser\n\t * @author Joseph Ferraro <@joeferraro>\n\t */\n\t\n\t'use strict';\n\t\n\tvar Promise = __webpack_require__(1);\n\tvar util = __webpack_require__(3);\n\tvar BaseCommand = __webpack_require__(5);\n\tvar inherits = __webpack_require__(2);\n\tvar EditorService = __webpack_require__(9);\n\tvar logger = __webpack_require__(4);\n\t\n\tfunction Command() {\n\t  Command.super_.call(this, Array.prototype.slice.call(arguments, 0));\n\t}\n\t\n\tinherits(Command, BaseCommand);\n\t\n\tCommand.prototype.execute = function () {\n\t  var self = this;\n\t  return new Promise(function (resolve, reject) {\n\t\n\t    var urlParams = self.getProject() ? { pid: self.getProject().settings.id } : undefined;\n\t    self.editorService.launchUI('settings', urlParams).then(function () {\n\t      resolve('Success');\n\t    }).catch(function (error) {\n\t      reject(error);\n\t    });\n\t  });\n\t};\n\t\n\texports.command = Command;\n\texports.addSubCommand = function (program) {\n\t  program.command('open-settings').description('Launches the settings ui').action(function () {\n\t    program.commandExecutor.execute({\n\t      name: this._name\n\t    });\n\t  });\n\t};\n\n/***/ },\n/* 69 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * @file Opens existing metadata in the Salesforce UI\n\t * @author Joseph Ferraro <@joeferraro>\n\t */\n\t\n\t'use strict';\n\t\n\tvar Promise = __webpack_require__(1);\n\tvar inherits = __webpack_require__(2);\n\tvar BaseCommand = __webpack_require__(5);\n\tvar EditorService = __webpack_require__(9);\n\tvar logger = __webpack_require__(4);\n\t\n\tfunction Command() {\n\t  Command.super_.call(this, Array.prototype.slice.call(arguments, 0));\n\t}\n\t\n\tinherits(Command, BaseCommand);\n\t\n\tCommand.prototype.execute = function () {\n\t  var self = this;\n\t  return new Promise(function (resolve, reject) {\n\t    var project = self.getProject();\n\t    // http://docs.releasenotes.salesforce.com/en-us/winter14/release-notes/security_frontdoorjsp.htm\n\t    var setupUrl = project.sfdcClient.getInstanceUrl() + '/secur/frontdoor.jsp?sid=' + project.sfdcClient.getAccessToken() + '&retURL=/setup/forcecomHomepage.apexp?setupid=ForceCom';\n\t    logger.debug('attempting to open salesforce org. setupUrl is', setupUrl);\n\t    self.editorService.openUrl(setupUrl).then(function () {\n\t      resolve('Success');\n\t    }).catch(function (error) {\n\t      reject(error);\n\t    });\n\t  });\n\t};\n\t\n\texports.command = Command;\n\texports.addSubCommand = function (program) {\n\t  program.command('open-sfdc').description('Opens salesforce developer home page in the browser').action(function () {\n\t    program.commandExecutor.execute({\n\t      name: this._name\n\t    });\n\t  });\n\t};\n\n/***/ },\n/* 70 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * @file Opens the MavensMate UI in a browser\n\t * @author Joseph Ferraro <@joeferraro>\n\t */\n\t\n\t'use strict';\n\t\n\tvar Promise = __webpack_require__(1);\n\tvar util = __webpack_require__(3);\n\tvar BaseCommand = __webpack_require__(5);\n\tvar inherits = __webpack_require__(2);\n\tvar EditorService = __webpack_require__(9);\n\tvar logger = __webpack_require__(4);\n\t\n\tfunction Command() {\n\t  Command.super_.call(this, Array.prototype.slice.call(arguments, 0));\n\t}\n\t\n\tinherits(Command, BaseCommand);\n\t\n\tCommand.prototype.execute = function () {\n\t  var self = this;\n\t  return new Promise(function (resolve, reject) {\n\t\n\t    var urlParams = self.getProject() ? { pid: self.getProject().settings.id } : undefined;\n\t    self.editorService.launchUI('home', urlParams).then(function () {\n\t      resolve('Success');\n\t    }).catch(function (error) {\n\t      reject(error);\n\t    });\n\t  });\n\t};\n\t\n\texports.command = Command;\n\texports.addSubCommand = function (program) {\n\t  program.command('open-ui').description('Launches the default ui').action(function () {\n\t    program.commandExecutor.execute({\n\t      name: this._name\n\t    });\n\t  });\n\t};\n\n/***/ },\n/* 71 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\r\n\t * @file Returns an active salesforce session\r\n\t * @author Joseph Ferraro <@joeferraro>\r\n\t */\n\t\n\t'use strict';\n\t\n\tvar Promise = __webpack_require__(1);\n\tvar util = __webpack_require__(3);\n\tvar inherits = __webpack_require__(2);\n\tvar BaseCommand = __webpack_require__(5);\n\tvar SalesforceClient = __webpack_require__(17);\n\tvar IndexService = __webpack_require__(33);\n\tvar config = __webpack_require__(8);\n\tvar _ = __webpack_require__(7);\n\t\n\tfunction Command() {\n\t  Command.super_.call(this, Array.prototype.slice.call(arguments, 0));\n\t}\n\t\n\tinherits(Command, BaseCommand);\n\t\n\tCommand.prototype.execute = function () {\n\t  var self = this;\n\t  return new Promise(function (resolve, reject) {\n\t    var sfdcClient = new SalesforceClient(self.payload);\n\t    sfdcClient.initialize().then(function () {\n\t      var response = {\n\t        sid: sfdcClient.conn.accessToken,\n\t        urls: sfdcClient.conn.userInfo.urls,\n\t        instanceUrl: sfdcClient.conn.instanceUrl,\n\t        username: sfdcClient.conn.userInfo.username,\n\t        metadataTypes: _.sortBy(sfdcClient.describeCache.metadataObjects, 'xmlName')\n\t      };\n\t      if (process.title === 'mavensmate cli') {\n\t        config.set('mm_cli_salesforce_session_id', response.sid);\n\t        config.set('mm_cli_salesforce_instance_url', response.instanceUrl);\n\t        config.save(function (err) {\n\t          if (err) {\n\t            reject(err);\n\t          } else {\n\t            resolve(response);\n\t          }\n\t        });\n\t      } else {\n\t        resolve(response);\n\t      }\n\t    }).catch(function (error) {\n\t      reject(error);\n\t    }).done();\n\t  });\n\t};\n\t\n\texports.command = Command;\n\texports.addSubCommand = function (program) {\n\t  program.command('session [username] [password] [orgType]').alias('get-active-session').alias('login').option('--verbose', 'Returns server urls and describe information').description('Creates new salesforce.com session, returns session id').action(function (username, password, orgType) {\n\t    if (username && password) {\n\t      program.commandExecutor.execute({\n\t        name: this._name,\n\t        body: {\n\t          username: username,\n\t          password: password,\n\t          orgType: orgType || 'developer'\n\t        }\n\t      });\n\t    } else {\n\t      var self = this;\n\t      util.getPayload().then(function (payload) {\n\t        program.commandExecutor.execute({\n\t          name: self._name,\n\t          body: payload,\n\t          editor: self.parent.editor\n\t        });\n\t      });\n\t    }\n\t  });\n\t};\n\n/***/ },\n/* 72 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\r\n\t * @file Reverts a project to its server state based on package.xml\r\n\t * @author Joseph Ferraro <@joeferraro>\r\n\t */\n\t\n\t'use strict';\n\t\n\tvar Promise = __webpack_require__(1);\n\tvar inherits = __webpack_require__(2);\n\tvar EditorService = __webpack_require__(9);\n\tvar BaseCommand = __webpack_require__(5);\n\tvar logger = __webpack_require__(4);\n\t\n\tfunction Command() {\n\t  Command.super_.call(this, Array.prototype.slice.call(arguments, 0));\n\t}\n\t\n\tinherits(Command, BaseCommand);\n\t\n\tCommand.prototype.execute = function () {\n\t  var self = this;\n\t  return new Promise(function (resolve, reject) {\n\t    self.getProject().clean().then(function () {\n\t      if (self.editorService && self.editorService.editor === 'sublime') {\n\t        self.editorService.runCommand('refresh_folder_list').then(function () {\n\t          resolve();\n\t        }).catch(function (err) {\n\t          logger.error(err);\n\t          resolve();\n\t        });\n\t      } else {\n\t        return Promise.resolve();\n\t      }\n\t    }).then(function () {\n\t      resolve('Project cleaned successfully');\n\t    }).catch(function (error) {\n\t      reject(error);\n\t    }).done();\n\t  });\n\t};\n\t\n\texports.command = Command;\n\texports.addSubCommand = function (program) {\n\t  program.command('clean-project').alias('clean').description('Retrieves metadata from server based on project package.xml file, resets session').action(function () /* Args here */{\n\t    program.commandExecutor.execute({\n\t      name: this._name\n\t    });\n\t  });\n\t};\n\n/***/ },\n/* 73 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\r\n\t * @file Compiles project based on package.xml\r\n\t * @author Joseph Ferraro <@joeferraro>\r\n\t */\n\t\n\t'use strict';\n\t\n\tvar Promise = __webpack_require__(1);\n\tvar inherits = __webpack_require__(2);\n\tvar BaseCommand = __webpack_require__(5);\n\t\n\tfunction Command() {\n\t  Command.super_.call(this, Array.prototype.slice.call(arguments, 0));\n\t}\n\t\n\tinherits(Command, BaseCommand);\n\t\n\tCommand.prototype.execute = function () {\n\t  var self = this;\n\t  return new Promise(function (resolve, reject) {\n\t    var project = self.getProject();\n\t    project.compile().then(function (result) {\n\t      resolve(result);\n\t    }).catch(function (error) {\n\t      reject(error);\n\t    }).done();\n\t  });\n\t};\n\t\n\texports.command = Command;\n\texports.addSubCommand = function (program) {\n\t  program.command('compile-project').description('Compiles project based on package.xml').action(function () /* Args here */{\n\t    program.commandExecutor.execute({\n\t      name: this._name\n\t    });\n\t  });\n\t};\n\n/***/ },\n/* 74 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\r\n\t * @file Updates a project's local contents based on new package.xml subscription\r\n\t * @author Joseph Ferraro <@joeferraro>\r\n\t */\n\t\n\t'use strict';\n\t\n\tvar Promise = __webpack_require__(1);\n\tvar util = __webpack_require__(3);\n\tvar BaseCommand = __webpack_require__(5);\n\tvar inherits = __webpack_require__(2);\n\tvar EditorService = __webpack_require__(9);\n\tvar logger = __webpack_require__(4);\n\t\n\tfunction Command() {\n\t  Command.super_.call(this, Array.prototype.slice.call(arguments, 0));\n\t}\n\t\n\tinherits(Command, BaseCommand);\n\t\n\tCommand.prototype.execute = function () {\n\t  var self = this;\n\t  return new Promise(function (resolve, reject) {\n\t    if (self.isUICommand()) {\n\t      self.editorService.launchUI('project/' + self.getProject().settings.id + '/edit', { pid: self.getProject().settings.id }).then(function () {\n\t        resolve('Success');\n\t      }).catch(function (err) {\n\t        reject(error);\n\t      });\n\t    } else {\n\t      self.getProject().edit(self.payload.package).then(function () {\n\t        if (self.editorService && self.editorService.editor === 'sublime') {\n\t          self.editorService.runCommand('refresh_folder_list').then(function () {\n\t            resolve();\n\t          }).catch(function (err) {\n\t            logger.error(err);\n\t            resolve();\n\t          });\n\t        } else {\n\t          return Promise.resolve();\n\t        }\n\t      }).then(function () {\n\t        resolve('Project updated successfully!');\n\t      }).catch(function (error) {\n\t        reject(error);\n\t      }).done();\n\t    }\n\t  });\n\t};\n\t\n\texports.command = Command;\n\texports.addSubCommand = function (program) {\n\t  program.command('edit-project').alias('edit').option('--ui', 'Launches the default UI for the selected command.').description('Edits an existing project').action(function () {\n\t    if (this.ui) {\n\t      program.commandExecutor.execute({\n\t        name: this._name,\n\t        body: { args: { ui: true } },\n\t        editor: this.parent.editor\n\t      });\n\t    } else {\n\t      var self = this;\n\t      util.getPayload().then(function (payload) {\n\t        program.commandExecutor.execute({\n\t          name: self._name,\n\t          body: payload,\n\t          editor: self.parent.editor\n\t        });\n\t      });\n\t    }\n\t  });\n\t};\n\n/***/ },\n/* 75 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * @file Returns the medadata index for a project\n\t * @author Joseph Ferraro <@joeferraro>\n\t */\n\t\n\t'use strict';\n\t\n\tvar Promise = __webpack_require__(1);\n\tvar inherits = __webpack_require__(2);\n\tvar BaseCommand = __webpack_require__(5);\n\t\n\tfunction Command() {\n\t  Command.super_.call(this, Array.prototype.slice.call(arguments, 0));\n\t}\n\t\n\tinherits(Command, BaseCommand);\n\t\n\tCommand.prototype.execute = function () {\n\t  var self = this;\n\t  return new Promise(function (resolve, reject) {\n\t    self.getProject().getOrgMetadataIndexWithSelections(null, null, self.payload.packageXmlPath).then(function (metadataIndex) {\n\t      resolve(metadataIndex);\n\t    }).catch(function (error) {\n\t      reject(error);\n\t    }).done();\n\t  });\n\t};\n\t\n\texports.command = Command;\n\texports.addSubCommand = function (program) {\n\t  program.command('get-metadata-index-for-package').description('Gets metadata index for a given package location').action(function () {\n\t    var self = this;\n\t    util.getPayload().then(function (payload) {\n\t      program.commandExecutor.execute({\n\t        name: self._name,\n\t        body: payload,\n\t        editor: self.parent.editor\n\t      });\n\t    });\n\t  });\n\t};\n\n/***/ },\n/* 76 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\r\n\t * @file Returns the medadata index for a project\r\n\t * @author Joseph Ferraro <@joeferraro>\r\n\t */\n\t\n\t'use strict';\n\t\n\tvar Promise = __webpack_require__(1);\n\tvar inherits = __webpack_require__(2);\n\tvar BaseCommand = __webpack_require__(5);\n\t\n\tfunction Command() {\n\t  Command.super_.call(this, Array.prototype.slice.call(arguments, 0));\n\t}\n\t\n\tinherits(Command, BaseCommand);\n\t\n\tCommand.prototype.execute = function () {\n\t  var self = this;\n\t  return new Promise(function (resolve, reject) {\n\t    self.getProject().getOrgMetadataIndexWithSelections().then(function (metadataIndex) {\n\t      resolve(metadataIndex);\n\t    }).catch(function (error) {\n\t      reject(error);\n\t    }).done();\n\t  });\n\t};\n\t\n\texports.command = Command;\n\texports.addSubCommand = function (program) {\n\t  program.command('get-metadata-index').description('Returns indexed metadata').action(function () /* Args here */{\n\t    program.commandExecutor.execute({\n\t      name: this._name\n\t    });\n\t  });\n\t};\n\n/***/ },\n/* 77 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\r\n\t * @file Indexes server metadata locally\r\n\t * @author Joseph Ferraro <@joeferraro>\r\n\t */\n\t\n\t'use strict';\n\t\n\tvar Promise = __webpack_require__(1);\n\tvar inherits = __webpack_require__(2);\n\tvar BaseCommand = __webpack_require__(5);\n\t\n\tfunction Command() {\n\t  Command.super_.call(this, Array.prototype.slice.call(arguments, 0));\n\t}\n\t\n\tinherits(Command, BaseCommand);\n\t\n\tCommand.prototype.execute = function () {\n\t  var self = this;\n\t  return new Promise(function (resolve, reject) {\n\t    var project = self.getProject();\n\t    project.indexMetadata().then(function () {\n\t      resolve('Metadata successfully indexed');\n\t    }).catch(function (error) {\n\t      reject(error);\n\t    }).done();\n\t  });\n\t};\n\t\n\texports.command = Command;\n\texports.addSubCommand = function (program) {\n\t  program.command('index-metadata').description('Indexes project\\'s metadata').action(function () /* Args here */{\n\t    program.commandExecutor.execute({\n\t      name: this._name\n\t    });\n\t  });\n\t};\n\n/***/ },\n/* 78 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * @file Lists projects in all workspaces\n\t * @author Joseph Ferraro <@joeferraro>\n\t */\n\t\n\t'use strict';\n\t\n\tvar Promise = __webpack_require__(1);\n\tvar ViewHelper = __webpack_require__(37);\n\tvar BaseCommand = __webpack_require__(5);\n\tvar inherits = __webpack_require__(2);\n\tvar logger = __webpack_require__(4);\n\t\n\tfunction Command() {\n\t  Command.super_.call(this, Array.prototype.slice.call(arguments, 0));\n\t}\n\t\n\tinherits(Command, BaseCommand);\n\t\n\tCommand.prototype.execute = function () {\n\t  var self = this;\n\t  return new Promise(function (resolve, reject) {\n\t    try {\n\t      var v = new ViewHelper();\n\t      resolve(v.listProjects());\n\t    } catch (e) {\n\t      reject(e);\n\t    }\n\t  });\n\t};\n\t\n\texports.command = Command;\n\texports.addSubCommand = function (program) {\n\t  program.command('list-projects').description('List projects in all workspaces').action(function () {\n\t    program.commandExecutor.execute({\n\t      name: this._name\n\t    });\n\t  });\n\t};\n\n/***/ },\n/* 79 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * @file Create a new local project/opens new project UI\n\t * @author Joseph Ferraro <@joeferraro>\n\t */\n\t\n\t'use strict';\n\t\n\tvar Promise = __webpack_require__(1);\n\tvar util = __webpack_require__(3);\n\tvar Project = __webpack_require__(30);\n\tvar BaseCommand = __webpack_require__(5);\n\tvar SalesforceClient = __webpack_require__(17);\n\tvar inherits = __webpack_require__(2);\n\tvar logger = __webpack_require__(4);\n\tvar EditorService = __webpack_require__(9);\n\t\n\tfunction Command() {\n\t  Command.super_.call(this, Array.prototype.slice.call(arguments, 0));\n\t}\n\t\n\tinherits(Command, BaseCommand);\n\t\n\t// TODO: implement\n\tCommand.prototype.execute = function () {\n\t  var self = this;\n\t  return new Promise(function (resolve, reject) {\n\t    if (self.isUICommand()) {\n\t      self.editorService.launchUI('project/existing/new', { origin: self.payload.args.origin }).then(function () {\n\t        resolve('Success');\n\t      }).catch(function (error) {\n\t        reject(error);\n\t      });\n\t    } else {\n\t      var newProject;\n\t      var sfdcClient = new SalesforceClient(self.payload);\n\t      sfdcClient.initialize().then(function () {\n\t        newProject = new Project(self.payload);\n\t        newProject.sfdcClient = sfdcClient;\n\t        return newProject.initialize(true, true);\n\t      }).then(function () {\n\t        logger.debug('New project written to disk ...');\n\t        logger.debug('attempting to open in editor');\n\t        if (self.editorService && self.editorService.editor) {\n\t          return self.editorService.open(newProject.path);\n\t        } else {\n\t          return resolve({\n\t            message: 'Project created successfully',\n\t            id: newProject.id\n\t          });\n\t        }\n\t      }).then(function () {\n\t        return resolve({\n\t          message: 'Project created successfully',\n\t          id: newProject.id\n\t        });\n\t      }).catch(function (error) {\n\t        logger.debug('Could not create project: ');\n\t        logger.debug(error.stack);\n\t        reject(error);\n\t      }).done();\n\t    }\n\t  });\n\t};\n\t\n\texports.command = Command;\n\texports.addSubCommand = function (program) {\n\t  program.command('new-project-from-existing-directory').option('--ui', 'Launches the default UI for the selected command.').option('-d, --directory [directory]', 'Directory to create new mavensmate project from').description('Creates a new MavensMate project from an existing directory').action(function () {\n\t    // if user has included the ui flag, launch the ui\n\t    // else read STDIN\n\t    if (this.ui) {\n\t      program.commandExecutor.execute({\n\t        name: this._name,\n\t        body: { args: { ui: true, directory: this.directory } }\n\t      });\n\t    } else {\n\t      var self = this;\n\t      util.getPayload().then(function (payload) {\n\t        program.commandExecutor.execute({\n\t          name: self._name,\n\t          body: payload,\n\t          editor: self.parent.editor\n\t        });\n\t      });\n\t    }\n\t  });\n\t};\n\n/***/ },\n/* 80 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\r\n\t * @file Create a new local project/opens new project UI\r\n\t * @author Joseph Ferraro <@joeferraro>\r\n\t */\n\t\n\t'use strict';\n\t\n\tvar Promise = __webpack_require__(1);\n\tvar _ = __webpack_require__(7);\n\tvar util = __webpack_require__(3);\n\tvar merge = __webpack_require__(99);\n\tvar Project = __webpack_require__(30);\n\tvar BaseCommand = __webpack_require__(5);\n\tvar SalesforceClient = __webpack_require__(17);\n\tvar inherits = __webpack_require__(2);\n\tvar logger = __webpack_require__(4);\n\tvar EditorService = __webpack_require__(9);\n\tvar config = __webpack_require__(8);\n\t\n\tvar _getSobjectList = function (describeResult) {\n\t  var sobjects = [];\n\t  _.each(describeResult.sobjects, function (so) {\n\t    sobjects.push(so.name);\n\t  });\n\t  return sobjects;\n\t};\n\t\n\tfunction Command() {\n\t  Command.super_.call(this, Array.prototype.slice.call(arguments, 0));\n\t}\n\t\n\tinherits(Command, BaseCommand);\n\t\n\tCommand.prototype.execute = function () {\n\t  var self = this;\n\t  return new Promise(function (resolve, reject) {\n\t    if (self.isUICommand()) {\n\t      self.editorService.launchUI('project/new').then(function () {\n\t        resolve('Success');\n\t      }).catch(function (error) {\n\t        reject(error);\n\t      });\n\t    } else {\n\t      if (!self.payload.name) {\n\t        return reject(new Error('Please specify project name'));\n\t      }\n\t      var newProject;\n\t      var sfdcClient = new SalesforceClient(self.payload);\n\t      sfdcClient.initialize().then(function () {\n\t        newProject = new Project(self.payload);\n\t        newProject.sfdcClient = sfdcClient;\n\t        return newProject.initialize(true);\n\t      }).then(function () {\n\t        logger.debug('Initiated new project, prepping to write to disk');\n\t        return newProject.retrieveAndWriteToDisk();\n\t      }).then(function () {\n\t        if (self.editorService && self.editorService.editor) {\n\t          return self.editorService.open(newProject.path);\n\t        } else {\n\t          return resolve({\n\t            message: 'Project created successfully',\n\t            id: newProject.id\n\t          });\n\t        }\n\t      }).then(function () {\n\t        resolve({\n\t          message: 'Project created successfully',\n\t          id: newProject.id\n\t        });\n\t      }).catch(function (error) {\n\t        logger.debug('Could not create project: ');\n\t        logger.debug(error.stack);\n\t        reject(error);\n\t      }).done();\n\t    }\n\t  });\n\t};\n\t\n\texports.command = Command;\n\texports.addSubCommand = function (program) {\n\t  program.command('new-project').option('--ui', 'Launches the default UI for the selected command.').description('Creates a new Salesforce1 project').action(function () {\n\t    if (this.ui) {\n\t      logger.debug(program.commandExecutor);\n\t      program.commandExecutor.execute({\n\t        name: this._name,\n\t        body: { args: { ui: true } },\n\t        editor: this.parent.editor\n\t      });\n\t    } else {\n\t      var self = this;\n\t      util.getPayload().then(function (payload) {\n\t        program.commandExecutor.execute({\n\t          name: self._name,\n\t          body: payload,\n\t          editor: self.parent.editor\n\t        });\n\t      });\n\t    }\n\t  });\n\t};\n\n/***/ },\n/* 81 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * @file Opens the fix project UI\n\t * @author Joseph Ferraro <@joeferraro>\n\t */\n\t\n\t'use strict';\n\t\n\tvar Promise = __webpack_require__(1);\n\tvar util = __webpack_require__(3);\n\tvar BaseCommand = __webpack_require__(5);\n\tvar inherits = __webpack_require__(2);\n\tvar EditorService = __webpack_require__(9);\n\tvar logger = __webpack_require__(4);\n\t\n\tfunction Command() {\n\t  Command.super_.call(this, Array.prototype.slice.call(arguments, 0));\n\t}\n\t\n\tinherits(Command, BaseCommand);\n\t\n\tCommand.prototype.execute = function () {\n\t  var self = this;\n\t  return new Promise(function (resolve, reject) {\n\t    self.editorService.launchUI('project/' + self.getProject().settings.id + '/auth', { pid: self.getProject().settings.id }).then(function () {\n\t      resolve('Please authenticate with Salesforce');\n\t    }).catch(function (err) {\n\t      reject(error);\n\t    });\n\t  });\n\t};\n\t\n\texports.command = Command;\n\texports.addSubCommand = function (program) {\n\t  program.command('oauth-project').description('Displays oauth UI for project').action(function () {\n\t    program.commandExecutor.execute({\n\t      name: this._name,\n\t      body: { args: { ui: true } },\n\t      editor: this.parent.editor\n\t    });\n\t  });\n\t};\n\n/***/ },\n/* 82 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * @file Opens the project in the client editor\n\t * @author Joseph Ferraro <@joeferraro>\n\t */\n\t\n\t'use strict';\n\t\n\tvar Promise = __webpack_require__(1);\n\tvar path = __webpack_require__(6);\n\tvar fs = __webpack_require__(10);\n\tvar util = __webpack_require__(3);\n\tvar BaseCommand = __webpack_require__(5);\n\tvar inherits = __webpack_require__(2);\n\tvar EditorService = __webpack_require__(9);\n\tvar logger = __webpack_require__(4);\n\t\n\tfunction Command() {\n\t  Command.super_.call(this, Array.prototype.slice.call(arguments, 0));\n\t}\n\t\n\tinherits(Command, BaseCommand);\n\t\n\tCommand.prototype.execute = function () {\n\t  var self = this;\n\t  return new Promise(function (resolve, reject) {\n\t    var editor;\n\t    if (!self.editorService || !self.editorService.editor) {\n\t      return reject(new Error('Please specify an editor either via \"MavensMate-Editor-Agent\" HTTP header, editor POST body, or -e/--editor command line flag'));\n\t    }\n\t    var projectPath = self.getProject().path;\n\t    if (self.editorService.editor === 'sublime') {\n\t      var sublimeProjectPath = path.join(projectPath, self.getProject().name + '.sublime-project');\n\t      if (fs.existsSync(sublimeProjectPath)) {\n\t        projectPath = sublimeProjectPath;\n\t      }\n\t    }\n\t    self.editorService.open(projectPath).then(function () {\n\t      resolve('Opened project in ' + self.editorService.editor);\n\t    }).catch(function (err) {\n\t      reject(err);\n\t    });\n\t  });\n\t};\n\t\n\texports.command = Command;\n\texports.addSubCommand = function (program) {\n\t  program.command('open-project').alias('open').description('Open a project in the editor').action(function () {\n\t    program.commandExecutor.execute({\n\t      name: this._name\n\t    });\n\t  });\n\t};\n\n/***/ },\n/* 83 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * @file Returns the medadata index for a project\n\t * @author Joseph Ferraro <@joeferraro>\n\t */\n\t\n\t'use strict';\n\t\n\tvar Promise = __webpack_require__(1);\n\tvar inherits = __webpack_require__(2);\n\tvar BaseCommand = __webpack_require__(5);\n\t\n\tfunction Command() {\n\t  Command.super_.call(this, Array.prototype.slice.call(arguments, 0));\n\t}\n\t\n\tinherits(Command, BaseCommand);\n\t\n\tCommand.prototype.execute = function () {\n\t  var self = this;\n\t  return new Promise(function (resolve, reject) {\n\t    self.getProject().getOrgMetadataIndexWithSelections(self.payload.keyword, self.payload.ids).then(function (metadataIndex) {\n\t      resolve(metadataIndex);\n\t    }).catch(function (error) {\n\t      reject(error);\n\t    }).done();\n\t  });\n\t};\n\t\n\texports.command = Command;\n\texports.addSubCommand = function (program) {\n\t  program.command('search-metadata-index').description('Searches metadata index').action(function () {\n\t    var self = this;\n\t    util.getPayload().then(function (payload) {\n\t      program.commandExecutor.execute({\n\t        name: self._name,\n\t        body: payload,\n\t        editor: self.parent.editor\n\t      });\n\t    });\n\t  });\n\t};\n\n/***/ },\n/* 84 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\r\n\t * @file Updates the creds associated with a project\r\n\t * @author Joseph Ferraro <@joeferraro>\r\n\t */\n\t\n\t'use strict';\n\t\n\tvar Promise = __webpack_require__(1);\n\tvar inherits = __webpack_require__(2);\n\tvar BaseCommand = __webpack_require__(5);\n\t\n\tfunction Command() {\n\t  Command.super_.call(this, Array.prototype.slice.call(arguments, 0));\n\t}\n\t\n\tinherits(Command, BaseCommand);\n\t\n\tCommand.prototype.execute = function () {\n\t  var self = this;\n\t  return new Promise(function (resolve, reject) {\n\t    var project = self.getProject();\n\t    project.updateCredentials(self.payload).then(function () {\n\t      resolve('Credentials updated successfully!');\n\t    }).catch(function (error) {\n\t      reject(error);\n\t    }).done();\n\t  });\n\t};\n\t\n\texports.command = Command;\n\texports.addSubCommand = function (program) {\n\t  program.command('update-creds [username] [password] [orgType] [loginUrl]').description('Update project\\'s salesfore.com credentials').action(function (username, password, orgType, loginUrl) {\n\t    var payload = {\n\t      username: username,\n\t      password: password,\n\t      orgType: orgType,\n\t      loginUrl: loginUrl\n\t    };\n\t    program.commandExecutor.execute({\n\t      name: this._name,\n\t      body: payload\n\t    });\n\t  });\n\t};\n\n/***/ },\n/* 85 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\r\n\t * @file Updates the subscription associated with a project\r\n\t * @author Joseph Ferraro <@joeferraro>\r\n\t */\n\t\n\t'use strict';\n\t\n\tvar Promise = __webpack_require__(1);\n\tvar util = __webpack_require__(3);\n\tvar inherits = __webpack_require__(2);\n\tvar BaseCommand = __webpack_require__(5);\n\t\n\tfunction Command() {\n\t  Command.super_.call(this, Array.prototype.slice.call(arguments, 0));\n\t}\n\t\n\tinherits(Command, BaseCommand);\n\t\n\tCommand.prototype.execute = function () {\n\t  var self = this;\n\t  return new Promise(function (resolve, reject) {\n\t    try {\n\t      var project = self.getProject();\n\t      project.writeSettings({ subscription: self.payload.subscription });\n\t      resolve('Subscription updated successfully!');\n\t    } catch (err) {\n\t      reject(err);\n\t    }\n\t  });\n\t};\n\t\n\texports.command = Command;\n\texports.addSubCommand = function (program) {\n\t  program.command('update-subscription').description('Updates project metadata subscription').action(function () /* Args here */{\n\t    var self = this;\n\t    util.getPayload().then(function (payload) {\n\t      program.commandExecutor.execute({\n\t        name: self._name,\n\t        body: payload,\n\t        editor: self.parent.editor\n\t      });\n\t    });\n\t  });\n\t};\n\n/***/ },\n/* 86 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * @file Deploys a resource bundle to the server\n\t * @author Joseph Ferraro <@joeferraro>\n\t */\n\t\n\t'use strict';\n\t\n\tvar Promise = __webpack_require__(1);\n\tvar util = __webpack_require__(3);\n\tvar ResourceBundleService = __webpack_require__(94);\n\tvar inherits = __webpack_require__(2);\n\tvar BaseCommand = __webpack_require__(5);\n\t\n\tfunction Command() {\n\t  Command.super_.call(this, Array.prototype.slice.call(arguments, 0));\n\t}\n\t\n\tinherits(Command, BaseCommand);\n\t\n\tCommand.prototype.execute = function () {\n\t  var self = this;\n\t  return new Promise(function (resolve, reject) {\n\t    var project = self.getProject();\n\t    var bundleService = new ResourceBundleService(project);\n\t    bundleService.deploy(self.payload.paths).then(function () {\n\t      resolve('Resource bundle successfully deployed');\n\t    }).catch(function (error) {\n\t      reject(error);\n\t    }).done();\n\t  });\n\t};\n\t\n\texports.command = Command;\n\texports.addSubCommand = function (program) {\n\t  program.command('deploy-resource-bundle [bundlePath]').description('Deploys a resource bundle to the server, e.g. mavensmate deploy-resource-bundle path/to/resource/bundle ').action(function (bundlePath) {\n\t    if (bundlePath) {\n\t      program.commandExecutor.execute({\n\t        name: this._name,\n\t        body: {\n\t          paths: util.getAbsolutePaths([bundlePath])\n\t        }\n\t      });\n\t    } else {\n\t      console.error('Please specify a valid bundle path');\n\t      process.exit(1);\n\t    }\n\t  });\n\t};\n\n/***/ },\n/* 87 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * @file Creates a new resource bundle from a given static resource path\n\t * @author Joseph Ferraro <@joeferraro>\n\t */\n\t\n\t'use strict';\n\t\n\tvar Promise = __webpack_require__(1);\n\tvar util = __webpack_require__(3);\n\tvar ResourceBundleService = __webpack_require__(94);\n\tvar inherits = __webpack_require__(2);\n\tvar BaseCommand = __webpack_require__(5);\n\t\n\tfunction Command() {\n\t  Command.super_.call(this, Array.prototype.slice.call(arguments, 0));\n\t}\n\t\n\tinherits(Command, BaseCommand);\n\t\n\tCommand.prototype.execute = function () {\n\t  var self = this;\n\t  return new Promise(function (resolve, reject) {\n\t    var project = self.getProject();\n\t    var bundleService = new ResourceBundleService(project);\n\t    bundleService.create(self.payload.paths).then(function () {\n\t      resolve('Resource bundle(s) successfully created');\n\t    }).catch(function (error) {\n\t      reject(error);\n\t    }).done();\n\t  });\n\t};\n\t\n\texports.command = Command;\n\texports.addSubCommand = function (program) {\n\t  program.command('new-resource-bundle [staticResourcePath]').description('Creates a resource bundle from a static resource, e.g. mavensmate new-resource-bundle path/to/static/resource').action(function (staticResourcePath) {\n\t    program.commandExecutor.execute({\n\t      name: this._name,\n\t      body: {\n\t        paths: util.getAbsolutePaths([staticResourcePath])\n\t      }\n\t    });\n\t  });\n\t};\n\n/***/ },\n/* 88 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * @file Returns current test coverage for the org or a given path\n\t * @author Joseph Ferraro <@joeferraro>\n\t */\n\t\n\t'use strict';\n\t\n\tvar Promise = __webpack_require__(1);\n\tvar inherits = __webpack_require__(2);\n\tvar BaseCommand = __webpack_require__(5);\n\tvar ApexTest = __webpack_require__(34);\n\tvar MavensMateFile = __webpack_require__(11).MavensMateFile;\n\t\n\tfunction Command() {\n\t  Command.super_.call(this, Array.prototype.slice.call(arguments, 0));\n\t}\n\t\n\tinherits(Command, BaseCommand);\n\t\n\tCommand.prototype.execute = function () {\n\t  var self = this;\n\t  return new Promise(function (resolve, reject) {\n\t    var test = new ApexTest({\n\t      project: self.getProject()\n\t    });\n\t    var commandPromise;\n\t    if (self.payload.global) {\n\t      commandPromise = test.getOrgWideCoverage();\n\t    } else {\n\t      var mmFile = new MavensMateFile({ project: self.getProject(), path: self.payload.paths[0] });\n\t      test.apexClassOrTriggerIdToName[mmFile.id] = mmFile.basename;\n\t      commandPromise = test.getCoverage([mmFile.id]);\n\t    }\n\t    commandPromise.then(function (res) {\n\t      resolve(res);\n\t    }).catch(function (error) {\n\t      reject(error);\n\t    }).done();\n\t  });\n\t};\n\t\n\texports.command = Command;\n\texports.addSubCommand = function (program) {\n\t  program.command('get-coverage [apexClassOrTriggerPath]').option('-g, --global', 'Org-wide coverage').description('Gets coverage for a specified class').action(function (apexClassOrTriggerPath) {\n\t    if (this.global) {\n\t      program.commandExecutor.execute({\n\t        name: this._name,\n\t        body: {\n\t          global: true\n\t        }\n\t      });\n\t    } else {\n\t      program.commandExecutor.execute({\n\t        name: this._name,\n\t        body: {\n\t          paths: [apexClassOrTriggerPath]\n\t        }\n\t      });\n\t    }\n\t  });\n\t};\n\n/***/ },\n/* 89 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * @file Runs apex unit tests/opens the test runner UI\n\t * @author Joseph Ferraro <@joeferraro>\n\t */\n\t\n\t'use strict';\n\t\n\tvar Promise = __webpack_require__(1);\n\tvar util = __webpack_require__(3);\n\tvar inherits = __webpack_require__(2);\n\tvar BaseCommand = __webpack_require__(5);\n\tvar ApexTest = __webpack_require__(34);\n\tvar EditorService = __webpack_require__(9);\n\t\n\tfunction Command() {\n\t  Command.super_.call(this, Array.prototype.slice.call(arguments, 0));\n\t}\n\t\n\tinherits(Command, BaseCommand);\n\t\n\tCommand.prototype.execute = function () {\n\t  var self = this;\n\t  return new Promise(function (resolve, reject) {\n\t    self.payload.project = self.getProject();\n\t    var test = new ApexTest(self.payload);\n\t    test.execute().then(function (testResults) {\n\t      resolve(testResults);\n\t    }).catch(function (error) {\n\t      reject(error);\n\t    }).done();\n\t  });\n\t};\n\t\n\texports.command = Command;\n\texports.addSubCommand = function (program) {\n\t  program.command('run-test-method [testNameOrPath] [testMethodName]').alias('test').description('Runs an Apex unit test method').action(function (testNameOrPath, testMethodName) {\n\t    var self = this;\n\t    if (testNameOrPath && testMethodName) {\n\t      var payload = {\n\t        tests: [{\n\t          testNameOrPath: testNameOrPath,\n\t          methodNames: [testMethodName]\n\t        }]\n\t      };\n\t      program.commandExecutor.execute({\n\t        name: self._name,\n\t        body: payload,\n\t        editor: self.parent.editor\n\t      });\n\t    } else {\n\t      util.getPayload().then(function (payload) {\n\t        program.commandExecutor.execute({\n\t          name: self._name,\n\t          body: payload,\n\t          editor: self.parent.editor\n\t        });\n\t      });\n\t    }\n\t  });\n\t};\n\n/***/ },\n/* 90 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\r\n\t * @file Runs apex unit tests/opens the test runner UI\r\n\t * @author Joseph Ferraro <@joeferraro>\r\n\t */\n\t\n\t'use strict';\n\t\n\tvar _ = __webpack_require__(7);\n\tvar Promise = __webpack_require__(1);\n\tvar util = __webpack_require__(3);\n\tvar inherits = __webpack_require__(2);\n\tvar BaseCommand = __webpack_require__(5);\n\tvar ApexTest = __webpack_require__(34);\n\tvar EditorService = __webpack_require__(9);\n\t\n\tfunction Command() {\n\t  Command.super_.call(this, Array.prototype.slice.call(arguments, 0));\n\t}\n\t\n\tinherits(Command, BaseCommand);\n\t\n\tCommand.prototype.execute = function () {\n\t  var self = this;\n\t  return new Promise(function (resolve, reject) {\n\t    if (self.isUICommand()) {\n\t      var urlParams = { pid: self.getProject().settings.id };\n\t      if (self.payload && self.payload.classes && _.isArray(self.payload.classes)) {\n\t        urlParams.className = [self.payload.classes[0]];\n\t      }\n\t      self.editorService.launchUI('test/new', urlParams).then(function () {\n\t        resolve('Success');\n\t      }).catch(function (error) {\n\t        reject(error);\n\t      });\n\t    } else {\n\t      self.payload.project = self.getProject();\n\t      var test = new ApexTest(self.payload);\n\t      test.execute().then(function (testResults) {\n\t        if (self.payload.html) {\n\t          resolve(test.getResultHtml(testResults));\n\t        } else {\n\t          resolve(testResults);\n\t        }\n\t      }).catch(function (error) {\n\t        reject(error);\n\t      }).done();\n\t    }\n\t  });\n\t};\n\t\n\texports.command = Command;\n\texports.addSubCommand = function (program) {\n\t  program.command('run-tests [testPath]').alias('test').option('--ui', 'Launches the Apex test runner UI.').description('Runs Apex unit tests').action(function (testPath) {\n\t    if (this.ui) {\n\t      program.commandExecutor.execute({\n\t        name: this._name,\n\t        body: { args: { ui: true } },\n\t        editor: this.parent.editor\n\t      });\n\t    } else {\n\t      var self = this;\n\t      if (testPath) {\n\t        var payload = { tests: [testPath] };\n\t        program.commandExecutor.execute({\n\t          name: self._name,\n\t          body: payload,\n\t          editor: self.parent.editor\n\t        });\n\t      } else {\n\t        util.getPayload().then(function (payload) {\n\t          program.commandExecutor.execute({\n\t            name: self._name,\n\t            body: payload,\n\t            editor: self.parent.editor\n\t          });\n\t        });\n\t      }\n\t    }\n\t  });\n\t};\n\n/***/ },\n/* 91 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * @file Service responsible for creating and running \"Apex Scripts\" (anonymous Apex). These scripts are usually stored in a project's apex-scripts directory.\n\t * @author Joseph Ferraro <@joeferraro>\n\t */\n\t\n\t'use strict';\n\t\n\tvar Promise = __webpack_require__(1);\n\tvar fs = __webpack_require__(10);\n\tvar path = __webpack_require__(6);\n\tvar util = __webpack_require__(3);\n\tvar _ = __webpack_require__(7);\n\t\n\t/**\n\t * Service to create and execute anonymous Apex scripts\n\t * @param {Client} client\n\t */\n\tvar ApexScriptService = function (project) {\n\t  if (!project) {\n\t    throw new Error('ApexScriptService requires a valid project instance');\n\t  }\n\t  this.project = project;\n\t};\n\t\n\t/**\n\t * Creates new apex script\n\t * @param  {String} scriptPath\n\t * @return {Promise}\n\t */\n\tApexScriptService.prototype.create = function (name) {\n\t  var self = this;\n\t  return new Promise(function (resolve, reject) {\n\t    try {\n\t      var dir = path.join(self.project.path, 'apex-scripts');\n\t      fs.ensureDirSync(dir);\n\t      fs.outputFileSync(path.join(dir, [name, 'cls'].join('.')), '');\n\t      resolve('Apex script created successfully');\n\t    } catch (e) {\n\t      reject(e);\n\t    }\n\t  });\n\t};\n\t\n\t/**\n\t * Executes apex script\n\t * @param  {String} scriptPath\n\t * @return {Promise}\n\t */\n\tApexScriptService.prototype.execute = function (scriptPaths) {\n\t  var self = this;\n\t  if (!_.isArray(scriptPaths)) {\n\t    scriptPaths = [scriptPaths];\n\t  }\n\t  return new Promise(function (resolve, reject) {\n\t    var scriptPromises = [];\n\t    _.each(scriptPaths, function (sp) {\n\t      var scriptBody = util.getFileBody(sp);\n\t      var payload = {\n\t        body: scriptBody\n\t      };\n\t      scriptPromises.push(self.project.sfdcClient.executeApex(payload));\n\t    });\n\t\n\t    Promise.all(scriptPromises).then(function (results) {\n\t      var result = {};\n\t      _.each(scriptPaths, function (sp, i) {\n\t        result[path.basename(sp)] = results[i];\n\t      });\n\t      resolve(result);\n\t    }).catch(function (error) {\n\t      reject(error);\n\t    }).done();\n\t  });\n\t};\n\t\n\tmodule.exports = ApexScriptService;\n\n/***/ },\n/* 92 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * @file Responsible for interacting with the local secure store if one exists\n\t * @author Joseph Ferraro <@joeferraro>\n\t */\n\t\n\t'use strict';\n\t\n\tvar systemKeychainSupported = true;\n\ttry {\n\t  var keychain = __webpack_require__(139);\n\t} catch (e) {\n\t  systemKeychainSupported = false;\n\t}\n\tvar config = __webpack_require__(8);\n\tvar os = __webpack_require__(27);\n\tvar logger = __webpack_require__(4);\n\t\n\tvar KeychainService = function () {};\n\t\n\t/**\n\t * If user has opted in (mm_use_keyring=true) AND node-keychain is installed, use the system keychain\n\t * @return {Boolean}\n\t */\n\tKeychainService.prototype.useSystemKeychain = function () {\n\t  return config.get('mm_use_keyring') && systemKeychainSupported;\n\t};\n\t\n\t/**\n\t * Whether node-keychain is installed properly\n\t * @return {Boolean}\n\t */\n\tKeychainService.prototype.isSystemKeychainSupported = function () {\n\t  return systemKeychainSupported;\n\t};\n\t\n\t/**\n\t * Put password in the system keychain\n\t * @param  {String} id - the project id or id of the org connection\n\t * @param  {String} password - the accessToken or refreshToken to store as a \"password\"\n\t * @param  {String} type - either \"accessToken\" or \"refreshToken\" or \"password\"\n\t * @return {Nothing}\n\t */\n\tKeychainService.prototype.storePassword = function (id, password, type) {\n\t  logger.debug('Storing password of type', type, 'for', id);\n\t  if (this.useSystemKeychain()) {\n\t    var storePasswordResult = keychain.addPassword('MavensMate-' + type, id, password);\n\t    if (!storePasswordResult) {\n\t      throw new Error('Could not store ' + type + ' for ' + id);\n\t    }\n\t    return storePasswordResult;\n\t  } else {\n\t    throw new Error('Attempt to store password failed: system keychain service not supported');\n\t  }\n\t};\n\t\n\t/**\n\t * Update password in the system keychain\n\t * @param  {String} id - the project id or id of the org connection\n\t * @param  {String} password - the accessToken or refreshToken or password to store as a \"password\"\n\t * @param  {String} type - either \"accessToken\" or \"refreshToken\" or \"password\"\n\t * @return {Nothing}\n\t */\n\tKeychainService.prototype.replacePassword = function (id, password, type) {\n\t  logger.debug('Replacing password of type', type, 'for', id);\n\t  if (this.useSystemKeychain()) {\n\t    var replacePasswordResult = keychain.replacePassword('MavensMate-' + type, id, password);\n\t    if (!replacePasswordResult) {\n\t      throw new Error('Could not replace ' + type + ' for ' + id);\n\t    }\n\t    return replacePasswordResult;\n\t  } else {\n\t    throw new Error('Attempt to replace password in keychain failed: system keychain service not supported');\n\t  }\n\t};\n\t\n\t/**\n\t * Retrieve password from the system keychain\n\t * @param  {String} id - the project id or id of the org connection\n\t * @param  {String} type - either \"accessToken\" or \"refreshToken\" or \"password\"\n\t*/\n\tKeychainService.prototype.getPassword = function (id, type, canFailSilently) {\n\t  logger.debug('Retrieving password of type', type, 'for', id);\n\t  if (this.useSystemKeychain()) {\n\t    var getPasswordResult = keychain.getPassword('MavensMate-' + type, id);\n\t    if (!getPasswordResult && !canFailSilently) {\n\t      throw new Error('Could not get ' + type + ' for ' + id);\n\t    }\n\t    return getPasswordResult;\n\t  } else {\n\t    throw new Error('Attempt to get password from keychain failed: system keychain service not supported');\n\t  }\n\t};\n\t\n\tmodule.exports = KeychainService;\n\n/***/ },\n/* 93 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * @file Responsible for downloading Salesforce logs to the local project\n\t * @author Joseph Ferraro <@joeferraro>\n\t */\n\t\n\t'use strict';\n\t\n\tvar _ = __webpack_require__(7);\n\tvar Promise = __webpack_require__(1);\n\tvar fs = __webpack_require__(10);\n\tvar path = __webpack_require__(6);\n\tvar moment = __webpack_require__(21);\n\tvar events = __webpack_require__(25);\n\tvar inherits = __webpack_require__(2);\n\tvar logger = __webpack_require__(4);\n\t\n\tvar LogService = function (project) {\n\t  this.project = project;\n\t};\n\t\n\tinherits(LogService, events.EventEmitter);\n\t\n\tLogService.prototype.downloadLog = function (logId) {\n\t  var self = this;\n\t  return new Promise(function (resolve, reject) {\n\t    // create test name directory in debug/tests\n\t    if (!fs.existsSync(path.join(self.project.path, 'debug', 'logs'))) {\n\t      fs.mkdirpSync(path.join(self.project.path, 'debug', 'logs'));\n\t    }\n\t\n\t    var url = self.project.sfdcClient.conn.tooling._baseUrl() + '/sobjects/ApexLog/' + logId + '/Body';\n\t    self.project.sfdcClient.conn.tooling.request(url, function (err, res) {\n\t      if (err) {\n\t        reject(new Error('Could not download log: ' + err.message));\n\t      } else {\n\t        var logFileName = [moment().format('YYYY-MM-DD HH-mm-ss'), 'log'].join('.');\n\t        var filePath = path.join(self.project.path, 'debug', 'logs', logFileName);\n\t        fs.outputFile(filePath, res, function (e) {\n\t          if (e) {\n\t            reject(new Error('Could not write log file: ' + e.message));\n\t          } else {\n\t            self.emit('mavensmate-log-downloaded', filePath);\n\t            resolve(filePath);\n\t          }\n\t        });\n\t      }\n\t    });\n\t  });\n\t};\n\t\n\tLogService.prototype.getLogs = function () {\n\t  var self = this;\n\t  return new Promise(function (resolve, reject) {\n\t    try {\n\t      var projectLogsPath = path.join(self.project.path, 'debug', 'logs');\n\t      var logPaths = [];\n\t      fs.readdir(projectLogsPath, function (err, files) {\n\t        _.each(files, function (f) {\n\t          logPaths.push(path.join(projectLogsPath, f));\n\t        });\n\t        resolve(logPaths);\n\t      });\n\t    } catch (e) {\n\t      reject(e);\n\t    }\n\t  });\n\t};\n\t\n\tLogService.prototype.getLog = function (location) {\n\t  var self = this;\n\t  return new Promise(function (resolve, reject) {\n\t    try {\n\t      if (!fs.existsSync(location)) {\n\t        return reject(new Error('Log file not found'));\n\t      }\n\t      fs.readFile(location, 'utf8', function (err, data) {\n\t        if (err) {\n\t          reject(err);\n\t        } else {\n\t          var fileLines = data.toString().split(/\\r?\\n/);\n\t          logger.debug('doneeee');\n\t          resolve(fileLines);\n\t        }\n\t      });\n\t    } catch (e) {\n\t      reject(e);\n\t    }\n\t  });\n\t};\n\t\n\tLogService.prototype.filter = function (location, keyword) {\n\t  var self = this;\n\t  return new Promise(function (resolve, reject) {\n\t    try {\n\t      if (!fs.existsSync(location)) {\n\t        return reject(new Error('Log file not found'));\n\t      }\n\t      var matchingLines = [];\n\t      /*\n\t        Matching by the timestamp at the very begining of every log entry.\n\t        Using positive lookahead (?=) because it doesn't remove the matching string from the returned splits (don't want to actually remove the timestamps).\n\t        Using the modifiers:\n\t        - global : Don't return on first match.\n\t        - multi-line : ^ and $ match the begining and end of each line instead of string only.\n\t      */\n\t      var fileLines = fs.readFileSync(location, 'utf8').toString().split(/(?=^\\d{2}:\\d{2}:\\d{2}\\.\\d+ \\(\\d+\\)\\|)/gm);\n\t      var matcher = new RegExp(keyword, 'i');\n\t      _.each(fileLines, function (fl) {\n\t        if (matcher.test(fl)) {\n\t          matchingLines.push(fl);\n\t        }\n\t      });\n\t      resolve(matchingLines);\n\t    } catch (e) {\n\t      reject(e);\n\t    }\n\t  });\n\t};\n\t\n\tmodule.exports = LogService;\n\n/***/ },\n/* 94 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * @file Responsible for creating and deploying static resource bundles\n\t * @author Joseph Ferraro <@joeferraro>\n\t */\n\t\n\t'use strict';\n\t\n\tvar _ = __webpack_require__(7);\n\tvar fs = __webpack_require__(26);\n\tvar path = __webpack_require__(6);\n\tvar Promise = __webpack_require__(1);\n\tvar mavensMateFile = __webpack_require__(11);\n\tvar util = __webpack_require__(3);\n\tvar logger = __webpack_require__(4);\n\tvar Deploy = __webpack_require__(18);\n\t\n\tvar ResourceBundleService = function (project) {\n\t  this.project = project;\n\t};\n\t\n\t/**\n\t * Create resource bundles for the provided files\n\t * @param  {Array} files - list of static resources\n\t * @return {Promise}\n\t */\n\tResourceBundleService.prototype.create = function (staticResourcePaths) {\n\t  var self = this;\n\t  return new Promise(function (resolve, reject) {\n\t    logger.debug(staticResourcePaths);\n\t\n\t    var files = [];\n\t    var writePromises = [];\n\t    _.each(staticResourcePaths, function (p) {\n\t      logger.debug(p);\n\t      var f = new mavensMateFile.MavensMateFile({ project: self.project, path: p });\n\t      if (!f.existsOnFileSystem) {\n\t        throw new Error('Could not find static resource path');\n\t      }\n\t      if (f.type.xmlName !== 'StaticResource') {\n\t        throw new Error('File is not a static resource');\n\t      } else {\n\t        files.push(f);\n\t        var bundlePath = path.join(self.project.path, 'resource-bundles', [f.name, 'resource'].join('.'));\n\t        if (fs.existsSync(bundlePath)) {\n\t          throw new Error('Resource bundle path already exists.');\n\t        }\n\t        fs.ensureDirSync(bundlePath);\n\t        writePromises.push(self._write(f.path, bundlePath));\n\t      }\n\t    });\n\t\n\t    Promise.all(writePromises).then(function () {\n\t      resolve();\n\t    }).catch(function (e) {\n\t      reject(new Error('Could not create resource bundle(s): ' + e.message));\n\t    }).done();\n\t  });\n\t};\n\t\n\t/**\n\t * Writes static resource to the provided resource-bundle destination\n\t * @param  {String} staticResourcePath - location of static resource\n\t * @param  {String} destination        - location of static resource bundle\n\t * @return {Promise}\n\t */\n\tResourceBundleService.prototype._write = function (staticResourcePath, destination) {\n\t  return new Promise(function (resolve, reject) {\n\t    var readStream = fs.createReadStream(staticResourcePath);\n\t    util.writeStream(readStream, destination).then(function () {\n\t      resolve(destination);\n\t    }).catch(function (e) {\n\t      reject(new Error('Could not write bundle stream for ' + staticResourcePath + ': ' + e.message));\n\t    }).done();\n\t  });\n\t};\n\t\n\t/**\n\t * Deploys resource-bundles to server (zips bundle, copies to staticresources, deploys)\n\t * @param  {String} bundlePath - bundle path to deploy\n\t * @return {Promise}\n\t */\n\tResourceBundleService.prototype.deploy = function (bundlePaths) {\n\t  var self = this;\n\t  return new Promise(function (resolve, reject) {\n\t    logger.debug('deploying resource bundle paths: ', bundlePaths);\n\t\n\t    var zipPromises = [];\n\t    var mavensMateFiles = [];\n\t\n\t    _.each(bundlePaths, function (bp) {\n\t      var staticResourcePath = path.join(self.project.path, 'src', 'staticresources', path.basename(bp));\n\t      logger.debug('static resource path is: ' + staticResourcePath);\n\t      mavensMateFiles.push(new mavensMateFile.MavensMateFile({ project: self.project, path: staticResourcePath }));\n\t      zipPromises.push(self._zip(bp, staticResourcePath));\n\t    });\n\t\n\t    var compileSubscription = mavensMateFile.createPackageSubscription(mavensMateFiles, self.project.packageXml);\n\t\n\t    Promise.all(zipPromises).then(function () {\n\t      logger.debug('directories zipped, prepping for deployment');\n\t      var deploy = new Deploy({ project: self.project });\n\t      deploy.compileWithMetadataApi(mavensMateFiles, compileSubscription).then(function (result) {\n\t        resolve(result);\n\t      }).catch(function (error) {\n\t        reject(error);\n\t      }).done();\n\t    }).catch(function (error) {\n\t      reject(error);\n\t    }).done();\n\t  });\n\t};\n\t\n\tResourceBundleService.prototype._zip = function (bundlePath, staticResourcePath) {\n\t  return new Promise(function (resolve, reject) {\n\t\n\t    // remove static resource file\n\t    if (fs.existsSync(staticResourcePath)) {\n\t      fs.removeAsync(staticResourcePath).then(function () {\n\t        var staticResourceFileName = path.basename(bundlePath);\n\t        logger.debug('zipping ' + bundlePath + ', TO: ' + path.dirname(staticResourcePath));\n\t        // zip resource-bundle directory, place in static resource path\n\t        return util.zipDirectory(bundlePath, path.dirname(staticResourcePath), '', 'resource', staticResourceFileName.split('.')[0]);\n\t      }).then(function () {\n\t        resolve();\n\t      }).catch(function (err) {\n\t        reject(err);\n\t      });\n\t    }\n\t  });\n\t};\n\t\n\tmodule.exports = ResourceBundleService;\n\n/***/ },\n/* 95 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/* WEBPACK VAR INJECTION */(function(__dirname) {/**\n\t * @file Service for retrieving MavensMate templates from their local or remote source\n\t * @author Joseph Ferraro <@joeferraro>\n\t */\n\t\n\t'use strict';\n\t\n\tvar Promise = __webpack_require__(1);\n\tvar path = __webpack_require__(6);\n\tvar util = __webpack_require__(3);\n\tvar request = __webpack_require__(100);\n\tvar config = __webpack_require__(8);\n\tvar logger = __webpack_require__(4);\n\t\n\tfunction TemplateService() {}\n\t\n\tTemplateService.prototype.getTemplatesForType = function (metadataTypeXmlName) {\n\t  var self = this;\n\t  return new Promise(function (resolve, reject) {\n\t    self._getPackage().then(function (pkg) {\n\t      resolve(pkg[metadataTypeXmlName]);\n\t    }).catch(function (e) {\n\t      reject(new Error('Could not retrieve templates for type: ' + metadataTypeXmlName + ', ' + e.message));\n\t    }).done();\n\t  });\n\t};\n\t\n\tTemplateService.prototype.getTemplateBody = function (metadataTypeXmlName, templateOrTemplateFileName) {\n\t  return new Promise(function (resolve, reject) {\n\t    /*jshint camelcase: false */\n\t    var templateFileName = templateOrTemplateFileName.file_name ? template.file_name : templateOrTemplateFileName; // TODO: standardize format\n\t    var templateSource = config.get('mm_template_source');\n\t    if (templateSource === undefined || templateSource === '') {\n\t      templateSource = 'joeferraro/MavensMate-Templates/master';\n\t    }\n\t    var templateLocation = config.get('mm_template_location');\n\t    if (templateLocation === undefined || templateLocation === '') {\n\t      templateLocation = 'remote';\n\t    }\n\t\n\t    logger.debug('templateSource', templateSource);\n\t    logger.debug('templateLocation', templateLocation);\n\t\n\t    var templateBody;\n\t    try {\n\t      if (templateLocation === 'remote') {\n\t        request('https://raw.githubusercontent.com/' + templateSource + '/' + metadataTypeXmlName + '/' + templateFileName, function (error, response, body) {\n\t          if (!error && response.statusCode === 200) {\n\t            templateBody = body;\n\t          } else {\n\t            templateBody = util.getFileBody(path.join(templateSource, metadataTypeXmlName, templateFileName));\n\t          }\n\t          resolve(templateBody);\n\t        });\n\t      } else if (templateLocation === 'local') {\n\t        templateBody = util.getFileBody(path.join(templateSource, metadataTypeXmlName, templateFileName));\n\t        resolve(templateBody);\n\t      } else {\n\t        templateBody = util.getFileBody(path.join(__dirname, 'templates', 'github', metadataTypeXmlName, templateFileName));\n\t        resolve(templateBody);\n\t      }\n\t    } catch (e) {\n\t      logger.error('Could not retrieve template body', e);\n\t      templateBody = util.getFileBody(path.join(__dirname, 'templates', 'github', metadataTypeXmlName, templateFileName));\n\t      resolve(templateBody);\n\t    }\n\t  });\n\t};\n\t\n\tTemplateService.prototype._getPackage = function () {\n\t  return new Promise(function (resolve, reject) {\n\t    /*jshint camelcase: false */\n\t    try {\n\t      var templateSource = config.get('mm_template_source');\n\t      if (!templateSource) {\n\t        templateSource = 'joeferraro/MavensMate-Templates/master';\n\t      }\n\t      var templateLocation = config.get('mm_template_location');\n\t      if (!templateLocation) {\n\t        templateLocation = 'remote';\n\t      }\n\t\n\t      var templatePackage;\n\t      if (templateLocation === 'remote') {\n\t        request('https://raw.githubusercontent.com/' + templateSource + '/package.json', function (error, response, body) {\n\t          if (!error && response.statusCode === 200) {\n\t            templatePackage = JSON.parse(body);\n\t          } else {\n\t            templatePackage = util.getFileBody(path.join(__dirname, 'templates', 'github', 'package.json'), true);\n\t          }\n\t          resolve(templatePackage);\n\t        });\n\t      } else if (templateLocation === 'local') {\n\t        templatePackage = JSON.parse(util.getFileBody(path.join(templateSource, 'package.json')));\n\t        resolve(templatePackage);\n\t      } else {\n\t        templatePackage = util.getFileBody(path.join(__dirname, 'templates', 'github', 'package.json'), true);\n\t        resolve(templatePackage);\n\t      }\n\t    } catch (e) {\n\t      reject(new Error('Could not obtain template package: ' + e.message));\n\t    }\n\t    /*jshint camelcase: true */\n\t  });\n\t};\n\t\n\tmodule.exports = TemplateService;\n\t/* WEBPACK VAR INJECTION */}.call(exports, \"/\"))\n\n/***/ },\n/* 96 */\n/***/ function(module, exports) {\n\n\tmodule.exports = function (str) {\n\t  if (str) {\n\t    return str.replace(/[_-]+(\\w)/g, function (m) {\n\t      return m[1].toUpperCase();\n\t    });\n\t  } else {\n\t    return '';\n\t  }\n\t};\n\n/***/ },\n/* 97 */\n/***/ function(module, exports) {\n\n\tmodule.exports = require(\"child_process\");\n\n/***/ },\n/* 98 */\n/***/ function(module, exports) {\n\n\tmodule.exports = require(\"findit\");\n\n/***/ },\n/* 99 */\n/***/ function(module, exports) {\n\n\tmodule.exports = require(\"merge\");\n\n/***/ },\n/* 100 */\n/***/ function(module, exports) {\n\n\tmodule.exports = require(\"request\");\n\n/***/ },\n/* 101 */\n/***/ function(module, exports) {\n\n\tmodule.exports = require(\"which\");\n\n/***/ },\n/* 102 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tvar electron = __webpack_require__(14);\n\tvar app = electron.app;\n\tvar autoUpdater = electron.autoUpdater;\n\tvar ipcMain = electron.ipcMain;\n\tvar os = __webpack_require__(27);\n\tvar util = __webpack_require__(103);\n\tvar nslog = __webpack_require__(141);\n\t\n\tvar UPDATE_SERVER_HOST = 'mavensmate-app-auto-updater.herokuapp.com';\n\t\n\tfunction AppUpdater(window, config) {\n\t  var self = this;\n\t  if (util.isDev()) {\n\t    return;\n\t  }\n\t\n\t  this.window = window;\n\t\n\t  var version = app.getVersion();\n\t  var channel = config.get('mm_beta_channel', false) ? 'beta' : 'stable';\n\t\n\t  autoUpdater.addListener('update-available', function (event) {\n\t    console.log('A new update is available');\n\t    nslog('An update is available from channel: ' + channel);\n\t  });\n\t  autoUpdater.addListener('update-downloaded', function (event, releaseNotes, releaseName, releaseDate, updateURL) {\n\t    if (util.isMac()) {\n\t      nslog('Update from channel ' + channel + ' is ready to install on quit: ' + updateURL);\n\t    }\n\t    self._notify(releaseName);\n\t  });\n\t  autoUpdater.addListener('error', function (error) {\n\t    console.log(error);\n\t    nslog('Error updating from channel ' + channel + ': ' + error.message);\n\t  });\n\t  autoUpdater.addListener('checking-for-update', function (event) {\n\t    console.log('checking-for-update in channel: ' + channel);\n\t    nslog('Checking for update in channel: ' + channel);\n\t  });\n\t  autoUpdater.addListener('update-not-available', function () {\n\t    console.log('update-not-available for channel: ' + channel);\n\t    nslog('Update not available for channel: ' + channel);\n\t    // if beta user, autoupdater checks beta channel first, if an update isn't available in the beta channel, we look for an update in the stable channel\n\t    if (channel === 'beta') {\n\t      console.log('updater checking stable channel');\n\t      nslog('updater checking stable channel');\n\t      channel = 'stable';\n\t      autoUpdater.setFeedURL('https://' + UPDATE_SERVER_HOST + '/update/channel/' + channel + '/' + os.platform() + '_' + os.arch() + '/' + version);\n\t      autoUpdater.checkForUpdates();\n\t    }\n\t  });\n\t\n\t  ipcMain.on('quit-and-install', function () {\n\t    autoUpdater.quitAndInstall();\n\t  });\n\t\n\t  autoUpdater.setFeedURL('https://' + UPDATE_SERVER_HOST + '/update/channel/' + channel + '/' + os.platform() + '_' + os.arch() + '/' + version);\n\t  autoUpdater.checkForUpdates();\n\t}\n\t\n\tAppUpdater.prototype._notify = function (releaseName) {\n\t  if (util.isLinux() || util.isWindows()) {\n\t    this.window.webContents.send('update-available', releaseName, 'download');\n\t  } else if (util.isMac()) {\n\t    this.window.webContents.send('update-available', releaseName, 'quit');\n\t  }\n\t};\n\t\n\tmodule.exports = AppUpdater;\n\n/***/ },\n/* 103 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tvar electron = __webpack_require__(14);\n\tvar os = __webpack_require__(27);\n\t\n\tvar _exports = module.exports = {};\n\t\n\t_exports.isDev = function () {\n\t  return electron.app.getAppPath().includes('/node_modules/electron-prebuilt/');\n\t};\n\t\n\t_exports.isWindows = function () {\n\t  return os.platform() === 'win32';\n\t};\n\t\n\t_exports.isLinux = function () {\n\t  return os.platform() === 'linux';\n\t};\n\t\n\t_exports.isMac = function () {\n\t  return os.platform() === 'darwin';\n\t};\n\n/***/ },\n/* 104 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/* WEBPACK VAR INJECTION */(function(__dirname) {/**\n\t * @file HTTP Server that renders UIs and can run commands synchronously and asynchronously\n\t * @author Joseph Ferraro <@joeferraro>\n\t */\n\t\n\t'use strict';\n\t\n\tvar _ = __webpack_require__(7);\n\tvar path = __webpack_require__(6);\n\tvar swig = __webpack_require__(28);\n\tvar express = __webpack_require__(12);\n\tvar bodyParser = __webpack_require__(135);\n\tvar config = __webpack_require__(8);\n\tvar logger = __webpack_require__(105)();\n\tvar EditorService = __webpack_require__(9);\n\tvar ViewHelper = __webpack_require__(37);\n\tvar requestStore = __webpack_require__(13);\n\tvar util = __webpack_require__(3);\n\tvar app, server;\n\t\n\t/**\n\t * Starts the MavensMate HTTP server\n\t * @param  {Object} opts - server options\n\t * @param  {Integer} opts.port - server port\n\t * @param  {String} opts.mode - when running in MavensMate-Desktop, this value is \"desktop\"\n\t * @param  {Function} opts.openWindowFn - function used to open windows (optional)\n\t * @return {Object} - express app\n\t */\n\tmodule.exports.start = function (opts) {\n\t  return new Promise(function (resolve, reject) {\n\t    opts = opts || {};\n\t\n\t    if (!config.get('mm_workspace') || _.isArray(config.get('mm_workspace')) && config.get('mm_workspace').length === 0) {\n\t      config.set('mm_workspace', [util.getDefaultWorkspaceSetting()]);\n\t      config.save();\n\t    }\n\t\n\t    app = express();\n\t\n\t    app.use(bodyParser.urlencoded({ extended: true }));\n\t    app.use(bodyParser.json({ limit: '100mb' }));\n\t\n\t    app.use(__webpack_require__(113));\n\t    app.use(__webpack_require__(115));\n\t    app.use(__webpack_require__(114));\n\t    app.use(__webpack_require__(116));\n\t    app.use(__webpack_require__(117));\n\t\n\t    var viewHelper = new ViewHelper({\n\t      port: opts.port,\n\t      supportedEditors: new EditorService().supportedEditors\n\t    });\n\t\n\t    swig.setDefaults({\n\t      runInVm: true,\n\t      locals: {\n\t        mavensmate: {\n\t          ui: viewHelper\n\t        }\n\t      },\n\t      loader: swig.loaders.fs(path.join(path.dirname(__dirname), 'app'))\n\t    });\n\t\n\t    app.engine('html', swig.renderFile);\n\t    app.set('swig', swig);\n\t    app.set('view engine', 'html');\n\t    app.set('views', path.join(__dirname, 'views'));\n\t    app.set('view cache', false);\n\t\n\t    app.set('helper', viewHelper);\n\t\n\t    app.use('/app/static', express.static(path.join(util.getAppRoot(), 'app', 'public')));\n\t    app.use(__webpack_require__(124));\n\t\n\t    app.set('commandExecutor', __webpack_require__(29)(opts.openWindowFn));\n\t    app.set('openWindowFn', opts.openWindowFn);\n\t    app.set('requestStore', requestStore); // todo: move to proper cache\n\t    app.set('projects', []); // managed in project middleware (todo: move to proper cache)\n\t    app.set('mode', opts.mode);\n\t\n\t    server = app.listen(opts.port, function () {\n\t      process.env.MAVENSMATE_SERVER_PORT = opts.port;\n\t      process.env.MAVENSMATE_CONTEXT = 'server';\n\t      app.set('io', __webpack_require__(144)(server));\n\t      resolve({\n\t        app: app,\n\t        server: server\n\t      });\n\t    });\n\t\n\t    server.on('error', function (err) {\n\t      logger.error(err);\n\t      reject(err);\n\t    });\n\t  });\n\t};\n\t\n\t/**\n\t * Stops express server, clears process vars\n\t * @return {Nothing}\n\t */\n\tmodule.exports.stop = function () {\n\t  return new Promise(function (resolve, reject) {\n\t    server.close(function () {\n\t      delete process.env.MAVENSMATE_SERVER_PORT;\n\t      delete process.env.MAVENSMATE_CONTEXT;\n\t      resolve();\n\t    });\n\t  });\n\t};\n\t/* WEBPACK VAR INJECTION */}.call(exports, \"/\"))\n\n/***/ },\n/* 105 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * @file Sets up winston logging. bin/mavensmate / bin/server require and configure, other modules simply require('winston') to share global winston object.\n\t * @author Joseph Ferraro <@joeferraro>\n\t */\n\t\n\t'use strict';\n\t\n\t/**\n\t * initiates logging via winston\n\t * @param  {Object} opts\n\t * @param  {Object} opts.program - Commander.js program (optional)\n\t * @return {Object} - winston logger\n\t */\n\t\n\tmodule.exports = function (opts) {\n\t  opts = opts || {};\n\t\n\t  var fs = __webpack_require__(31);\n\t  var path = __webpack_require__(6);\n\t  var winston = __webpack_require__(4);\n\t  var config = __webpack_require__(8);\n\t\n\t  try {\n\t    winston.remove(winston.transports.Console);\n\t  } catch (e) {}\n\t\n\t  var logLevel;\n\t  if (config.get('mm_log_level')) {\n\t    logLevel = config.get('mm_log_level').toLowerCase();\n\t  } else {\n\t    logLevel = 'info';\n\t  }\n\t\n\t  // if we're not a cli client or if our cli client is verbose, log to the console\n\t  if (!opts.program || opts.program && opts.program.verbose) {\n\t    winston.cli();\n\t    winston.add(winston.transports.Console, {\n\t      level: logLevel,\n\t      exitOnError: false,\n\t      prettyPrint: true,\n\t      colorize: true\n\t    });\n\t  }\n\t\n\t  // place logs in mm_log_location if it exists\n\t  if (fs.existsSync(config.get('mm_log_location'))) {\n\t    try {\n\t      winston.add(winston.transports.File, {\n\t        filename: path.join(config.get('mm_log_location'), 'mavensmate.log'),\n\t        level: logLevel,\n\t        json: false\n\t      });\n\t    } catch (e) {\n\t      if (e.message.indexOf('Transport already attached') === -1) {\n\t        throw e;\n\t      }\n\t    }\n\t  }\n\t\n\t  winston.info('MavensMate log level: ' + logLevel);\n\t\n\t  return winston;\n\t};\n\n/***/ },\n/* 106 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/*\n\t * @file global MavensMate process\n\t * @author Joe Ferraro <@joeferraro>\n\t */\n\t\n\tvar mavensmate = exports;\n\t\n\tvar Promise = __webpack_require__(1);\n\tvar server = __webpack_require__(104);\n\t\n\tmavensmate.CommandExecutor = __webpack_require__(29);\n\tmavensmate.Project = __webpack_require__(30);\n\tmavensmate.SalesforceClient = __webpack_require__(17);\n\t\n\tmavensmate.startServer = function (opts) {\n\t  return new Promise(function (resolve, reject) {\n\t    opts = opts || {};\n\t    try {\n\t      var port = opts.port || '56248';\n\t      var verbose = opts.verbose || false;\n\t      server.start({\n\t        port: port,\n\t        verbose: opts.verbose,\n\t        openWindowFn: opts.openWindowFn,\n\t        mode: opts.mode\n\t      }).then(function (res) {\n\t        console.log('MavensMate server running on port: ' + port);\n\t        res.config = __webpack_require__(8);\n\t        res.logger = __webpack_require__(4);\n\t        resolve(res);\n\t      }).catch(function (e) {\n\t        console.error('Could not run MavensMate server', e);\n\t        reject(e);\n\t      });\n\t    } catch (e) {\n\t      console.error('MavensMate server failed to start: ' + e.message);\n\t      reject(e);\n\t    }\n\t  });\n\t};\n\t\n\tmavensmate.stopServer = function (opts) {\n\t  server.stop();\n\t};\n\n/***/ },\n/* 107 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * @file Responsible for compilation of Salesforce metadata (Custom Objects, Apex Classes, Lightning files, etc.)\n\t * @author Joseph Ferraro <@joeferraro>\n\t */\n\t\n\t'use strict';\n\t\n\tvar Promise = __webpack_require__(1);\n\tvar _ = __webpack_require__(7);\n\tvar logger = __webpack_require__(4);\n\tvar temp = __webpack_require__(19);\n\tvar config = __webpack_require__(8);\n\tvar LightningService = __webpack_require__(16);\n\tvar MetadataHelper = __webpack_require__(15).MetadataHelper;\n\tvar Deploy = __webpack_require__(18);\n\tvar fs = __webpack_require__(10);\n\tvar mavensMateFile = __webpack_require__(11);\n\tvar config = __webpack_require__(8);\n\tvar moment = __webpack_require__(21);\n\tvar Package = __webpack_require__(20).Package;\n\t\n\t/**\n\t * Responsible for compiling local copies of files/directories\n\t * @param {Project} project - project instance (required)\n\t * @param {Array} paths - array of path strings [ 'foo/bar/src/classes', 'foo/bar/src/pages/foo.page' ]\n\t */\n\tvar CompileDelegate = function (project, paths, force) {\n\t  if (!project || !paths) {\n\t    throw new Error('CompileDelegate requires a valid project instance and an array of paths to compile.');\n\t  }\n\t  this.project = project;\n\t  this.paths = paths;\n\t  this.force = force;\n\t  this.metadataHelper = new MetadataHelper({ sfdcClient: this.project.sfdcClient });\n\t};\n\t\n\t// we standardize the result output to match that of the metadata api compilation/deploy response\n\t//\n\t// { checkOnly: false,\n\t//   completedDate: '2015-01-19T23:55:03.000Z',\n\t//   createdBy: '005o0000000TB1i',\n\t//   createdByName: 'Joseph Ferraro',\n\t//   createdDate: '2015-01-19T23:55:03.000Z',\n\t//   details:\n\t//    { componentSuccesses: [ [Object], [Object], [Object] ],\n\t//      runTestResult: { numFailures: '0', numTestsRun: '0', totalTime: '0.0' },\n\t//      componentFailures: [] },\n\t//   done: true,\n\t//   id: '0Afo000000Ft2NbCAJ',\n\t//   ignoreWarnings: false,\n\t//   lastModifiedDate: '2015-01-19T23:55:03.000Z',\n\t//   numberComponentErrors: 0,\n\t//   numberComponentsDeployed: 2,\n\t//   numberComponentsTotal: 2,\n\t//   numberTestErrors: 0,\n\t//   numberTestsCompleted: 0,\n\t//   numberTestsTotal: 0,\n\t//   rollbackOnError: true,\n\t//   runTestsEnabled: 'false',\n\t//   startDate: '2015-01-19T23:55:03.000Z',\n\t//   status: 'Succeeded',\n\t//   success: true }\n\t\n\t/**\n\t * Executes local and server compile for all delegate paths\n\t * @return {Promise}\n\t */\n\tCompileDelegate.prototype.execute = function () {\n\t  // TODO: implement stash\n\t  var self = this;\n\t  return new Promise(function (resolve, reject) {\n\t    self._performCompile().then(function (compileResults) {\n\t      resolve(self._flattenResults(compileResults));\n\t    }).catch(function (err) {\n\t      reject(err);\n\t    });\n\t  });\n\t};\n\t\n\tCompileDelegate.prototype._flattenResults = function (compileResults) {\n\t  var result = {\n\t    checkOnly: false,\n\t    completedDate: '',\n\t    createdBy: '',\n\t    createdByName: '',\n\t    createdDate: '',\n\t    details: { componentSuccesses: [],\n\t      runTestResult: { numFailures: '0', numTestsRun: '0', totalTime: '0.0' },\n\t      componentFailures: []\n\t    },\n\t    done: false,\n\t    id: '',\n\t    ignoreWarnings: false,\n\t    lastModifiedDate: '',\n\t    numberComponentErrors: 0,\n\t    numberComponentsDeployed: 0,\n\t    numberComponentsTotal: 0,\n\t    numberTestErrors: 0,\n\t    numberTestsCompleted: 0,\n\t    numberTestsTotal: 0,\n\t    rollbackOnError: false,\n\t    runTestsEnabled: 'false',\n\t    startDate: '',\n\t    status: '',\n\t    success: true };\n\t\n\t  logger.debug('flattening results: ');\n\t\n\t  _.each(compileResults, function (res) {\n\t    logger.debug('compile result:');\n\t    logger.debug(res);\n\t\n\t    if (_.has(res, 'runTestsEnabled')) {\n\t      // this is metadata api result\n\t      result = res;\n\t    } else if (_.has(res, 'hasConflict') && !res.success) {\n\t      result.details.conflicts = res.conflicts;\n\t      result.status = 'Conflict';\n\t      result.success = false;\n\t      result.done = true;\n\t    } else if (_.isArray(res)) {\n\t      if (!result.details.componentFailures) {\n\t        result.details.componentFailures = [];\n\t      }\n\t      _.each(res, function (r) {\n\t        if (_.has(r, 'State')) {\n\t          // tooling result\n\t          if (r.State === 'Completed') {\n\t            result.numberComponentsDeployed++;\n\t            result.details.componentSuccesses.push(r);\n\t          } else {\n\t            result.numberComponentErrors++;\n\t            result.details.componentFailures.push(r);\n\t            result.success = false;\n\t          }\n\t        }\n\t      });\n\t    }\n\t  });\n\t\n\t  logger.debug('compile results: ');\n\t  logger.debug(JSON.stringify(result));\n\t  return result;\n\t};\n\t\n\tCompileDelegate.prototype._performCompile = function () {\n\t  var self = this;\n\t  return new Promise(function (resolve, reject) {\n\t    if (self.paths.length === 0) {\n\t      return resolve();\n\t    }\n\t\n\t    logger.debug('compiling paths: ');\n\t    logger.debug(self.paths);\n\t\n\t    var compileWithToolingApi = config.get('mm_compile_with_tooling_api');\n\t    var files = mavensMateFile.createFileInstances(self.paths, self.project);\n\t    var lightningBundleItemFiles = mavensMateFile.getLightningBundleItemFiles(files);\n\t    var toolingFiles = mavensMateFile.getToolingFiles(files, !compileWithToolingApi);\n\t    var metadataApiFiles = mavensMateFile.getMetadataApiFiles(files, compileWithToolingApi);\n\t    var compileSubscription = mavensMateFile.createPackageSubscription(files, self.project.packageXml, compileWithToolingApi);\n\t\n\t    var compilePromises = [];\n\t\n\t    if (metadataApiFiles.length > 0) {\n\t      compilePromises.push(self._compileGenericMetadata(metadataApiFiles, compileSubscription));\n\t    }\n\t\n\t    if (toolingFiles.length > 0) {\n\t      if (config.get('mm_legacy_compile')) {\n\t        compilePromises.push(self._compileToolingFilesLegacy(toolingFiles));\n\t      } else {\n\t        compilePromises.push(self._compileToolingFiles(toolingFiles));\n\t      }\n\t    }\n\t\n\t    if (lightningBundleItemFiles.length > 0) {\n\t      compilePromises.push(self._compileLightningBundleItemFiles(lightningBundleItemFiles));\n\t    }\n\t\n\t    Promise.all(compilePromises).then(function (res) {\n\t      resolve(res);\n\t    }).catch(function (err) {\n\t      // TODO: revert via stash\n\t      reject(err);\n\t    });\n\t  });\n\t};\n\t\n\tCompileDelegate.prototype._compileToolingFilesLegacy = function (toolingFiles) {\n\t  var self = this;\n\t  return new Promise(function (resolve, reject) {\n\t    logger.debug('compiling via tooling api, using legacy method (metadata api retrieve upon successul compilation)');\n\t    var toolingFilesPayload = [];\n\t    _.each(toolingFiles, function (tf) {\n\t      if (tf.isDirectory) {\n\t        // get directory contents\n\t        toolingFilesPayload = toolingFilesPayload.concat(tf.localMembers);\n\t      } else {\n\t        toolingFilesPayload.push(tf);\n\t      }\n\t    });\n\t\n\t    var compileResult;\n\t    var retrievePackage;\n\t    self._checkConflicts(toolingFilesPayload).then(function (conflictCheckResult) {\n\t      if (conflictCheckResult.hasConflict) {\n\t        return resolve(conflictCheckResult);\n\t      } else {\n\t        self.project.sfdcClient.compileWithToolingApi(toolingFilesPayload, self.project).then(function (result) {\n\t          logger.debug('compile via tooling api result: ');\n\t          logger.debug(result);\n\t          compileResult = result;\n\t          retrievePackage = new Package({ subscription: mavensMateFile.createPackageSubscription(toolingFilesPayload) });\n\t          return retrievePackage.init();\n\t        }).then(function () {\n\t          return self.project.sfdcClient.retrieveUnpackaged(retrievePackage.subscription);\n\t        }).then(function (retrieveResult) {\n\t          return self.project.updateLocalStore(retrieveResult.fileProperties);\n\t        }).then(function () {\n\t          resolve(compileResult);\n\t        }).catch(function (error) {\n\t          reject(error);\n\t        }).done();\n\t      }\n\t    }).catch(function (error) {\n\t      reject(error);\n\t    }).done();\n\t  });\n\t};\n\t\n\tCompileDelegate.prototype._compileToolingFiles = function (toolingFiles) {\n\t  var self = this;\n\t  return new Promise(function (resolve, reject) {\n\t    logger.debug('compiling via tooling api');\n\t    var toolingFilesPayload = [];\n\t    _.each(toolingFiles, function (tf) {\n\t      if (tf.isDirectory) {\n\t        // get directory contents\n\t        toolingFilesPayload = toolingFilesPayload.concat(tf.localMembers);\n\t      } else {\n\t        toolingFilesPayload.push(tf);\n\t      }\n\t    });\n\t\n\t    var compileResult;\n\t    var retrievePackage;\n\t    self._checkConflicts(toolingFilesPayload).then(function (conflictCheckResult) {\n\t      if (conflictCheckResult.hasConflict) {\n\t        return resolve(conflictCheckResult);\n\t      } else {\n\t        self.project.sfdcClient.compileWithToolingApi(toolingFilesPayload, self.project).then(function (result) {\n\t          logger.debug('compile via tooling api result: ');\n\t          logger.debug(result);\n\t          compileResult = result;\n\t          return self.project.sfdcClient.getServerProperties(toolingFiles);\n\t        }).then(function (serverPropertiesResult) {\n\t          logger.silly(serverPropertiesResult);\n\t          return self.project.updateLocalStore(serverPropertiesResult);\n\t        }).then(function () {\n\t          resolve(compileResult);\n\t        }).catch(function (error) {\n\t          reject(error);\n\t        }).done();\n\t      }\n\t    }).catch(function (error) {\n\t      reject(error);\n\t    }).done();\n\t  });\n\t};\n\t\n\t/**\n\t * Compiles metadata, will use metadata API or tooling API based on the metadata payload requested\n\t * @param  {Array} type Metadata - metadata to be compiled (must already exist in salesforce)\n\t * @return {Promise}\n\t */\n\tCompileDelegate.prototype._compileGenericMetadata = function (metadataApiFiles, compileSubscription) {\n\t  var self = this;\n\t  return new Promise(function (resolve, reject) {\n\t    logger.debug('compiling via metadata api');\n\t    logger.debug(compileSubscription);\n\t\n\t    var metadataApiFilesPayload = [];\n\t    _.each(metadataApiFiles, function (f) {\n\t      if (f.isDirectory) {\n\t        // get directory contents\n\t        metadataApiFilesPayload = metadataApiFilesPayload.concat(f.localMembers);\n\t      } else {\n\t        metadataApiFilesPayload.push(f);\n\t      }\n\t    });\n\t\n\t    self._checkConflicts(metadataApiFilesPayload).then(function (conflictCheckResult) {\n\t      if (conflictCheckResult.hasConflict) {\n\t        return resolve(conflictCheckResult);\n\t      } else {\n\t        var deploy = new Deploy({ project: self.project });\n\t        deploy.compileWithMetadataApi(metadataApiFilesPayload, compileSubscription).then(function (result) {\n\t          logger.debug('compile via metadata api result: ');\n\t          logger.debug(result);\n\t          resolve(result);\n\t        }).catch(function (error) {\n\t          reject(error);\n\t        }).done();\n\t      }\n\t    }).catch(function (error) {\n\t      reject(error);\n\t    }).done();\n\t  });\n\t};\n\t\n\t/**\n\t * Compiles metadata, will use metadata API or tooling API based on the metadata payload requested\n\t * @param  {Array} type Metadata - metadata to be compiled (must already exist in salesforce)\n\t * @return {Promise}\n\t */\n\tCompileDelegate.prototype._compileLightningBundleItemFiles = function (files) {\n\t  var self = this;\n\t  return new Promise(function (resolve, reject) {\n\t    var lightningService = new LightningService(self.project);\n\t    lightningService.update(files).then(function (result) {\n\t      logger.debug('compile lightning result: ');\n\t      logger.debug(result);\n\t      resolve(result);\n\t    }).catch(function (error) {\n\t      reject(error);\n\t    }).done();\n\t  });\n\t};\n\t\n\t/**\n\t * Checks for conflict between local copy and server copy\n\t * @param  {Array} files - array of MavensMateFiles\n\t * @return {Promise}\n\t */\n\tCompileDelegate.prototype._checkConflicts = function (files) {\n\t  var self = this;\n\t  return new Promise(function (resolve, reject) {\n\t    try {\n\t      if (!config.get('mm_compile_check_conflicts') || self.force) {\n\t        return resolve({ hasConflict: false });\n\t      }\n\t\n\t      logger.debug('checking for conflicts');\n\t\n\t      var result = { hasConflict: false };\n\t      var conflicts = {};\n\t\n\t      var serverCopyPromises = [];\n\t      _.each(files, function (f) {\n\t        if (f.isToolingType) {\n\t          serverCopyPromises.push(f.serverCopy);\n\t        }\n\t      });\n\t\n\t      if (serverCopyPromises.length === 0) {\n\t        return resolve({ hasConflict: false });\n\t      }\n\t\n\t      Promise.all(serverCopyPromises).then(function (serverCopyResults) {\n\t        _.each(files, function (f, i) {\n\t          // logger.debug('local copy:');\n\t          // logger.debug(f.localStoreEntry);\n\t          // logger.debug('remote copy:');\n\t          // logger.debug(serverCopyResults[i]);\n\t          if (!f.localStoreEntry) {\n\t            return reject(new Error('No local index found for ' + f.name + '. This can happen if you fetch your project from a remote git repository. Please ensure your project subscription includes the metadata type: \"' + f.type.xmlName + '\", then run the \"Clean Project\" command to update your local index of metadata.'));\n\t            return false;\n\t          }\n\t\n\t          var localLastModified = moment(f.localStoreEntry.lastModifiedDate);\n\t          var remoteLastModified = moment(serverCopyResults[i].LastModifiedDate);\n\t\n\t          if (remoteLastModified.isAfter(localLastModified)) {\n\t            logger.debug('conflict detected between: ');\n\t            logger.debug(f.localStoreEntry);\n\t            logger.debug(serverCopyResults[i]);\n\t\n\t            var tempFile = temp.openSync({ prefix: 'mm_', suffix: ' [SERVER COPY].' + self.metadataHelper.getTypeByXmlName(f.localStoreEntry.type).suffix });\n\t            fs.writeSync(tempFile.fd, serverCopyResults[i].Body);\n\t            serverCopyResults[i].tempPath = tempFile.path;\n\t\n\t            conflicts[f.basename] = {\n\t              local: f.localStoreEntry,\n\t              remote: serverCopyResults[i]\n\t            };\n\t          }\n\t        });\n\t\n\t        if (Object.keys(conflicts).length > 0) {\n\t          result.hasConflict = true;\n\t          result.success = false;\n\t          result.conflicts = conflicts;\n\t        }\n\t\n\t        logger.debug('conflict check result:');\n\t        logger.debug(result);\n\t\n\t        return resolve(result);\n\t      }).catch(function (err) {\n\t        logger.error('error checking conflicts', err);\n\t        reject(err);\n\t      });\n\t    } catch (e) {\n\t      logger.error('Could not check conflicts: ');\n\t      logger.error(e);\n\t      reject(e);\n\t    }\n\t  });\n\t};\n\t\n\tmodule.exports = CompileDelegate;\n\n/***/ },\n/* 108 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * @file Responsible for deletion of Salesforce metadata (Custom Objects, Apex Classes, Lightning files, etc.)\n\t * @author Joseph Ferraro <@joeferraro>\n\t */\n\t\n\t'use strict';\n\t\n\tvar Promise = __webpack_require__(1);\n\tvar _ = __webpack_require__(7);\n\tvar logger = __webpack_require__(4);\n\tvar LightningService = __webpack_require__(16);\n\tvar Deploy = __webpack_require__(18);\n\tvar fs = __webpack_require__(10);\n\tvar util = __webpack_require__(3);\n\tvar path = __webpack_require__(6);\n\tvar MetadataHelper = __webpack_require__(15).MetadataHelper;\n\tvar mavensMateFile = __webpack_require__(11);\n\tvar config = __webpack_require__(8);\n\t\n\t/**\n\t * Responsible for deleting server and local copies of files/directories\n\t * @param {Project} project - project instance (required)\n\t * @param {Array} paths - array of path strings [ 'foo/bar/src/classes', 'foo/bar/src/pages/foo.page' ]\n\t */\n\tvar DeleteDelegate = function (project, paths) {\n\t  if (!project || !paths) {\n\t    throw new Error('DeleteDelegate requires a valid project instance and an array of paths to delete.');\n\t  }\n\t  this.project = project;\n\t  this.paths = paths;\n\t  this.metadataHelper = new MetadataHelper({ sfdcClient: this.project.sfdcClient });\n\t};\n\t\n\t/**\n\t * Executes local and server delete for all delegate paths\n\t * @return {Promise}\n\t */\n\tDeleteDelegate.prototype.execute = function () {\n\t  // TODO: implement stash\n\t  var self = this;\n\t  var deleteResult;\n\t  return new Promise(function (resolve, reject) {\n\t    _.each(self.paths, function (p) {\n\t      if (!fs.existsSync(p)) {\n\t        return reject(new Error('Invalid delete request. Path does not exist: ' + p));\n\t      }\n\t    });\n\t\n\t    self._performDelete().then(function (res) {\n\t      deleteResult = res;\n\t      return self._deleteEmptyProjectDirectories();\n\t    }).then(function () {\n\t      resolve(deleteResult);\n\t    }).catch(function (err) {\n\t      // TODO: revert via stash\n\t      reject(err);\n\t    });\n\t  });\n\t};\n\t\n\tDeleteDelegate.prototype._deleteEmptyProjectDirectories = function () {\n\t  var self = this;\n\t  return new Promise(function (resolve, reject) {\n\t    try {\n\t      fs.readdirSync(path.join(self.project.path, 'src')).filter(function (res) {\n\t        if (fs.statSync(path.join(self.project.path, 'src', res)).isDirectory()) {\n\t          if (util.isDirectoryEmptySync(path.join(self.project.path, 'src', res))) {\n\t            fs.removeSync(path.join(self.project.path, 'src', res));\n\t          }\n\t        }\n\t      });\n\t      resolve();\n\t    } catch (e) {\n\t      reject(e);\n\t    }\n\t  });\n\t};\n\t\n\tDeleteDelegate.prototype._performDelete = function () {\n\t  var self = this;\n\t  return new Promise(function (resolve, reject) {\n\t    if (self.paths.length === 0) {\n\t      return resolve();\n\t    }\n\t\n\t    var files = mavensMateFile.createFileInstances(self.paths);\n\t    var lightningBundleItemFiles = mavensMateFile.getLightningBundleItemFiles(files);\n\t    var deleteSubscription = mavensMateFile.createPackageSubscription(files, self.project.packageXml);\n\t\n\t    var result = {};\n\t    var deployOptions = {\n\t      purgeOnDelete: config.get('mm_purge_on_delete') || false\n\t    };\n\t    var deploy = new Deploy({ project: self.project });\n\t    deploy.stageDelete(deleteSubscription).then(function (zipStream) {\n\t      return deploy.executeStream(zipStream, deployOptions);\n\t    }).then(function (res) {\n\t      result = res;\n\t      logger.debug('Deletion result via metadata API: ' + JSON.stringify(result));\n\t      if (result.success && result.status === 'Succeeded') {\n\t        logger.debug('deleting paths locally');\n\t        _.each(files, function (sp) {\n\t          logger.debug('deleting: ' + sp.path);\n\t          sp.deleteLocally();\n\t        });\n\t      }\n\t      if (!result.details.componentSuccesses) {\n\t        result.details.componentSuccesses = [];\n\t      }\n\t      if (!result.details.componentFailures) {\n\t        result.details.componentFailures = [];\n\t      }\n\t      return self._deleteLightningBundleItemFiles(lightningBundleItemFiles);\n\t    }).then(function (res) {\n\t      if (res) {\n\t        _.each(res, function (r) {\n\t          if (!r.success) {\n\t            result.numberComponentErrors++;\n\t            result.componentFailures.push(r);\n\t          } else {\n\t            result.numberComponentsDeployed++;\n\t            result.componentSuccesses.push(r);\n\t          }\n\t          result.numberComponentsTotal++;\n\t        });\n\t        if (!_.find(res, { 'success': false })) {\n\t          _.each(lightningBundleItemFiles, function (sp) {\n\t            sp.deleteLocally();\n\t          });\n\t          if (res.status === 'Succeeded' && res.success) {\n\t            res.status = 'Failed';\n\t            res.success = false;\n\t          }\n\t        }\n\t      }\n\t      // console.log(result);\n\t      logger.debug(JSON.stringify(result));\n\t      resolve(result);\n\t    }).catch(function (error) {\n\t      reject(error);\n\t    }).done();\n\t  });\n\t};\n\t\n\t/**\n\t * Retrieves source of lightning bundle items, overwrite local copies\n\t * @param  {Array} lightningMetadata - array of Metadata of type Lightning\n\t * @return {Promise}\n\t * TODO: overwrite local copies\n\t */\n\tDeleteDelegate.prototype._deleteLightningBundleItemFiles = function (lightningFiles) {\n\t  var self = this;\n\t  return new Promise(function (resolve, reject) {\n\t    if (lightningFiles.length === 0) {\n\t      return resolve();\n\t    }\n\t\n\t    logger.debug('deleting lightning components');\n\t    logger.debug(lightningFiles[0].path);\n\t\n\t    var lightningService = new LightningService(self.project);\n\t    lightningService.deleteBundleItems(lightningFiles).then(function (result) {\n\t      logger.debug('delete result: ');\n\t      logger.debug(result);\n\t      resolve(result);\n\t    }).catch(function (error) {\n\t      reject(error);\n\t    }).done();\n\t  });\n\t};\n\t\n\tmodule.exports = DeleteDelegate;\n\n/***/ },\n/* 109 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * @file Responsible for indexing Apex symbol tables locally (they go in a project's config/.symbols directory)\n\t * @author Joseph Ferraro <@joeferraro>\n\t */\n\t\n\t'use strict';\n\t\n\tvar Promise = __webpack_require__(1);\n\tvar _ = __webpack_require__(7);\n\tvar logger = __webpack_require__(4);\n\tvar util = __webpack_require__(3);\n\tvar fs = __webpack_require__(10);\n\tvar path = __webpack_require__(6);\n\t\n\tvar SymbolService = function (project) {\n\t  this.project = project;\n\t};\n\t\n\t/**\n\t * Indexes Apex class symbols for an entire project\n\t * @return {Promise}\n\t */\n\tSymbolService.prototype.index = function () {\n\t  var self = this;\n\t  return new Promise(function (resolve, reject) {\n\t    self._getApexClassNames().then(function (classNames) {\n\t      var symbolPromises = [];\n\t      var classNameArrays = util.chunkArray(classNames, 10);\n\t      logger.debug(classNameArrays);\n\t      _.each(classNameArrays, function (classNames) {\n\t        symbolPromises.push(self._getSymbolsForClassNames(classNames));\n\t      });\n\t      return Promise.all(symbolPromises);\n\t    }).then(function (symbolPromiseResults) {\n\t      logger.debug(self.classMap);\n\t      var writeSymbolPromises = [];\n\t      _.each(symbolPromiseResults, function (res) {\n\t        _.each(res.records, function (symbolQueryResult) {\n\t          writeSymbolPromises.push(self._writeSymbolTable(symbolQueryResult));\n\t        });\n\t      });\n\t      return Promise.all(writeSymbolPromises);\n\t    }).then(function () {\n\t      resolve();\n\t    }).catch(function (err) {\n\t      reject(new Error('Could not index Apex Symbols: ' + err.message));\n\t    }).done();\n\t  });\n\t};\n\t\n\t/**\n\t * Indexes Apex class symbols for a given class name\n\t * @param  {String} apexClassName - name of the apex class to be indexes\n\t * @return {Promise}\n\t */\n\tSymbolService.prototype.indexApexClass = function (apexClassName) {\n\t  var self = this;\n\t  return new Promise(function (resolve, reject) {\n\t    self._getSymbolsForClassNames([apexClassName]).then(function (symbolQueryResult) {\n\t      return self._writeSymbolTable(symbolQueryResult.records[0]);\n\t    }).then(function () {\n\t      resolve();\n\t    }).catch(function (err) {\n\t      logger.error('Could not index Apex Symbols: ' + err.message);\n\t      reject(err);\n\t    }).done();\n\t  });\n\t};\n\t\n\t/**\n\t * Writes symbol table response to the project's .symbols file\n\t * @param  {Object} symbolQueryResult - symbol table definition from salesforce\n\t * @return {Promise}\n\t */\n\tSymbolService.prototype._writeSymbolTable = function (symbolQueryResult) {\n\t  var self = this;\n\t  return new Promise(function (resolve, reject) {\n\t    fs.outputFile(path.join(self.project.path, 'config', '.symbols', symbolQueryResult.Name + '.json'), JSON.stringify(symbolQueryResult.SymbolTable, null, 4), function (err) {\n\t      if (err) {\n\t        reject(err);\n\t      } else {\n\t        resolve();\n\t      }\n\t    });\n\t  });\n\t};\n\t\n\t/**\n\t * Given a list of Apex class names, retrieve the symbol tables\n\t * @param  {Array} classNames - class names\n\t * @return {Promise}\n\t */\n\tSymbolService.prototype._getSymbolsForClassNames = function (classNames) {\n\t  var self = this;\n\t  return new Promise(function (resolve, reject) {\n\t    logger.debug('_getSymbolsForClassNames:');\n\t    logger.debug(classNames);\n\t\n\t    var fields = ['NamespacePrefix', 'SymbolTable', 'Name'];\n\t    var query = 'SELECT ' + fields.join(',') + ' FROM ApexClass WHERE NAME IN (' + util.joinForQuery(classNames) + ')';\n\t\n\t    self.project.sfdcClient.conn.tooling.query(query, function (err, res) {\n\t      if (err) {\n\t        reject(new Error('error retrieving symbols: ' + err.message));\n\t      } else {\n\t        resolve(res);\n\t      }\n\t    });\n\t  });\n\t};\n\t\n\t/**\n\t * Returns a list of Apex classes in the org (from the server)\n\t * @return {Promise}\n\t */\n\tSymbolService.prototype._getApexClassNames = function () {\n\t  var self = this;\n\t  return new Promise(function (resolve, reject) {\n\t    self.project.sfdcClient.list('ApexClass').then(function (res) {\n\t      var classNames = [];\n\t      _.each(res.ApexClass, function (cls) {\n\t        classNames.push(cls.fullName);\n\t      });\n\t      resolve(classNames);\n\t    }).catch(function (err) {\n\t      reject(new Error('Could not get class names: ' + err.message));\n\t    }).done();\n\t  });\n\t};\n\t\n\tmodule.exports = SymbolService;\n\n/***/ },\n/* 110 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * @file Responsible for compilation of Salesforce metadata (Custom Objects, Apex Classes, Lightning files, etc.)\n\t * @author Joseph Ferraro <@joeferraro>\n\t */\n\t\n\t'use strict';\n\t\n\tvar Promise = __webpack_require__(1);\n\tvar logger = __webpack_require__(4);\n\tvar temp = __webpack_require__(19);\n\tvar MetadataHelper = __webpack_require__(15).MetadataHelper;\n\tvar fs = __webpack_require__(10);\n\tvar moment = __webpack_require__(21);\n\tvar mavensMateFile = __webpack_require__(11);\n\t\n\t/**\n\t * Responsible for compiling local copies of files/directories\n\t * @param {Project} project - project instance (required)\n\t * @param {Array} paths - array of path strings [ 'foo/bar/src/classes', 'foo/bar/src/pages/foo.page' ]\n\t */\n\tvar SyncDelegate = function (project, path, force) {\n\t  if (!project || !path) {\n\t    throw new Error('SyncDelegate requires a valid project instance and a path path to sync.');\n\t  }\n\t  this.project = project;\n\t  this.path = path;\n\t  this.force = force;\n\t  this.metadataHelper = new MetadataHelper({ sfdcClient: this.project.sfdcClient });\n\t};\n\t\n\t/**\n\t * Checks for conflict between local copy and server copy\n\t * @param  {Array} files - array of MavensMateFiles\n\t * @return {Promise}\n\t */\n\tSyncDelegate.prototype.execute = function () {\n\t  var self = this;\n\t  return new Promise(function (resolve, reject) {\n\t    try {\n\t      logger.debug('syncing with the sevrer');\n\t\n\t      var mmFile = mavensMateFile.createFileInstances([self.path], self.project)[0];\n\t\n\t      mmFile.serverCopy.then(function (serverCopyResult) {\n\t\n\t        if (!mmFile.localStoreEntry) {\n\t          return reject(new Error('No local index found for ' + mmFile.name + '. This can happen if you fetch your project from a remote git repository. Please ensure your project subscription includes the metadata type: \"' + mmFile.type.xmlName + '\", then run the \"Clean Project\" command to update your local index of metadata.'));\n\t          return false;\n\t        }\n\t\n\t        logger.debug('local copy:');\n\t        logger.debug(mmFile.localStoreEntry);\n\t        logger.debug('remote copy:');\n\t        logger.debug(serverCopyResult);\n\t\n\t        var localLastModified = moment(mmFile.localStoreEntry.lastModifiedDate);\n\t        var remoteLastModified = moment(serverCopyResult.LastModifiedDate);\n\t\n\t        if (remoteLastModified.isAfter(localLastModified)) {\n\t          logger.debug('conflict detected between: ');\n\t          logger.debug(mmFile.localStoreEntry);\n\t          logger.debug(serverCopyResult);\n\t\n\t          var tempFile = temp.openSync({ prefix: 'mm_', suffix: ' [SERVER COPY].' + self.metadataHelper.getTypeByXmlName(mmFile.localStoreEntry.type).suffix });\n\t          fs.writeSync(tempFile.fd, serverCopyResult.Body);\n\t          serverCopyResult.tempPath = tempFile.path;\n\t\n\t          var result = {\n\t            local: mmFile.localStoreEntry,\n\t            remote: serverCopyResult\n\t          };\n\t          return resolve(result);\n\t        } else {\n\t          return resolve('Local metadata is in sync with server');\n\t        }\n\t      }).catch(function (err) {\n\t        reject(err);\n\t      });\n\t    } catch (e) {\n\t      logger.error('Could not sync with server: ');\n\t      logger.error(e);\n\t      reject(e);\n\t    }\n\t  });\n\t};\n\t\n\tmodule.exports = SyncDelegate;\n\n/***/ },\n/* 111 */\n/***/ function(module, exports) {\n\n\tmodule.exports = function (string) {\n\t    return string.charAt(0).toUpperCase() + string.slice(1);\n\t};\n\n/***/ },\n/* 112 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * The MIT License (MIT)\n\t\n\tCopyright 2015 Matt\n\t\n\tPermission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:\n\t\n\tThe above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\t\n\tTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n\t*/\n\t\n\tvar _, camelize, normalize;\n\t\n\t_ = __webpack_require__(7);\n\t\n\tcamelize = function (str) {\n\t  return str.replace(/(?:^\\w|[A-Z]|\\b\\w|\\s+)/g, function (match, index) {\n\t    if (+match === 0) return \"\"; // or if (/\\s+/.test(match)) for white spaces\n\t    return index == 0 ? match.toLowerCase() : match.toUpperCase();\n\t  });\n\t};\n\t\n\tnormalize = function (obj) {\n\t  var i, k, method, ret;\n\t  var caseType = 'camel';\n\t  ret = obj;\n\t  if (_.isArray(obj)) {\n\t    ret = [];\n\t    i = 0;\n\t    while (i < obj.length) {\n\t      ret.push(normalize(obj[i]));\n\t      ++i;\n\t    }\n\t  } else if (_.isObject(obj)) {\n\t    ret = {};\n\t    for (k in obj) {\n\t      ret[camelize(k)] = normalize(obj[k]);\n\t    }\n\t  }\n\t  return ret;\n\t};\n\t\n\tmodule.exports = normalize;\n\n/***/ },\n/* 113 */\n/***/ function(module, exports) {\n\n\tmodule.exports = function (req, res, next) {\n\t  res.header('Access-Control-Allow-Origin', '*');\n\t  res.header('Access-Control-Allow-Methods', 'GET,POST,PATCH,PUT,DELETE,OPTIONS');\n\t  res.header('Access-Control-Allow-Headers', ['Content-Type', 'X-Requested-With', 'MavensMate-Editor-Agent']);\n\t  next();\n\t};\n\n/***/ },\n/* 114 */\n/***/ function(module, exports) {\n\n\t/**\n\t * Middleware to attach editor\n\t */\n\tmodule.exports = function (req, res, next) {\n\t  if (req.url.indexOf('/app/static') >= 0) {\n\t    return next();\n\t  }\n\t  req.editor = req.query.editor || req.body.editor || req.get('mavensmate-editor-agent'); // atom, sublime, vscode, etc.\n\t  req.pid = req.query.pid || req.body.pid || req.get('mavensmate-pid');\n\t  res.locals.editor = req.editor;\n\t  next();\n\t};\n\n/***/ },\n/* 115 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar logger = __webpack_require__(4);\n\tvar _ = __webpack_require__(7);\n\t\n\tmodule.exports = function (req, res, next) {\n\t  if (req.url.indexOf('/app/static') === -1) {\n\t    logger.debug('Processing request ' + req.method + ' for URL: ' + req.url);\n\t  } else {\n\t    logger.silly('Processing request ' + req.method + ' for URL: ' + req.url);\n\t  }\n\t  if (req.method === 'POST' && req.body) {\n\t    logger.debug('post body', req.body);\n\t  } else if (req.method === 'GET' && req.query && !_.isEmpty(req.query)) {\n\t    logger.debug('query params', req.query);\n\t  }\n\t  next();\n\t};\n\n/***/ },\n/* 116 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar _ = __webpack_require__(7);\n\tvar logger = __webpack_require__(4);\n\tvar Project = __webpack_require__(30);\n\tvar config = __webpack_require__(8);\n\tvar util = __webpack_require__(3);\n\tvar path = __webpack_require__(6);\n\tvar fs = __webpack_require__(10);\n\t\n\t/**\n\t * Middleware to attach editor and project to the request\n\t */\n\tmodule.exports = function (req, res, next) {\n\t  if (req.url.indexOf('/app/static') >= 0) {\n\t    return next();\n\t  }\n\t\n\t  // attach project to request based on pid query param\n\t  //\n\t  // TODO! handle command request and app/:route/:action requests different when project is invalid\n\t  //\n\t  if (req.pid) {\n\t    var project = util.getProjectById(req.app, req.pid);\n\t    if (!project) {\n\t      // this is a new project to the client, we attempt to initialize it\n\t      // it's possible that:\n\t      //   1. the pid is invalid\n\t      //   2. the project structure is corrupt\n\t      //   3. we are unable to initialize authentication (missing/bad tokens) --> project.requiresAuthentication\n\t      logger.debug('Attempting to attach project to request', req.pid);\n\t      _addProjectById(req.app, req.pid).then(function () {\n\t        project = util.getProjectById(req.app, req.pid);\n\t        req.project = project;\n\t        res.locals.project = project;\n\t        if (project.requiresAuthentication) {\n\t          logger.info('Project added to client, but it requires authentication, redirecting to auth endpoint');\n\t          if (req.url.indexOf('/app/') >= 0 && req.url.indexOf('/auth') === -1 && req.url.indexOf('/settings') === -1) {\n\t            // we can redirect to re-auth\n\t            res.redirect('/app/project/' + req.pid + '/auth?pid=' + req.pid);\n\t          } else if ((req.url.indexOf('/execute') >= 0 || req.url.indexOf('/status') >= 0) && req.query.command !== 'oauth-project') {\n\t            // this is an api (headless) request, so we need to 500\n\t            logger.error('requested route/resource requires re-authentication, sending 500');\n\t            res.status(500).send('Could not complete the requested operation. Project requires re-authentication.');\n\t          } else {\n\t            next();\n\t          }\n\t        } else {\n\t          next();\n\t        }\n\t      }).catch(function (err) {\n\t        // todo: when will this be thrown???\n\t        // todo: redirect to friendly page on /app route\n\t        logger.error('Failed to add project to client', err);\n\t        res.status(500).send('Error initializing project: ' + err.message);\n\t      });\n\t    } else if (project.requiresAuthentication) {\n\t      req.project = project;\n\t      if (req.url.indexOf('/app/') >= 0 && req.url.indexOf('/auth') === -1 && req.url.indexOf('/settings') === -1) {\n\t        // we can redirect to re-auth\n\t        res.redirect('/app/project/' + req.pid + '/auth?pid=' + req.pid);\n\t      } else if ((req.url.indexOf('/execute') >= 0 || req.url.indexOf('/status') >= 0) && req.query.command !== 'oauth-project') {\n\t        // this is an api (headless) request, so we need to 500\n\t        logger.error('requested route/resource requires re-authentication, sending 500');\n\t        res.status(500).send('Could not complete the requested operation. Project requires re-authentication.');\n\t      } else {\n\t        next();\n\t      }\n\t    } else {\n\t      logger.debug('found project in cache', project.name);\n\t      req.project = project;\n\t      res.locals.project = project;\n\t      next();\n\t    }\n\t  } else {\n\t    next();\n\t  }\n\t};\n\t\n\tfunction _addProjectById(app, projectId) {\n\t  return new Promise(function (resolve, reject) {\n\t    var projectPath = _findProjectPathById(projectId);\n\t    if (!projectPath) {\n\t      return reject(new Error('MavensMate could not find project with the id: ' + projectId + '. This is likely because you are trying to open a project that does not reside in a valid mm_workspace. Please go to MavensMate Desktop global settings and ensure this project is located in a valid mm_workspace.'));\n\t    }\n\t    logger.info('adding project by id ----> ', projectId);\n\t    logger.info('path: ', projectPath);\n\t    var project = new Project({ path: projectPath });\n\t    project.initialize(false).then(function (response) {\n\t      app.get('projects').push(project);\n\t      resolve(response);\n\t    }).catch(function (err) {\n\t      if (util.isCredentialsError(err)) {\n\t        logger.warn('Project requiring re-auth added to client');\n\t        app.get('projects').push(project);\n\t        resolve();\n\t      } else {\n\t        logger.error('Error initializing project: ' + err.message + ' -> ' + err.stack);\n\t        reject(err);\n\t      }\n\t    }).done();\n\t  });\n\t}\n\t\n\t/**\n\t * Given a project id, search given workspaces to find it on the disk\n\t * @param  {String} id mavensmate project id\n\t * @return {String}    project path\n\t */\n\tfunction _findProjectPathById(id) {\n\t  logger.debug('_findProjectPathById');\n\t  logger.debug(id);\n\t  var projectPathToReturn;\n\t  var workspaces = config.get('mm_workspace');\n\t  if (!_.isArray(workspaces)) {\n\t    workspaces = [workspaces];\n\t  }\n\t  logger.silly(workspaces);\n\t  _.each(workspaces, function (workspacePath) {\n\t    // /foo/bar/project\n\t    // /foo/bar/project/config/.settings\n\t    logger.silly(workspacePath);\n\t    var projectPaths = util.listDirectories(workspacePath);\n\t    logger.silly(projectPaths);\n\t    _.each(projectPaths, function (projectPath) {\n\t      var settingsPath = path.join(projectPath, 'config', '.settings');\n\t      if (fs.existsSync(settingsPath)) {\n\t        var settings = util.getFileBody(settingsPath, true);\n\t        if (settings.id === id) {\n\t          projectPathToReturn = projectPath;\n\t          return false;\n\t        }\n\t      }\n\t    });\n\t  });\n\t  return projectPathToReturn;\n\t};\n\n/***/ },\n/* 117 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar path = __webpack_require__(6);\n\tvar logger = __webpack_require__(4);\n\tvar util = __webpack_require__(3);\n\t\n\tvar resourceMap = {\n\t  project: {\n\t    iconClassName: 'slds-icon-standard-folder',\n\t    iconName: 'folder'\n\t  },\n\t  metadata: {\n\t    iconClassName: 'slds-icon-standard-document',\n\t    iconName: 'document'\n\t  },\n\t  lightning: {\n\t    iconClassName: 'slds-icon-standard-connected-apps',\n\t    iconName: 'connected_apps'\n\t  },\n\t  connections: {\n\t    iconClassName: 'slds-icon-standard-environment-hub',\n\t    iconName: 'environment_hub'\n\t  },\n\t  deploy: {\n\t    iconClassName: 'slds-icon-standard-environment-hub',\n\t    iconName: 'environment_hub'\n\t  },\n\t  auth: {\n\t    iconClassName: 'slds-icon-standard-avatar',\n\t    iconName: 'avatar'\n\t  },\n\t  test: {\n\t    iconClassName: 'slds-icon-standard-dashboard',\n\t    iconName: 'dashboard'\n\t  },\n\t  settings: {\n\t    iconClassName: 'slds-icon-standard-quotes',\n\t    iconName: 'settings',\n\t    sprite: 'utility-sprite'\n\t  },\n\t  logs: {\n\t    iconClassName: 'slds-icon-standard-record',\n\t    iconName: 'record'\n\t  },\n\t  apex: {\n\t    iconClassName: 'slds-icon-standard-custom',\n\t    iconName: 'custom'\n\t  },\n\t  home: {\n\t    iconClassName: 'slds-icon-standard-home',\n\t    iconName: 'home'\n\t  }\n\t};\n\t\n\tmodule.exports = function (req, res, next) {\n\t  var swig = req.app.get('swig');\n\t\n\t  // do we need this??\n\t  // swig.setDefaults({ runInVm: true, loader: swig.loaders.fs(path.join(path.dirname(__dirname))) });\n\t\n\t  // set locals for templates\n\t  if (util.startsWith(req.url, '/app/') && !util.startsWith(req.url, '/app/static')) {\n\t    if (req.app.get('mode') === 'desktop') res.locals.isDesktop = true;\n\t    res.locals.url = req.url;\n\t    var appRoutePattern = /\\/app\\/([^\\W]*)/;\n\t    var match = req.url.match(appRoutePattern);\n\t    if (match) {\n\t      var resource = match[1];\n\t      if (resourceMap[resource]) {\n\t        res.locals.sldsIconClassName = resourceMap[resource].iconClassName;\n\t        res.locals.sldsIconName = resourceMap[resource].iconName;\n\t        res.locals.sldsSprite = resourceMap[resource].sprite || 'standard-sprite';\n\t      }\n\t    }\n\t  }\n\t  next();\n\t};\n\n/***/ },\n/* 118 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * @file Apex execute anonymous\n\t * @author Joseph Ferraro <@joeferraro>\n\t */\n\t\n\t'use strict';\n\t\n\tvar express = __webpack_require__(12);\n\tvar router = express.Router();\n\tvar requestStore = __webpack_require__(13);\n\tvar logger = __webpack_require__(4);\n\t\n\t// todo: refactor errors\n\trouter.get('/new', function (req, res) {\n\t  if (!req.project) {\n\t    res.render('error', { error: 'Error: No project attached to this request.' });\n\t  } else {\n\t    var commandExecutor = req.app.get('commandExecutor');\n\t    commandExecutor.execute({\n\t      name: 'start-logging',\n\t      project: req.project,\n\t      editor: req.editor\n\t    }).then(function () {\n\t      res.render('execute_apex/index.html', {\n\t        title: 'Execute Apex'\n\t      });\n\t    }).catch(function (err) {\n\t      res.render('error', { error: 'Error: ' + err.message });\n\t    });\n\t  }\n\t});\n\t\n\trouter.post('/', function (req, res) {\n\t  var commandExecutor = req.app.get('commandExecutor');\n\t  var request = commandExecutor.execute({\n\t    project: req.project,\n\t    name: 'execute-apex',\n\t    body: req.body,\n\t    editor: req.editor\n\t  });\n\t  var requestId = requestStore.add(request);\n\t  return res.send({\n\t    status: 'pending',\n\t    id: requestId\n\t  });\n\t});\n\t\n\tmodule.exports = router;\n\n/***/ },\n/* 119 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tvar express = __webpack_require__(12);\n\tvar router = express.Router();\n\tvar inherits = __webpack_require__(2);\n\tvar logger = __webpack_require__(4);\n\tvar querystring = __webpack_require__(22);\n\tvar path = __webpack_require__(6);\n\tvar util = __webpack_require__(3);\n\t\n\trouter.get('/new', function (req, res) {\n\t  var project;\n\t  if (req.project) {\n\t    project = req.project;\n\t  } else if (req.query.pid) {\n\t    project = util.getProjectById(req.app, req.query.pid);\n\t  }\n\t\n\t  res.render('auth/index.html', {\n\t    project: project,\n\t    title: req.query.title,\n\t    callback: req.query.callback,\n\t    param1: req.query.param1,\n\t    isForced: req.query.forced === '1'\n\t  });\n\t});\n\t\n\trouter.get('/callback', function (req, res) {\n\t  res.render('auth/callback.html', {\n\t    title: 'Redirecting...'\n\t  });\n\t});\n\t\n\trouter.post('/', function (req, res) {\n\t  var orgType = req.body.orgType;\n\t  var instanceUrl = req.body.instanceUrl;\n\t  if (!instanceUrl) {\n\t    if (orgType === 'sandbox') {\n\t      instanceUrl = 'https://test.salesforce.com/';\n\t    } else {\n\t      instanceUrl = 'https://login.salesforce.com/';\n\t    }\n\t  }\n\t  var params = {\n\t    client_id: process.env.SFDC_OAUTH_CLIENT_ID || '3MVG9uudbyLbNPZP7kLgoRiWVRqiN8gFcKwdAlztVnjgbj9shSk1vMXJNmV7W0ciFbeYiaP9D4tLfBBD06l_7',\n\t    redirect_uri: process.env.SFDC_OAUTH_CALLBACK_URL || 'https://localhost:56248/sfdc/auth/callback',\n\t    response_type: process.env.SFDC_OAUTH_RESPONSE_TYPE || 'token',\n\t    display: 'popup'\n\t  };\n\t  if (req.body.username) {\n\t    params.login_hint = req.body.username;\n\t  }\n\t  var state = {};\n\t  if (req.body.callback) {\n\t    state.callback = req.body.callback;\n\t  }\n\t  if (req.body.pid) {\n\t    state.pid = req.body.pid;\n\t  }\n\t  if (req.body.param1) {\n\t    state.param1 = req.body.param1;\n\t  }\n\t  params.state = JSON.stringify(state);\n\t  var oauthUrl = instanceUrl + '/services/oauth2/authorize?' + querystring.stringify(params);\n\t  logger.debug('oauth url is: ', oauthUrl);\n\t  res.redirect(oauthUrl);\n\t});\n\t\n\trouter.post('/finish', function (req, res) {\n\t  logger.debug('finishing oauth dance: ', req.body.url);\n\t  var loginInfo = querystring.parse(req.body.url.split('#')[1]);\n\t  var state = JSON.parse(loginInfo.state);\n\t  var callbackUrl = state.callback + '?' + querystring.stringify(loginInfo);\n\t  logger.debug('redirecting to callback', callbackUrl);\n\t  res.redirect(callbackUrl);\n\t});\n\t\n\tmodule.exports = router;\n\n/***/ },\n/* 120 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * @file Controller for the deploy UI\n\t * @author Joseph Ferraro <@joeferraro>\n\t */\n\t\n\t'use strict';\n\t\n\tvar express = __webpack_require__(12);\n\tvar router = express.Router();\n\tvar logger = __webpack_require__(4);\n\tvar requestStore = __webpack_require__(13);\n\tvar Deploy = __webpack_require__(18);\n\tvar querystring = __webpack_require__(22);\n\tvar util = __webpack_require__(3);\n\t\n\trouter.get('/new', function (req, res) {\n\t  var commandExecutor = req.app.get('commandExecutor');\n\t  commandExecutor.execute({\n\t    project: req.project,\n\t    name: 'get-connections',\n\t    editor: req.editor\n\t  }).then(function (response) {\n\t    res.render('connections/index.html', {\n\t      connections: response,\n\t      title: 'Deployment Connections'\n\t    });\n\t  }).catch(function (err) {\n\t    logger.error(err);\n\t    res.render('error', { error: 'Error: ' + err.message });\n\t  });\n\t});\n\t\n\trouter.get('/', function (req, res) {\n\t  var commandExecutor = req.app.get('commandExecutor');\n\t  commandExecutor.execute({\n\t    project: req.project,\n\t    name: 'get-connections',\n\t    editor: req.editor\n\t  }).then(function (response) {\n\t    res.send(response);\n\t  }).catch(function (err) {\n\t    res.status(500).send({ error: err.message });\n\t  });\n\t});\n\t\n\trouter.post('/', function (req, res) {\n\t  var commandExecutor = req.app.get('commandExecutor');\n\t  commandExecutor.execute({\n\t    project: req.project,\n\t    name: 'new-connection',\n\t    body: req.body,\n\t    editor: req.editor\n\t  }).then(function (response) {\n\t    res.send(response);\n\t  }).catch(function (err) {\n\t    res.status(500).send({ error: err.message });\n\t  });\n\t});\n\t\n\trouter.post('/auth', function (req, res) {\n\t  var params = {\n\t    title: 'New Deployment Connection',\n\t    callback: '/app/connections/auth/finish',\n\t    param1: req.body.name,\n\t    pid: req.body.pid\n\t  };\n\t  res.redirect('/app/auth/new?' + querystring.stringify(params));\n\t});\n\t\n\trouter.get('/auth/finish', function (req, res) {\n\t  var commandExecutor = req.app.get('commandExecutor');\n\t  logger.debug('finishing auth in org connections: ', req.query);\n\t  var state = JSON.parse(req.query.state);\n\t  logger.debug('state!', state);\n\t  var pid = state.pid;\n\t  var project = util.getProjectById(req.app, pid);\n\t  commandExecutor.execute({\n\t    project: project,\n\t    name: 'new-connection',\n\t    body: {\n\t      name: state.param1,\n\t      accessToken: req.query.access_token,\n\t      instanceUrl: req.query.instance_url,\n\t      refreshToken: req.query.refresh_token\n\t    }\n\t  }).then(function (response) {\n\t    res.redirect('/app/connections/new?pid=' + pid);\n\t  }).catch(function (err) {\n\t    res.status(500).send({ error: err.message });\n\t  });\n\t});\n\t\n\trouter.delete('/:id', function (req, res) {\n\t  var commandExecutor = req.app.get('commandExecutor');\n\t  commandExecutor.execute({\n\t    project: req.project,\n\t    name: 'delete-connection',\n\t    body: req.body,\n\t    editor: req.editor\n\t  }).then(function (response) {\n\t    res.send(response);\n\t  }).catch(function (err) {\n\t    res.status(500).send({ error: err.message });\n\t  });\n\t});\n\t\n\tmodule.exports = router;\n\n/***/ },\n/* 121 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * @file Controller for the deploy UI\n\t * @author Joseph Ferraro <@joeferraro>\n\t */\n\t\n\t'use strict';\n\t\n\tvar express = __webpack_require__(12);\n\tvar router = express.Router();\n\tvar requestStore = __webpack_require__(13);\n\tvar logger = __webpack_require__(4);\n\tvar Deploy = __webpack_require__(18);\n\tvar querystring = __webpack_require__(22);\n\t\n\trouter.get('/new', function (req, res) {\n\t  if (!req.project) {\n\t    res.render('error', { error: 'Error: No project attached to this request.' });\n\t  } else {\n\t    var commandExecutor = req.app.get('commandExecutor');\n\t    var deployDelegate = new Deploy({\n\t      project: req.project\n\t    });\n\t    commandExecutor.execute({\n\t      project: req.project,\n\t      name: 'get-connections',\n\t      editor: req.editor\n\t    }).then(function (response) {\n\t      res.render('deploy/index.html', {\n\t        connections: response,\n\t        namedDeployments: deployDelegate.getNamedDeployments(),\n\t        hasIndexedMetadata: req.project.hasIndexedMetadata(),\n\t        title: 'Deploy'\n\t      });\n\t    }).catch(function (err) {\n\t      logger.error(err);\n\t      res.status(500).send({ error: err.message });\n\t    });\n\t  }\n\t});\n\t\n\trouter.post('/', function (req, res) {\n\t  var commandExecutor = req.app.get('commandExecutor');\n\t  var request = commandExecutor.execute({\n\t    project: req.project,\n\t    name: 'deploy',\n\t    body: req.body,\n\t    editor: req.editor\n\t  });\n\t  var requestId = requestStore.add(request);\n\t  return res.send({\n\t    status: 'pending',\n\t    id: requestId\n\t  });\n\t});\n\t\n\tmodule.exports = router;\n\n/***/ },\n/* 122 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tvar express = __webpack_require__(12);\n\tvar router = express.Router();\n\tvar logger = __webpack_require__(4);\n\tvar requestStore = __webpack_require__(13);\n\t\n\t// required for cors\n\trouter.options('/', function (req, res) {\n\t  return res.sendStatus(200);\n\t});\n\t\n\trouter.post('/', _execute);\n\trouter.get('/', _execute);\n\t\n\trouter.get('/:id', function (req, res) {\n\t  var requestId;\n\t  var requestStore = req.app.get('requestStore');\n\t  requestId = req.params.id;\n\t  if (requestStore.isRequestComplete(requestId)) {\n\t    res.send(requestStore.getResultForId(requestId));\n\t  } else {\n\t    return res.send({\n\t      status: 'pending',\n\t      id: requestId\n\t    });\n\t  }\n\t});\n\t\n\tfunction _execute(req, res) {\n\t  var commandExecutor = req.app.get('commandExecutor');\n\t  var command = req.body.command || req.query.command;\n\t  var request = commandExecutor.execute({\n\t    project: req.project,\n\t    name: command,\n\t    body: req.body,\n\t    editor: req.editor,\n\t    openWindowFn: req.app.get('openWindowFn')\n\t  });\n\t  if (req.query.async === '1') {\n\t    var requestStore = req.app.get('requestStore');\n\t    var requestId = requestStore.add(request);\n\t    return res.send({\n\t      'status': 'pending',\n\t      'id': requestId\n\t    });\n\t  } else {\n\t    request.then(function (response) {\n\t      return res.send(response);\n\t    }).catch(function (err) {\n\t      return res.send(err);\n\t    });\n\t  }\n\t}\n\t\n\tmodule.exports = router;\n\n/***/ },\n/* 123 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tvar express = __webpack_require__(12);\n\tvar router = express.Router();\n\t\n\trouter.get('/', function (req, res) {\n\t  if (req.project) {\n\t    res.redirect('/app/project/' + req.project.settings.id + '?pid=' + req.project.settings.id); //todo: deal with param vs query goofiness\n\t  } else {\n\t    res.render('home/index.html', {\n\t      title: 'MavensMate Home'\n\t    });\n\t  }\n\t});\n\t\n\tmodule.exports = router;\n\n/***/ },\n/* 124 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar express = __webpack_require__(12);\n\tvar router = express.Router();\n\t\n\t// important: this route is configured in the connected app,\n\t// so we have to handle that URL here and redirect to a proper route\n\trouter.get('/sfdc/auth/callback', function (req, res) {\n\t  res.redirect('/app/auth/callback');\n\t});\n\t\n\trouter.get('/', function (req, res) {\n\t  res.redirect('/app/home');\n\t});\n\t\n\t// rpc route\n\trouter.use('/execute', __webpack_require__(122));\n\t\n\t// deprecated route, used to support atom/sublime plugins that have not yet updated mavensmate desktop\n\trouter.use('/status', __webpack_require__(130));\n\t\n\t// todo: add middleware that throws 500 if no project context sent for project-specific routes\n\trouter.use('/app/auth', __webpack_require__(119));\n\trouter.use('/app/apex', __webpack_require__(118));\n\trouter.use('/app/connections', __webpack_require__(120));\n\trouter.use('/app/deploy', __webpack_require__(121));\n\trouter.use('/app/home', __webpack_require__(123));\n\trouter.use('/app/lightning', __webpack_require__(125));\n\trouter.use('/app/logs', __webpack_require__(126));\n\trouter.use('/app/metadata', __webpack_require__(127));\n\trouter.use('/app/project', __webpack_require__(128));\n\trouter.use('/app/settings', __webpack_require__(129));\n\trouter.use('/app/test', __webpack_require__(131));\n\t\n\t// if we have an unhandled route, we throw a 404 if it's ajax, otherwise we return our 404.html\n\trouter.get('*', function (req, res) {\n\t  var isAjaxRequest = req.xhr;\n\t  if (isAjaxRequest) {\n\t    res.send('URL not found: ' + req.url, 404);\n\t  } else {\n\t    res.render('404.html', {\n\t      title: '404: Page not found'\n\t    });\n\t  }\n\t});\n\t\n\tmodule.exports = router;\n\n/***/ },\n/* 125 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tvar express = __webpack_require__(12);\n\tvar router = express.Router();\n\tvar requestStore = __webpack_require__(13);\n\t\n\trouter.get('/app/new', function (req, res) {\n\t  if (!req.project) {\n\t    res.render('error', { error: 'Error: No project attached to this request.' });\n\t  } else {\n\t    res.render('lightning/new.html', {\n\t      title: 'Create Lightning App',\n\t      lightningType: 'app'\n\t    });\n\t  }\n\t});\n\t\n\trouter.get('/component/new', function (req, res) {\n\t  if (!req.project) {\n\t    res.render('error', { error: 'Error: No project attached to this request.' });\n\t  } else {\n\t    res.render('lightning/new.html', {\n\t      title: 'Create Lightning Component',\n\t      lightningType: 'component'\n\t    });\n\t  }\n\t});\n\t\n\trouter.get('/event/new', function (req, res) {\n\t  if (!req.project) {\n\t    res.render('error', { error: 'Error: No project attached to this request.' });\n\t  } else {\n\t    res.render('lightning/new.html', {\n\t      title: 'Create Lightning Event',\n\t      lightningType: 'event'\n\t    });\n\t  }\n\t});\n\t\n\trouter.get('/interface/new', function (req, res) {\n\t  if (!req.project) {\n\t    res.render('error', { error: 'Error: No project attached to this request.' });\n\t  } else {\n\t    res.render('lightning/new.html', {\n\t      title: 'Create Lightning Interface',\n\t      lightningType: 'interface'\n\t    });\n\t  }\n\t});\n\t\n\trouter.post('/app', function (req, res) {\n\t  var commandExecutor = req.app.get('commandExecutor');\n\t  var request = commandExecutor.execute({\n\t    project: req.project,\n\t    name: 'new-lightning-app',\n\t    body: req.body,\n\t    editor: req.editor\n\t  });\n\t  var requestId = requestStore.add(request);\n\t  return res.send({\n\t    status: 'pending',\n\t    id: requestId\n\t  });\n\t});\n\t\n\trouter.post('/component', function (req, res) {\n\t  var commandExecutor = req.app.get('commandExecutor');\n\t  var request = commandExecutor.execute({\n\t    project: req.project,\n\t    name: 'new-lightning-component',\n\t    body: req.body,\n\t    editor: req.editor\n\t  });\n\t  var requestId = requestStore.add(request);\n\t  return res.send({\n\t    status: 'pending',\n\t    id: requestId\n\t  });\n\t});\n\t\n\trouter.post('/event', function (req, res) {\n\t  var commandExecutor = req.app.get('commandExecutor');\n\t  var request = commandExecutor.execute({\n\t    project: req.project,\n\t    name: 'new-lightning-event',\n\t    body: req.body,\n\t    editor: req.editor\n\t  });\n\t  var requestId = requestStore.add(request);\n\t  return res.send({\n\t    status: 'pending',\n\t    id: requestId\n\t  });\n\t});\n\t\n\trouter.post('/interface', function (req, res) {\n\t  var commandExecutor = req.app.get('commandExecutor');\n\t  var request = commandExecutor.execute({\n\t    project: req.project,\n\t    name: 'new-lightning-interface',\n\t    body: req.body,\n\t    editor: req.editor\n\t  });\n\t  var requestId = requestStore.add(request);\n\t  return res.send({\n\t    status: 'pending',\n\t    id: requestId\n\t  });\n\t});\n\t\n\tmodule.exports = router;\n\n/***/ },\n/* 126 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * @file Controller for the logs viewer\n\t * @author Joseph Ferraro <@joeferraro>\n\t */\n\t\n\t'use strict';\n\t\n\tvar express = __webpack_require__(12);\n\tvar router = express.Router();\n\tvar requestStore = __webpack_require__(13);\n\tvar path = __webpack_require__(6);\n\tvar logger = __webpack_require__(4);\n\t\n\trouter.get('/', function (req, res) {\n\t  var io = req.app.get('io');\n\t  if (!req.project) {\n\t    res.render('error', { error: 'Error: No project attached to this request.' });\n\t  } else {\n\t    io.on('connection', function (socket) {\n\t      req.project.on('new-log', function (filePath) {\n\t        socket.emit('new-log', {\n\t          location: filePath,\n\t          locationBasename: path.basename(filePath)\n\t        });\n\t      });\n\t    });\n\t    req.project.logService.getLogs().then(function (logs) {\n\t      res.render('logs/index.html', {\n\t        title: 'Debug Logs',\n\t        logs: logs\n\t      });\n\t    });\n\t  }\n\t});\n\t\n\trouter.get('/:location', function (req, res) {\n\t  var logLocation = req.params.location;\n\t  req.project.logService.getLog(path.join(req.project.path, 'debug', 'logs', logLocation)).then(function (logLines) {\n\t    var resultHtml = req.app.get('swig').renderFile('views/logs/log.html', {\n\t      lines: logLines\n\t    });\n\t    res.status(200).send(resultHtml);\n\t  }).catch(function (err) {\n\t    res.status(500).send('Error: ' + err.message);\n\t  });\n\t});\n\t\n\trouter.post('/:location', function (req, res) {\n\t  var logLocation = req.params.location;\n\t  var keyword = req.query.keyword;\n\t  req.project.logService.filter(path.join(req.project.path, 'debug', 'logs', logLocation), keyword).then(function (matchingLines) {\n\t    var resultHtml = req.app.get('swig').renderFile('views/logs/log.html', {\n\t      lines: matchingLines\n\t    });\n\t    res.status(200).send(resultHtml);\n\t  }).catch(function (err) {\n\t    res.status(500).send('Error: ' + err.message);\n\t  });\n\t});\n\t\n\tmodule.exports = router;\n\n/***/ },\n/* 127 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * @file Controller for the metadata creation UIs\n\t * @author Joseph Ferraro <@joeferraro>\n\t */\n\t\n\t'use strict';\n\t\n\tvar express = __webpack_require__(12);\n\tvar router = express.Router();\n\tvar Promise = __webpack_require__(1);\n\tvar requestStore = __webpack_require__(13);\n\tvar logger = __webpack_require__(4);\n\tvar TemplateService = __webpack_require__(95);\n\t\n\trouter.get('/:type/new', function (req, res) {\n\t  if (!req.project) {\n\t    res.render('error', { error: 'Error: No project attached to this request.' });\n\t  } else {\n\t    _getTemplates(req.params.type).then(function (templates) {\n\t      logger.debug(templates);\n\t      var locals = {\n\t        templates: templates,\n\t        metadataType: req.params.type,\n\t        title: 'New ' + req.params.type\n\t      };\n\t      res.render('metadata/new.html', locals);\n\t    }).catch(function (e) {\n\t      logger.error(e);\n\t      res.render('metadata/new.html', {\n\t        title: 'New Metadata'\n\t      });\n\t    }).done();\n\t  }\n\t});\n\t\n\trouter.get('/:type/templates/:fileName', function (req, res) {\n\t  var templateService = new TemplateService();\n\t  templateService.getTemplateBody(req.params.type, req.params.fileName).then(function (body) {\n\t    res.send(body);\n\t  }).catch(function (e) {\n\t    res.status(500).send('Error: ' + e.message);\n\t  }).done();\n\t});\n\t\n\trouter.post('/', function (req, res) {\n\t  var commandExecutor = req.app.get('commandExecutor');\n\t  var request = commandExecutor.execute({\n\t    project: req.project,\n\t    name: 'new-metadata',\n\t    body: req.body,\n\t    editor: req.editor\n\t  });\n\t  var requestId = requestStore.add(request);\n\t  return res.send({\n\t    status: 'pending',\n\t    id: requestId\n\t  });\n\t});\n\t\n\tfunction _getTemplates(typeXmlName) {\n\t  return new Promise(function (resolve, reject) {\n\t    var templateService = new TemplateService();\n\t    templateService.getTemplatesForType(typeXmlName).then(function (templates) {\n\t      resolve(templates);\n\t    }).catch(function (e) {\n\t      reject(new Error('Could not retrieve templates: ' + e.message));\n\t    }).done();\n\t  });\n\t}\n\t\n\tmodule.exports = router;\n\n/***/ },\n/* 128 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * @file Controller for the various project UIs (new, edit)\n\t * @author Joseph Ferraro <@joeferraro>\n\t */\n\t\n\t'use strict';\n\t\n\tvar express = __webpack_require__(12);\n\tvar router = express.Router();\n\tvar logger = __webpack_require__(4);\n\tvar querystring = __webpack_require__(22);\n\tvar requestStore = __webpack_require__(13);\n\tvar util = __webpack_require__(3);\n\tvar fs = __webpack_require__(10);\n\t\n\t// create a new project\n\trouter.get('/new', function (req, res) {\n\t  var params = {\n\t    title: 'New Project',\n\t    callback: '/app/project/auth/finish',\n\t    new: '1'\n\t  };\n\t  res.redirect('/app/auth/new?' + querystring.stringify(params));\n\t});\n\t\n\t// create a new project from existing directory\n\trouter.get('/existing/new', function (req, res) {\n\t  if (req.query.origin) {\n\t    var params = {\n\t      title: 'Create MavensMate Project (' + req.query.origin + ')',\n\t      callback: '/app/project/auth/finish',\n\t      param1: req.query.origin\n\t    };\n\t    res.redirect('/app/auth/new?' + querystring.stringify(params));\n\t  } else {\n\t    res.status(500).send('Error: You must provide an existing path via the \"origin\" query param');\n\t  }\n\t});\n\t\n\trouter.get('/auth/finish', function (req, res) {\n\t  var commandExecutor = req.app.get('commandExecutor');\n\t  logger.debug('finishing auth in project: ', req.query);\n\t  var state = JSON.parse(req.query.state);\n\t  logger.debug('state!', state);\n\t  var pid = state.pid;\n\t  if (pid) {\n\t    // updating an existing project\n\t    var project = util.getProjectById(req.app, pid);\n\t    project.updateCredentials({\n\t      accessToken: req.query.access_token,\n\t      instanceUrl: req.query.instance_url,\n\t      refreshToken: req.query.refresh_token\n\t    }).then(function (response) {\n\t      res.redirect('/app/project/' + pid + '/edit?pid=' + pid + '&update=1');\n\t    }).catch(function (err) {\n\t      logger.error(err);\n\t      res.send(500);\n\t    });\n\t  } else {\n\t    var title = state.param1 && fs.existsSync(state.param1) ? 'Create MavensMate Project (' + state.param1 + ')' : 'New Project';\n\t    // new project\n\t    commandExecutor.execute({\n\t      name: 'session',\n\t      body: {\n\t        accessToken: req.query.access_token,\n\t        instanceUrl: req.query.instance_url,\n\t        refreshToken: req.query.refresh_token\n\t      }\n\t    }).then(function (response) {\n\t      res.render('project/new.html', {\n\t        title: title,\n\t        accessToken: req.query.access_token,\n\t        instanceUrl: req.query.instance_url,\n\t        refreshToken: req.query.refresh_token,\n\t        session: response,\n\t        origin: state.param1\n\t      });\n\t    }).catch(function (err) {\n\t      logger.error('Could not initiate session', err);\n\t    });\n\t  }\n\t});\n\t\n\t// creates a new project\n\trouter.post('/', function (req, res) {\n\t  logger.debug('received request to create new project: ');\n\t  logger.debug(req.body);\n\t  var commandExecutor = req.app.get('commandExecutor');\n\t  var request = commandExecutor.execute({\n\t    name: 'new-project',\n\t    body: req.body,\n\t    editor: req.editor\n\t  });\n\t  var requestId = requestStore.add(request);\n\t  return res.send({\n\t    status: 'pending',\n\t    id: requestId\n\t  });\n\t});\n\t\n\t// creates a new project from an existing directory\n\trouter.post('/existing', function (req, res) {\n\t  logger.debug('received request to create new project frome existing directory: ');\n\t  logger.debug(req.body);\n\t  var commandExecutor = req.app.get('commandExecutor');\n\t  var request = commandExecutor.execute({\n\t    name: 'new-project-from-existing-directory',\n\t    body: req.body,\n\t    editor: req.editor\n\t  });\n\t  var requestId = requestStore.add(request);\n\t  return res.send({\n\t    status: 'pending',\n\t    id: requestId\n\t  });\n\t});\n\t\n\t// project landing page\n\trouter.get('/:id', function (req, res) {\n\t  res.render('project/home.html', {\n\t    title: 'Project Launchpad',\n\t    isNewProject: req.query.new === '1'\n\t  });\n\t});\n\t\n\t// usually called when project credentials are invalid\n\trouter.get('/:id/auth', function (req, res) {\n\t  var params = {\n\t    title: 'Update Project Credentials',\n\t    callback: '/app/project/auth/finish',\n\t    pid: req.project.settings.id,\n\t    forced: req.project.requiresAuthentication ? '1' : '0'\n\t  };\n\t  res.redirect('/app/auth/new?' + querystring.stringify(params));\n\t});\n\t\n\t// edit project UI\n\trouter.get('/:id/edit', function (req, res) {\n\t  if (!req.project) {\n\t    res.render('error', { error: 'Error: No project attached to this request.' });\n\t  } else {\n\t    res.render('project/edit.html', {\n\t      title: 'Edit Project',\n\t      isUpdate: req.query.update === '1'\n\t    });\n\t  }\n\t});\n\t\n\t// update an existing project\n\trouter.post('/:id', function (req, res) {\n\t  var commandExecutor = req.app.get('commandExecutor');\n\t  var request = commandExecutor.execute({\n\t    project: req.project,\n\t    name: 'edit-project',\n\t    body: req.body,\n\t    editor: req.editor\n\t  });\n\t  var requestId = requestStore.add(request);\n\t  return res.send({\n\t    status: 'pending',\n\t    id: requestId\n\t  });\n\t});\n\t\n\t// updates the project subscription\n\trouter.post('/:id/subscription', function (req, res) {\n\t  var commandExecutor = req.app.get('commandExecutor');\n\t  commandExecutor.execute({\n\t    project: req.project,\n\t    name: 'update-subscription',\n\t    body: req.body,\n\t    editor: req.editor\n\t  }).then(function (response) {\n\t    res.send(response);\n\t  }).catch(function (err) {\n\t    res.status(500).send({ error: err.message });\n\t  });\n\t});\n\t\n\t// indexes metadata\n\trouter.post('/:id/index', function (req, res) {\n\t  var commandExecutor = req.app.get('commandExecutor');\n\t  var request = commandExecutor.execute({\n\t    project: req.project,\n\t    name: 'index-metadata',\n\t    body: req.body,\n\t    editor: req.editor\n\t  });\n\t  var requestId = requestStore.add(request);\n\t  return res.send({\n\t    status: 'pending',\n\t    id: requestId\n\t  });\n\t});\n\t\n\t// gets metadata index for a project\n\trouter.get('/:id/index', function (req, res) {\n\t  logger.warn(req.query);\n\t  var commandName = req.query && req.query.pkg && req.query.pkg !== 'package.xml' ? 'get-metadata-index-for-package' : 'get-metadata-index';\n\t  var commandExecutor = req.app.get('commandExecutor');\n\t  commandExecutor.execute({\n\t    project: req.project,\n\t    name: commandName,\n\t    body: {\n\t      packageXmlPath: req.query.pkg\n\t    },\n\t    editor: req.editor\n\t  }).then(function (response) {\n\t    res.send(response);\n\t  }).catch(function (err) {\n\t    res.send(err);\n\t  });\n\t});\n\t\n\tmodule.exports = router;\n\n/***/ },\n/* 129 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tvar express = __webpack_require__(12);\n\tvar router = express.Router();\n\tvar fs = __webpack_require__(31);\n\tvar util = __webpack_require__(3);\n\tvar path = __webpack_require__(6);\n\tvar logger = __webpack_require__(4);\n\tvar config = __webpack_require__(8);\n\tvar defaultSettings = __webpack_require__(36);\n\t\n\trouter.get('/', function (req, res) {\n\t  var userSettings;\n\t  try {\n\t    userSettings = config.load();\n\t  } catch (e) {\n\t    logger.error('Could not load user settings', e);\n\t    userSettings = defaultSettings;\n\t  }\n\t  var locals = {\n\t    userSettings: userSettings,\n\t    defaultSettings: defaultSettings,\n\t    title: 'Global Settings'\n\t  };\n\t  res.render('settings/index.html', locals);\n\t});\n\t\n\trouter.post('/', function (req, res) {\n\t  try {\n\t    var updatedSetting = defaultSettings[req.body.settingKey];\n\t    var settingValue = req.body.settingValue;\n\t    if (updatedSetting.type === 'integer') {\n\t      settingValue = parseInt(settingValue); // parse string from the dom to int for storage\n\t    } else if (updatedSetting.type === 'object' || updatedSetting.type === 'array') {\n\t      settingValue = JSON.parse(settingValue);\n\t    } else if (updatedSetting.type === 'string' && settingValue[0] === '\"' && settingValue[settingValue.length - 1] === '\"') {\n\t      return res.status(500).send({ error: 'Failed to update ' + req.body.settingKey + ': Invalid string setting value. You should not wrap your string setting value in quotes.' });\n\t    }\n\t    config.set(req.body.settingKey, settingValue);\n\t    config.save(function (err) {\n\t      if (err) {\n\t        res.status(500).send({ error: 'Failed to update ' + req.body.settingKey + ': ' + err.message });\n\t      } else {\n\t        res.send(JSON.stringify({ success: true }));\n\t      }\n\t    });\n\t  } catch (err) {\n\t    res.status(500).send({ error: 'Failed to update ' + req.body.settingKey + ': ' + err.message });\n\t  }\n\t});\n\t\n\tmodule.exports = router;\n\n/***/ },\n/* 130 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tvar express = __webpack_require__(12);\n\tvar router = express.Router();\n\tvar logger = __webpack_require__(4);\n\tvar requestStore = __webpack_require__(13);\n\t\n\t// required for cors\n\trouter.options('/', function (req, res) {\n\t  return res.sendStatus(200);\n\t});\n\t\n\trouter.get('/', function (req, res) {\n\t  var requestId;\n\t  var requestStore = req.app.get('requestStore');\n\t  requestId = req.query.id;\n\t  if (requestStore.isRequestComplete(requestId)) {\n\t    res.send(requestStore.getResultForId(requestId));\n\t  } else {\n\t    return res.send({\n\t      status: 'pending',\n\t      id: requestId\n\t    });\n\t  }\n\t});\n\t\n\tmodule.exports = router;\n\n/***/ },\n/* 131 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * @file Controller for the apex test runner UI\n\t * @author Joseph Ferraro <@joeferraro>\n\t */\n\t\n\t'use strict';\n\t\n\tvar express = __webpack_require__(12);\n\tvar router = express.Router();\n\tvar fs = __webpack_require__(31);\n\tvar util = __webpack_require__(3);\n\tvar path = __webpack_require__(6);\n\tvar requestStore = __webpack_require__(13);\n\tvar logger = __webpack_require__(4);\n\t\n\trouter.get('/new', function (req, res) {\n\t  if (!req.project) {\n\t    res.render('error', { error: 'Error: No project attached to this request.' });\n\t  } else {\n\t    res.render('unit_test/index.html', {\n\t      testClasses: _getTestClasses(req.project),\n\t      title: 'Unit Test',\n\t      className: req.query.className\n\t    });\n\t  }\n\t});\n\t\n\trouter.post('/', function (req, res) {\n\t  var commandExecutor = req.app.get('commandExecutor');\n\t  var request = commandExecutor.execute({\n\t    project: req.project,\n\t    name: 'run-tests',\n\t    body: req.body,\n\t    editor: req.editor\n\t  });\n\t  var requestId = requestStore.add(request);\n\t  return res.send({\n\t    status: 'pending',\n\t    id: requestId\n\t  });\n\t});\n\t\n\trouter.post('/coverage', function (req, res) {\n\t  var swig = req.app.get('swig');\n\t  var locals = {\n\t    apexClassOrTriggerName: req.body.apexClassOrTriggerName,\n\t    type: req.body.type,\n\t    uncoveredLines: req.body.uncoveredLines,\n\t    project: req.project\n\t  };\n\t  var resultHtml = swig.renderFile('views/unit_test/cov.html', locals);\n\t  return res.send({\n\t    result: resultHtml\n\t  });\n\t});\n\t\n\t/**\n\t * Iterates project's classes directory looking for unit test classes\n\t * @return {Array}- Array of class names\n\t */\n\tfunction _getTestClasses(project) {\n\t  var self = this;\n\t  var classes = [];\n\t  var classPath = path.join(project.path, 'src', 'classes');\n\t\n\t  var isTestRegEx = new RegExp(/@istest/i);\n\t  var testMethodRegex = new RegExp(/testmethod/i);\n\t\n\t  if (fs.existsSync(classPath)) {\n\t    fs.readdirSync(classPath).forEach(function (filename) {\n\t      var fileNameParts = path.basename(filename).split('.');\n\t      var fn = fileNameParts[0];\n\t      var fileBody = util.getFileBody(path.join(classPath, filename));\n\t      if (isTestRegEx.test(fileBody) || testMethodRegex.test(fileBody)) {\n\t        classes.push(fn);\n\t      }\n\t    });\n\t  }\n\t  return classes;\n\t}\n\t\n\tmodule.exports = router;\n\n/***/ },\n/* 132 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar map = {\n\t\t\"./apex-script/new-apex-script\": 38,\n\t\t\"./apex-script/new-apex-script.js\": 38,\n\t\t\"./apex-script/run-apex-script\": 39,\n\t\t\"./apex-script/run-apex-script.js\": 39,\n\t\t\"./debug/delete-checkpoint\": 40,\n\t\t\"./debug/delete-checkpoint.js\": 40,\n\t\t\"./debug/download-log\": 41,\n\t\t\"./debug/download-log.js\": 41,\n\t\t\"./debug/execute-apex\": 42,\n\t\t\"./debug/execute-apex.js\": 42,\n\t\t\"./debug/flush-logs\": 43,\n\t\t\"./debug/flush-logs.js\": 43,\n\t\t\"./debug/list-checkpoints\": 44,\n\t\t\"./debug/list-checkpoints.js\": 44,\n\t\t\"./debug/new-checkpoint\": 45,\n\t\t\"./debug/new-checkpoint.js\": 45,\n\t\t\"./debug/start-logging\": 46,\n\t\t\"./debug/start-logging.js\": 46,\n\t\t\"./debug/stop-logging\": 47,\n\t\t\"./debug/stop-logging.js\": 47,\n\t\t\"./deploy/delete-connection\": 48,\n\t\t\"./deploy/delete-connection.js\": 48,\n\t\t\"./deploy/deploy\": 49,\n\t\t\"./deploy/deploy.js\": 49,\n\t\t\"./deploy/get-connections\": 50,\n\t\t\"./deploy/get-connections.js\": 50,\n\t\t\"./deploy/new-connection\": 51,\n\t\t\"./deploy/new-connection.js\": 51,\n\t\t\"./deploy/update-connection\": 52,\n\t\t\"./deploy/update-connection.js\": 52,\n\t\t\"./index\": 29,\n\t\t\"./index.js\": 29,\n\t\t\"./lightning/new-lightning-app\": 53,\n\t\t\"./lightning/new-lightning-app.js\": 53,\n\t\t\"./lightning/new-lightning-component\": 54,\n\t\t\"./lightning/new-lightning-component.js\": 54,\n\t\t\"./lightning/new-lightning-event\": 55,\n\t\t\"./lightning/new-lightning-event.js\": 55,\n\t\t\"./lightning/new-lightning-interface\": 56,\n\t\t\"./lightning/new-lightning-interface.js\": 56,\n\t\t\"./metadata/compile-metadata\": 57,\n\t\t\"./metadata/compile-metadata.js\": 57,\n\t\t\"./metadata/delete-metadata\": 58,\n\t\t\"./metadata/delete-metadata.js\": 58,\n\t\t\"./metadata/new-metadata\": 59,\n\t\t\"./metadata/new-metadata.js\": 59,\n\t\t\"./metadata/open-metadata\": 60,\n\t\t\"./metadata/open-metadata.js\": 60,\n\t\t\"./metadata/refresh-metadata\": 61,\n\t\t\"./metadata/refresh-metadata.js\": 61,\n\t\t\"./metadata/sync-with-server\": 62,\n\t\t\"./metadata/sync-with-server.js\": 62,\n\t\t\"./misc/execute-soql\": 63,\n\t\t\"./misc/execute-soql.js\": 63,\n\t\t\"./misc/get-setting\": 64,\n\t\t\"./misc/get-setting.js\": 64,\n\t\t\"./misc/index-apex\": 66,\n\t\t\"./misc/index-apex-class\": 65,\n\t\t\"./misc/index-apex-class.js\": 65,\n\t\t\"./misc/index-apex.js\": 66,\n\t\t\"./misc/list-metadata\": 67,\n\t\t\"./misc/list-metadata.js\": 67,\n\t\t\"./misc/open-settings\": 68,\n\t\t\"./misc/open-settings.js\": 68,\n\t\t\"./misc/open-sfdc\": 69,\n\t\t\"./misc/open-sfdc.js\": 69,\n\t\t\"./misc/open-ui\": 70,\n\t\t\"./misc/open-ui.js\": 70,\n\t\t\"./misc/session\": 71,\n\t\t\"./misc/session.js\": 71,\n\t\t\"./project/clean-project\": 72,\n\t\t\"./project/clean-project.js\": 72,\n\t\t\"./project/compile-project\": 73,\n\t\t\"./project/compile-project.js\": 73,\n\t\t\"./project/edit-project\": 74,\n\t\t\"./project/edit-project.js\": 74,\n\t\t\"./project/get-metadata-index\": 76,\n\t\t\"./project/get-metadata-index-for-package\": 75,\n\t\t\"./project/get-metadata-index-for-package.js\": 75,\n\t\t\"./project/get-metadata-index.js\": 76,\n\t\t\"./project/index-metadata\": 77,\n\t\t\"./project/index-metadata.js\": 77,\n\t\t\"./project/list-projects\": 78,\n\t\t\"./project/list-projects.js\": 78,\n\t\t\"./project/new-project\": 80,\n\t\t\"./project/new-project-from-existing-directory\": 79,\n\t\t\"./project/new-project-from-existing-directory.js\": 79,\n\t\t\"./project/new-project.js\": 80,\n\t\t\"./project/oauth-project\": 81,\n\t\t\"./project/oauth-project.js\": 81,\n\t\t\"./project/open-project\": 82,\n\t\t\"./project/open-project.js\": 82,\n\t\t\"./project/search-metadata-index\": 83,\n\t\t\"./project/search-metadata-index.js\": 83,\n\t\t\"./project/update-creds\": 84,\n\t\t\"./project/update-creds.js\": 84,\n\t\t\"./project/update-subscription\": 85,\n\t\t\"./project/update-subscription.js\": 85,\n\t\t\"./resource-bundle/deploy-resource-bundle\": 86,\n\t\t\"./resource-bundle/deploy-resource-bundle.js\": 86,\n\t\t\"./resource-bundle/new-resource-bundle\": 87,\n\t\t\"./resource-bundle/new-resource-bundle.js\": 87,\n\t\t\"./unit-test/get-coverage\": 88,\n\t\t\"./unit-test/get-coverage.js\": 88,\n\t\t\"./unit-test/run-test-method\": 89,\n\t\t\"./unit-test/run-test-method.js\": 89,\n\t\t\"./unit-test/run-tests\": 90,\n\t\t\"./unit-test/run-tests.js\": 90\n\t};\n\tfunction webpackContext(req) {\n\t\treturn __webpack_require__(webpackContextResolve(req));\n\t};\n\tfunction webpackContextResolve(req) {\n\t\treturn map[req] || (function() { throw new Error(\"Cannot find module '\" + req + \"'.\") }());\n\t};\n\twebpackContext.keys = function webpackContextKeys() {\n\t\treturn Object.keys(map);\n\t};\n\twebpackContext.resolve = webpackContextResolve;\n\tmodule.exports = webpackContext;\n\twebpackContext.id = 132;\n\n\n/***/ },\n/* 133 */\n/***/ function(module, exports) {\n\n\tmodule.exports = require(\"archiver\");\n\n/***/ },\n/* 134 */\n/***/ function(module, exports) {\n\n\tmodule.exports = require(\"auto-launch\");\n\n/***/ },\n/* 135 */\n/***/ function(module, exports) {\n\n\tmodule.exports = require(\"body-parser\");\n\n/***/ },\n/* 136 */\n/***/ function(module, exports) {\n\n\tmodule.exports = require(\"electron-squirrel-startup\");\n\n/***/ },\n/* 137 */\n/***/ function(module, exports) {\n\n\tmodule.exports = require(\"fstream\");\n\n/***/ },\n/* 138 */\n/***/ function(module, exports) {\n\n\tmodule.exports = require(\"jsforce\");\n\n/***/ },\n/* 139 */\n/***/ function(module, exports) {\n\n\tmodule.exports = require(\"keytar\");\n\n/***/ },\n/* 140 */\n/***/ function(module, exports) {\n\n\tmodule.exports = require(\"nconf\");\n\n/***/ },\n/* 141 */\n/***/ function(module, exports) {\n\n\tmodule.exports = require(\"nslog\");\n\n/***/ },\n/* 142 */\n/***/ function(module, exports) {\n\n\tmodule.exports = require(\"open\");\n\n/***/ },\n/* 143 */\n/***/ function(module, exports) {\n\n\tmodule.exports = require(\"sax\");\n\n/***/ },\n/* 144 */\n/***/ function(module, exports) {\n\n\tmodule.exports = require(\"socket.io\");\n\n/***/ },\n/* 145 */\n/***/ function(module, exports) {\n\n\tmodule.exports = require(\"stream\");\n\n/***/ },\n/* 146 */\n/***/ function(module, exports) {\n\n\tmodule.exports = require(\"strip-json-comments\");\n\n/***/ },\n/* 147 */\n/***/ function(module, exports) {\n\n\tmodule.exports = require(\"xml2js\");\n\n/***/ },\n/* 148 */\n/***/ function(module, exports) {\n\n\tmodule.exports = require(\"xmldoc\");\n\n/***/ }\n/******/ ]);\n\n\n/** WEBPACK FOOTER **\n ** app.bundle.js\n **/"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"./app\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n/** WEBPACK FOOTER **\n ** webpack/bootstrap b9f821395b6cac74b895\n **/","/* eslint strict: 0 */\n'use strict';\n\nvar electron        = require('electron');\nvar app             = electron.app;\n\nif (require('electron-squirrel-startup')) app.quit();\n\nvar Tray            = electron.Tray;\nvar Promise         = require('bluebird');\nvar path            = require('path');\nvar Menu            = electron.Menu;\nvar BrowserWindow   = electron.BrowserWindow;\nvar shell           = electron.shell;\nvar mavensmate      = require('/Users/josephferraro/Development/Github/mavensmate'); //todo\nvar ipc             = electron.ipcMain;\nvar AppUpdater      = require('./lib/updater');\nvar AutoLaunch      = require('auto-launch');\n\nvar mainWindow = null;\nvar mavensMateApp = null;\nvar mavensMateServer = null;\nvar mavensMateConfig = null;\nvar mavensMateLogger = null;\nvar trayIcon;\nvar isStartAtLaunch = false;\nvar installPrereleases = false;\nvar openUrlInNewTab = null;\n\nvar getStartupPath = function() {\n  if (process.platform === 'darwin') {\n    return path.join(app.getAppPath(), '..', '..', '..');\n  } else if (process.platform === 'win32') {\n    return app.getAppPath();\n  } else {\n    return app.getAppPath();\n  }\n};\n\nvar appLauncher = new AutoLaunch({\n  name: 'MavensMate',\n  isHidden: true,\n  path: getStartupPath()\n});\n\n// attaches menu to application (edit, view, window, help, etc)\nvar attachAppMenu = function() {\n  if (!Menu.getApplicationMenu()) {\n    var template;\n    if (process.platform == 'darwin') {\n      template = [\n        {\n          label: 'MavensMate',\n          submenu: [\n            {\n              label: 'MavensMate v'+app.getVersion()\n            },\n            {\n              type: 'separator'\n            },\n            {\n              label: 'Services',\n              submenu: []\n            },\n            {\n              type: 'separator'\n            },\n            {\n              label: 'Hide MavensMate',\n              accelerator: 'Command+H',\n              selector: 'hide:'\n            },\n            {\n              label: 'Hide Others',\n              accelerator: 'Command+Shift+H',\n              selector: 'hideOtherApplications:'\n            },\n            {\n              label: 'Show All',\n              selector: 'unhideAllApplications:'\n            },\n            {\n              type: 'separator'\n            },\n            {\n              label: 'Quit',\n              accelerator: 'Command+Q',\n              click: function() { app.quit(); }\n            },\n          ]\n        },\n        {\n          label: 'Edit',\n          submenu: [\n            {\n              label: 'Undo',\n              accelerator: 'Command+Z',\n              selector: 'undo:'\n            },\n            {\n              label: 'Redo',\n              accelerator: 'Shift+Command+Z',\n              selector: 'redo:'\n            },\n            {\n              type: 'separator'\n            },\n            {\n              label: 'Cut',\n              accelerator: 'Command+X',\n              selector: 'cut:'\n            },\n            {\n              label: 'Copy',\n              accelerator: 'Command+C',\n              selector: 'copy:'\n            },\n            {\n              label: 'Paste',\n              accelerator: 'Command+V',\n              selector: 'paste:'\n            },\n            {\n              label: 'Select All',\n              accelerator: 'Command+A',\n              selector: 'selectAll:'\n            },\n          ]\n        },\n        {\n          label: 'Window',\n          submenu: [\n            {\n              label: 'New Window',\n              accelerator: 'Command+N',\n              click: function() {\n                if (!mainWindow) {\n                  attachMainWindow(false, 'http://localhost:56248/app/home');\n                }\n              }\n            },\n            {\n              label: 'Minimize',\n              accelerator: 'Command+M',\n              selector: 'performMiniaturize:'\n            },\n            {\n              label: 'Close',\n              accelerator: 'Command+W',\n              selector: 'performClose:'\n            },\n            {\n              type: 'separator'\n            },\n            {\n              label: 'Bring All to Front',\n              selector: 'arrangeInFront:'\n            },\n          ]\n        },\n        {\n          label: 'Advanced',\n          submenu: [\n            {\n              label: 'Toggle MavensMate Server Developer Tools',\n              accelerator: (function() {\n                if (process.platform === 'darwin')\n                  return 'Alt+Command+K';\n                else\n                  return 'Ctrl+Shift+K';\n              })(),\n              click: function(item, focusedWindow) {\n                if (focusedWindow) {\n                  focusedWindow.webContents.send('toggle-server-developer-tools');\n                }\n              }\n            },\n            {\n              label: 'Toggle MavensMate Desktop Developer Tools',\n              accelerator: (function() {\n                if (process.platform === 'darwin')\n                  return 'Alt+Command+I';\n                else\n                  return 'Ctrl+Shift+I';\n              })(),\n              click: function(item, focusedWindow) {\n                if (focusedWindow) {\n                  focusedWindow.webContents.send('toggle-desktop-developer-tools');\n                }\n              }\n            }\n          ]\n        },\n        {\n          label: 'Help',\n          submenu: [\n            {\n              label: 'MavensMate v'+app.getVersion()\n            },\n            {\n              label: 'Check for Updates',\n              click: function() { require('electron').shell.openExternal('https://github.com/joeferraro/MavensMate-Desktop/releases') }\n            },\n            {\n              label: 'Learn More',\n              click: function() { require('electron').shell.openExternal('http://mavensmate.com') }\n            },\n            {\n              label: 'Submit a GitHub Issue',\n              click: function() { require('electron').shell.openExternal('https://github.com/joeferraro/MavensMate/issues') }\n            }\n          ]\n        }\n      ];\n    } else {\n      template = [\n        {\n          label: '&File',\n          submenu: [\n            {\n              label: '&Close',\n              accelerator: 'Ctrl+W',\n              click: function() {\n                var focusedWindow = BrowserWindow.getFocusedWindow();\n                if (focusedWindow)\n                  focusedWindow.close();\n              }\n            },\n            {\n              label: 'Quit',\n              accelerator: 'Ctrl+Q',\n              click: function() { app.quit(); }\n            },\n          ]\n        },\n        {\n          label: 'Advanced',\n          submenu: [\n            {\n              label: 'Toggle MavensMate Server Developer Tools',\n              accelerator: (function() {\n                if (process.platform === 'darwin')\n                  return 'Alt+Command+K';\n                else\n                  return 'Ctrl+Shift+K';\n              })(),\n              click: function(item, focusedWindow) {\n                if (focusedWindow) {\n                  focusedWindow.webContents.send('toggle-server-developer-tools');\n                }\n              }\n            },\n            {\n              label: 'Toggle MavensMate Desktop Developer Tools',\n              accelerator: (function() {\n                if (process.platform === 'darwin')\n                  return 'Alt+Command+I';\n                else\n                  return 'Ctrl+Shift+I';\n              })(),\n              click: function(item, focusedWindow) {\n                if (focusedWindow) {\n                  focusedWindow.webContents.send('toggle-desktop-developer-tools');\n                }\n              }\n            }\n          ]\n        },\n        {\n          label: 'Help',\n          submenu: [\n            {\n              label: 'MavensMate v'+app.getVersion()\n            },\n            {\n              label: 'Check for Updates',\n              click: function() { require('electron').shell.openExternal('https://github.com/joeferraro/MavensMate-Desktop/releases') }\n            },\n            {\n              label: 'Submit a GitHub Issue',\n              click: function() { require('electron').shell.openExternal('https://github.com/joeferraro/MavensMate/issues') }\n            },\n            {\n              label: 'Learn More',\n              click: function() { require('electron').shell.openExternal('http://mavensmate.com') }\n            }\n          ]\n        }\n      ];\n    }\n\n    var menu = Menu.buildFromTemplate(template);\n    Menu.setApplicationMenu(menu);\n  }\n};\n\n\nvar onClosed = function() {\n  // dereference the window\n  // for multiple windows store them in an array\n  mainWindow = null;\n}\n\n// attaches the main window\nvar attachMainWindow = function(restartServer, url) {\n  return new Promise(function(resolve, reject) {\n    try {\n      console.log('attaching main application window');\n\n      // adds tab to the main window (typically called from the core via windowOpener function passed to client)\n      openUrlInNewTab = function(url) {\n        console.log('openUrlInNewTab', url);\n        var waitFor = !mainWindow ? attachMainWindow() : Promise.resolve();\n\n        waitFor\n          .then(function() {\n            if (url.indexOf('localhost') >= 0) {\n              // opens mavensmate ui in mavensmate-desktop chrome\n              mainWindow.webContents.send('new-web-view', url);\n              mainWindow.show();\n            } else {\n              // open external url in local browser\n              shell.openExternal(url);\n            }\n          })\n          .catch(function(err) {\n            console.error('COuld not open url in new view ...', err);\n          });\n      };\n\n      // Create the browser window.\n      mainWindow = new BrowserWindow({\n        width: 1000,\n        height: 750,\n        minWidth: 850,\n        minHeight: 670,\n        icon: path.join(__dirname, 'resources', 'icon.png')\n      });\n\n      mainWindow.loadURL('file://' + __dirname + '/index.html');\n      mainWindow.on('closed', onClosed);\n      mainWindow.webContents.on('did-finish-load', function() {\n\n        if (mavensmate.stop && restartServer) { // happens when app is restarted\n          mavensMateServer.stop();\n          mavensMateServer = null;\n          mavensMateApp = null;\n          mavensMateConfig = null;\n          mavensMateLogger = null;\n        }\n\n        // if (mavensMateServer) {\n        //   mainWindow.webContents.send('new-web-view', url);\n        //   return resolve();\n        // }\n\n        // we start the mm server, bc app was just started or was reloaded (typically during dev)\n        mavensmate\n          .startServer({\n            name: 'mavensmate-desktop',\n            port: 56248,\n            openWindowFn: openUrlInNewTab,\n            mode: 'desktop',\n            ipc: require('electron').ipcRenderer\n          })\n          .then(function(res) {\n            mavensMateApp = res.app;\n            mavensMateServer = res.server;\n            mavensMateConfig = res.config;\n            mavensMateLogger = res.logger;\n            mainWindow.webContents.send('new-web-view', 'http://localhost:56248/app/home');\n            new AppUpdater(mainWindow, mavensMateConfig);\n            resolve();\n          })\n          .catch(function(err) {\n            // reject(err); todo: reject, show error page\n            mainWindow.webContents.send('new-web-view', 'http://localhost:56248/app/home');\n            resolve();\n          });\n\n      });\n\n      // Emitted when the window is closed.\n      mainWindow.on('closed', function() {\n        // Dereference the window object, usually you would store windows\n        // in an array if your app supports multi windows, this is the time\n        // when you should delete the corresponding element.\n        mainWindow = null;\n      });\n    } catch(e) {\n      reject(e);\n    }\n  });\n};\n\nvar toggleStartAtLaunch = function() {\n  appLauncher.isEnabled()\n    .then(function(enabled) {\n      if (isStartAtLaunch) {\n        return appLauncher.disable();\n      } else {\n        return appLauncher.enable();\n      }\n    })\n    .then(function(res){\n      isStartAtLaunch = !isStartAtLaunch;\n    })\n    .catch(function(err) {\n      console.log('could not toggleStartAtLaunch', err);\n    });\n};\n\nvar attachTray = function() {\n  return new Promise(function(resolve, reject) {\n    appLauncher.isEnabled()\n      .then(function(enabled) {\n        if (enabled) {\n          isStartAtLaunch = enabled;\n        }\n        if (process.platform === 'darwin') {\n          trayIcon = new Tray(path.join(__dirname, 'resources', 'tray', 'osx', 'icon.png'));\n          trayIcon.setPressedImage(path.join(__dirname, 'resources', 'tray', 'osx', 'icon-white.png'));\n        } else if (process.platform === 'win32') {\n          trayIcon = new Tray(path.join(__dirname, 'resources', 'tray', 'osx', 'icon-white.png'));\n        } else {\n          trayIcon = new Tray(path.join(__dirname, 'resources', 'tray', 'osx', 'icon.png'));\n        }\n        var contextMenu = Menu.buildFromTemplate([\n          {\n            label: 'MavensMate v'+app.getVersion(),\n            type: 'normal'\n          },\n          {\n            label: 'Start on Launch',\n            type: 'checkbox',\n            click: function() { toggleStartAtLaunch() },\n            checked: isStartAtLaunch\n          },\n          {\n            label: 'Install Beta Releases',\n            type: 'checkbox',\n            click: function() {\n              mavensMateConfig.set('mm_beta_channel', !mavensMateConfig.get('mm_beta_channel', false));\n              mavensMateConfig.save();\n            },\n            checked: mavensMateConfig.get('mm_beta_channel', false)\n          },\n          {\n            label: 'Quit MavensMate',\n            type: 'normal',\n            click: function() { app.quit(); }\n          }\n        ]);\n        trayIcon.setToolTip('MavensMate');\n        trayIcon.setContextMenu(contextMenu);\n        resolve();\n      })\n      .catch(function(err) {\n        console.log('could not attach tray', err);\n        reject(err);\n      });\n  });\n};\n\n// mavensmate server can send messages to this process\n// in this case, we take a click event on an icon in mavensmate server and\n// display an app launcher in our UI, because we manage the webviews\nipc.on('show-view-manager', function() {\n  console.log('showing view manager!');\n  mainWindow.webContents.send('show-view-manager');\n});\n\n// used in development when we want to run the dev server inside electron\n// press escape on the error screen to proceed\nipc.on('error:continue', function() {\n  mainWindow.loadURL('file://' + __dirname + '/index.html');\n  mainWindow.webContents.on('did-finish-load', function() {\n    mainWindow.webContents.send('new-web-view', 'http://localhost:56248/app/home');\n  });\n});\n\napp.on('activate-with-no-open-windows', () => {\n  if (!mainWindow) {\n    mainWindow = attachMainWindow();\n  }\n});\n\n// This method will be called when Electron has finished\n// initialization and is ready to create browser windows.\n// will check for updates against github releases and pass the result to setup\napp.on('ready', function() {\n  attachAppMenu();\n  attachMainWindow()\n    // .then(attachTray)\n    .catch(function(err) {\n      console.error('Error starting MavensMate: ', err);\n      mainWindow.loadURL('file://' + __dirname + '/error.html');\n      mainWindow.webContents.on('did-finish-load', function() {\n        if (err.message.indexOf('56248') >= 0) {\n          mainWindow.webContents.send('error-msg', 'Another MavensMate Desktop instance running. Quit any other running instances of MavensMate Desktop to continue.');\n        } else {\n          mainWindow.webContents.send('error-msg', err.message);\n        }\n      });\n    });\n});\n\n\n/** WEBPACK FOOTER **\n ** ./src/electron/main.js\n **/","module.exports = require(\"bluebird\");\n\n\n/*****************\n ** WEBPACK FOOTER\n ** external \"bluebird\"\n ** module id = 1\n ** module chunks = 0\n **/","module.exports = require(\"inherits\");\n\n\n/*****************\n ** WEBPACK FOOTER\n ** external \"inherits\"\n ** module id = 2\n ** module chunks = 0\n **/","/**\n * @file Collection of utility functions\n * @author Joseph Ferraro <@joeferraro>\n */\n\n'use strict';\n\nvar spawn       = require('child_process').spawn;\nvar fs          = require('fs-extra-promise');\nvar path        = require('path');\nvar Promise     = require('bluebird');\nvar _           = require('lodash');\nvar os          = require('os');\nvar stripJson   = require('strip-json-comments');\nvar fstream     = require('fstream');\nvar archiver    = require('archiver');\nvar logger      = require('winston');\nvar which       = require('which');\nvar camelize    = require('./utilities/camelize');\n\nvar platformHash = {\n  darwin: 'osx',\n  linux: 'linux',\n  win32: 'windows'\n};\n\nexports.platformConfigKey = platformHash[os.platform()]\n\nexports.getAppRoot = function() {\n  return path.resolve(path.join(__dirname, '..', '..'));\n};\n\nexports.isCredentialsError = function(err) {\n  return err.message.indexOf('expired access/refresh token') >= 0 || err.message.indexOf('Could not retrieve credentials') >= 0 || err.message.indexOf('INVALID_SESSION_ID') >= 0;\n};\n\nexports.getProjectById = function(app, id) {\n  var projects = app.get('projects');\n  if (id) {\n    return _.find(projects, function(p) {\n      return p.settings.id === id;\n    });\n  }\n  return null;\n};\n\n/**\n * Returns a string representing a default workspace\n * @return {String}\n */\nexports.getDefaultWorkspaceSetting = function() {\n  if (this.isMac()) {\n    return path.join(process.env.HOME, 'Documents');\n  } else if (this.isWindows()) {\n    return path.join(process.env[(process.platform === 'win32') ? 'USERPROFILE' : 'HOME'], 'Documents');\n  } else if (this.isLinux()) {\n    return process.env.HOME;\n  }\n};\n\nexports.endsWith = function(string, suffix) {\n  string = string.toLowerCase();\n  suffix = suffix.toLowerCase();\n  return string.indexOf(suffix, string.length - suffix.length) !== -1;\n};\n\nexports.startsWith = function(string, prefix) {\n  string = string.toLowerCase();\n  prefix = prefix.toLowerCase();\n  return prefix.length > 0 && string.substring( 0, prefix.length ) === prefix;\n};\n\nexports.isWindows = function() {\n  return os.platform() === 'win32';\n};\n\nexports.getWindowsAppDataPath = function() {\n  return process.env.APPDATA;\n};\n\nexports.isLinux = function() {\n  return os.platform() === 'linux';\n};\n\nexports.isMac = function() {\n  return os.platform() === 'darwin';\n};\n\nexports.isValidProjectPath = function(projectPath) {\n  return fs.existsSync(path.join(projectPath, 'config', '.settings'));\n};\n\nexports.getHomeDirectory = function() {\n  if (this.isMac()) {\n    return process.env.HOME;\n  } else if (this.isWindows()) {\n    return process.env[(process.platform === 'win32') ? 'USERPROFILE' : 'HOME'];\n  } else if (this.isLinux()) {\n    return process.env.HOME;\n  }\n};\n\nexports.removeEmptyDirectoriesRecursiveSync = function(directory) {\n  logger.silly('----------> removing empty directories from', directory);\n  var removeEmptyDirs = function(dir) {\n    var files = fs.readdirSync(dir);\n    logger.silly('files in directory', dir, files);\n    if (files.length === 0 && dir !== directory) {\n      // directory is empty, simple remove it\n      fs.removeSync(dir);\n    } else {\n      for (var i = 0; i < files.length; i++) {\n        var filePath = path.join(dir, files[i]);\n        logger.silly(filePath);\n        var stats = fs.statSync(filePath);\n        if (stats.isDirectory()) {\n          logger.silly('---> directory', filePath);\n          removeEmptyDirs(filePath);\n        }\n      }\n      files = fs.readdirSync(dir);\n      if (files.length === 0 && dir !== directory) {\n        fs.removeSync(dir);\n      }\n    }\n  };\n  removeEmptyDirs(directory);\n};\n\nexports.emptyDirectoryRecursiveSync = function(directory) {\n  var emptyDir = function(dir) {\n    logger.silly('----------> emptying directory', dir);\n    var files = fs.readdirSync(dir);\n    logger.silly('files', files);\n    if (files.length > 0) {\n      for (var i = 0; i < files.length; i++) {\n        var fileBasename = files[i];\n        var filePath = path.join(dir, files[i]);\n        logger.silly(filePath);\n        var stats = fs.statSync(filePath);\n        if (stats.isFile()) {\n          logger.silly('---> file, unlinking', filePath);\n          fs.unlinkSync(filePath);\n        } else if (stats.isDirectory() && fileBasename !== '.svn' && fileBasename !== '.git') {\n          logger.silly('---> directory', filePath);\n          emptyDir(filePath);\n        }\n      }\n    }\n  };\n  emptyDir(directory);\n};\n\n/**\n * Takes an array of path strings and returns an array of absolute paths\n * @param  {Array} paths\n * @return {Array} absolute paths\n */\nexports.getAbsolutePaths = function(paths) {\n  var resolvedPaths = [];\n  _.each(paths, function(p) {\n    if (path.resolve(p) !== path.normalize(p).replace(new RegExp(path.sep+'$'), '' )) {\n      // relative path\n      resolvedPaths.push( path.resolve(p) );\n    } else {\n      resolvedPaths.push(p);\n    }\n  });\n  return resolvedPaths;\n};\n\n/**\n * Check if a directory is empty synchronously (courtesy: https://github.com/codexar/npm-extfs)\n *\n * @param {string} searchPath\n */\nexports.isDirectoryEmptySync = function (searchPath) {\n  var stat;\n  try {\n    stat = fs.statSync(searchPath);\n  } catch (e) {\n    return true;\n  }\n  if (stat.isDirectory()) {\n    var items = fs.readdirSync(searchPath);\n    var visibleItems = [];\n    _.each(items, function(i) {\n      if (i[0] !== '.') {\n        visibleItems.push(i);\n      }\n    });\n    return visibleItems.length === 0;\n  }\n};\n\n\n/**\n * Walks directory recursively, returns a list of file paths\n * @param  {String}   dir  - dir path\n * @param  {Function} done - callback\n * @return {Callback} err, array of file paths\n */\nexports.walkSync = function(dir) {\n  var walk = function(dir) {\n    var _walk;\n    _walk = function(dir) {\n      var fn, fns, _i, _len, _results;\n      fns = fs.readdirSync(dir);\n      _results = [];\n      for (_i = 0, _len = fns.length; _i < _len; _i++) {\n        fn = fns[_i];\n        fn = dir + path.sep + fn;\n        if (fs.statSync(fn).isDirectory()) {\n          _results.push(_walk(fn));\n        } else {\n          _results.push(fn);\n        }\n      }\n      return _results;\n    };\n    return _walk(dir);\n  };\n\n  return _.flatten( walk(dir) );\n};\n\n/**\n * Returns a list of top-level directories in a given directory\n * @param  {String}   dir  - dir path\n * @return {Array} directories\n */\nexports.listDirectories = function(dir) {\n  var contents = fs.readdirSync(dir);\n  var directories = [];\n  _.each(contents, function(c) {\n    if (fs.statSync(path.join(dir,c)).isDirectory()) {\n      directories.push(path.join(dir,c));\n    }\n  });\n  return directories;\n};\n\n// reads command payload (STDIN)\nexports.readStdin = function() {\n  return new Promise(function(resolve, reject) {\n    var myJson = '';\n\n    process.stdin.setEncoding('utf8');\n\n    process.stdin.on('readable', function() {\n      var chunk = process.stdin.read();\n      if (chunk !== null) {\n        myJson += chunk;\n      }\n    });\n\n    process.stdin.on('end', function() {\n      var jsonObject = JSON.parse(myJson);\n      _.forOwn(jsonObject, function(value, key) {\n        if (key.indexOf('_') >= 0) {\n          jsonObject[camelize(key)] = jsonObject[key];\n          delete jsonObject[key];\n        }\n      });\n      resolve(jsonObject);\n    });\n  });\n};\n\n// returns command payload (STDIN)\n// if it's already been read, returns global.payload\nexports.getPayload = function() {\n  var self = this;\n  return new Promise(function(resolve, reject) {\n    self.readStdin()\n      .then(function(stdin) {\n        resolve(stdin);\n      })\n      .catch(function(error) {\n        reject(new Error('Could not read STDIN: '+error.message));\n      });\n  });\n};\n\n// takes an instance of an object\n// applies the properties of opts to the instance\nexports.applyProperties = function(instance, opts) {\n  _.forOwn(opts, function(value, key) {\n    if (key.indexOf('_') >= 0) {\n      instance[camelize(key)] = value;\n    } else {\n      instance[key] = value;\n    }\n  });\n};\n\nexports.getFileBody = function(path, parseJSON) {\n  var fileBody = fs.readFileSync(path, 'utf8');\n  if (parseJSON) {\n    fileBody = stripJson(fileBody);\n    return JSON.parse(fileBody);\n  } else {\n    return fileBody;\n  }\n};\n\nexports.joinForQuery = function(strings) {\n  return '\\''+strings.join('\\',\\'')+'\\'';\n};\n\nexports.zipDirectory = function(directoryToZip, zipFileDestination, dest, ext, filename) {\n  return new Promise(function(resolve, reject) {\n\n    if (!directoryToZip) {\n      return reject(new Error('Missing directory to zip'));\n    }\n\n    if (dest === undefined) {\n      dest = 'unpackaged';\n    }\n    if (ext === undefined) {\n      ext = 'zip';\n    }\n    filename = filename || dest;\n    var cwd = process.cwd();\n    // logger.debug('\\n\\n\\n\\n-----=======> CHANGING DIRECTORY');\n    process.chdir(path.join(directoryToZip));\n    var output = fs.createWriteStream(path.join(zipFileDestination, filename+'.'+ext));\n    var archive = archiver('zip');\n\n    output.on('close', function () {\n      process.chdir(cwd);\n      resolve();\n    });\n\n    archive.on('error', function(err){\n      logger.error('error creating zip file');\n      logger.error(err);\n      process.chdir(cwd);\n      reject(new Error('unable to create zip file'));\n    });\n\n    archive.pipe(output);\n    archive.bulk([\n        { src: ['**'], dest: dest }\n    ]);\n    archive.finalize();\n  });\n};\n\n/**\n * Writes a readable stream to disk (assumes zip)\n * We have to write the stream to the disk THEN unzip because of issues with npm's unzip\n * @param  {Stream} readableStream\n * @param  {String} destination\n * @return {Promise}\n */\nexports.writeStream = function(readableStream, destination) {\n  var self = this;\n  return new Promise(function(resolve, reject) {\n    var tmpZipLocation = path.join(destination, 'tmp.zip');\n    try {\n      logger.debug('writing stream');\n      readableStream\n        .pipe(fstream.Writer(tmpZipLocation))\n          .on('error', function (error) {\n            if (fs.existsSync(tmpZipLocation)) {\n              fs.removeAsync(tmpZipLocation)\n                .then(function() {\n                  reject(error);\n                })\n                .catch(function(err) {\n                  reject(err);\n                });\n            }\n          })\n          .on('close', function() {\n            logger.debug('closed write stream, unzipping now');\n\n            var unzipCommand;\n\n            if (self.isMac() || self.isLinux()) {\n              unzipCommand = spawn('unzip', [ tmpZipLocation, '-d', destination ], { stdio: [ 'ignore', 'ignore', 'pipe' ] });\n            } else if (self.isWindows()) {\n              var cscriptExe = 'cscript';\n              try {\n                which.sync('cscript');\n              } catch(e) {\n                logger.debug('Could not find cscript...');\n                if (os.arch() === 'ia32') {\n                  cscriptExe = 'c:\\\\windows\\\\system32\\\\cscript.exe';\n                } else {\n                  cscriptExe = 'c:\\\\windows\\\\SysWOW64\\\\cscript.exe';\n                }\n              }\n              logger.debug('cscriptExe is: ', cscriptExe);\n              unzipCommand = spawn(cscriptExe, [path.join(__dirname, '..', '..', 'bin', 'unzip.vbs'), tmpZipLocation, destination ], { stdio: [ 'ignore', 'ignore', 'pipe' ] });\n            }\n\n            unzipCommand.on('error', function(err) {\n              logger.debug('error spawning unzip process', err);\n              if (err.message.indexOf('ENOENT') !== -1) {\n                return reject(new Error('Could not unzip response from Salesforce. It is likely unzip (OSX/Linux) or cscript (Windows) is not available on your system PATH. Check your local machine settings.'));\n              } else {\n                return reject(err);\n              }\n            });\n\n            unzipCommand.stderr.on('data', function (data) {\n              logger.error('ERR unzipping:');\n              logger.error(data);\n              if (fs.existsSync(tmpZipLocation)) {\n                fs.removeAsync(tmpZipLocation)\n                  .then(function() {\n                    return reject(new Error('Could not extract and write stream to file system.'));\n                  })\n                  .catch(function(err) {\n                    return reject(err);\n                  });\n              }\n            });\n\n            unzipCommand.on('close', function (code) {\n              if (fs.existsSync(tmpZipLocation)) {\n                fs.removeAsync(tmpZipLocation)\n                  .then(function() {\n                    if (code !== 0) {\n                      return reject(new Error('Could not extract and write stream to file system. [Exit Code '+code+']'));\n                    } else {\n                      return resolve(destination);\n                    }\n                  })\n                  .catch(function(err) {\n                    reject(err);\n                  });\n              }\n            });\n          });\n    } catch(e) {\n      if (fs.existsSync(tmpZipLocation)) {\n        fs.removeAsync(tmpZipLocation)\n          .then(function() {\n            reject(e);\n          })\n          .catch(function(err) {\n            reject(err);\n          });\n      }\n    }\n  });\n};\n\nexports.chunkArray = function(arr, chunkSize) {\n  return [].concat.apply([],\n    arr.map(function(elem,i) {\n      return i%chunkSize ? [] : [arr.slice(i,i+chunkSize)];\n    })\n  );\n};\n\nexports.generateRandomString = function(length) {\n  var chars = '0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghiklmnopqrstuvwxyz';\n  length = length ? length : 32;\n  var string = '';\n  for (var i = 0; i < length; i++) {\n    var randomNumber = Math.floor(Math.random() * chars.length);\n    string += chars.substring(randomNumber, randomNumber + 1);\n  }\n  return string;\n};\n\n\n/** WEBPACK FOOTER **\n ** ../mavensmate/app/lib/util.js\n **/","module.exports = require(\"winston\");\n\n\n/*****************\n ** WEBPACK FOOTER\n ** external \"winston\"\n ** module id = 4\n ** module chunks = 0\n **/","/**\n * @file Base command class. Each command implements an execute function that performs the work.\n * @author Joseph Ferraro <@joeferraro>\n */\n\n'use strict';\n\nvar _               = require('lodash');\nvar logger          = require('winston');\nvar MetadataHelper  = require('./metadata').MetadataHelper;\n\n/**\n * Base command class\n * @param {Array} args\n * @param {Array[0]} - client instance (object)\n * @param {Array[1]} - payload for the command (object)\n * @param {Array[2]} - editorService for facilitating interaction with the editors (sublime, atom, vim, vscode, etc.)\n */\nvar BaseCommand = function(args) {\n  this.setProject(args[0]);\n  this.payload = args[1];\n  this.editorService = args[2];\n  this.metadataHelper = new MetadataHelper();\n};\n\n/**\n * Sets unique identifier for the command for tracking purposes\n * @param {String} id - unique id (via uuid)\n */\nBaseCommand.prototype.setId = function(id) {\n  this._id = id;\n};\n\n/**\n * Returns the command id\n * @return {String} - unique id of the command\n */\nBaseCommand.prototype.getId = function() {\n  return this._id;\n};\n\n/**\n * Sets the project running this command (optional)\n * @param {Object} project - project instance\n */\nBaseCommand.prototype.setProject = function(project) {\n  this._project = project;\n};\n\n/**\n * Returns the project running this command (optional)\n * @return {Object} - project instance\n */\nBaseCommand.prototype.getProject = function() {\n  return this._project;\n};\n\n/**\n * Whether the command is requesting a UI\n * @return {Boolean}\n */\nBaseCommand.prototype.isUICommand = function() {\n  return (this.payload && this.payload.args) ? this.payload.args.ui : false;\n};\n\nmodule.exports = BaseCommand;\n\n\n\n/** WEBPACK FOOTER **\n ** ../mavensmate/app/lib/command.js\n **/","module.exports = require(\"path\");\n\n\n/*****************\n ** WEBPACK FOOTER\n ** external \"path\"\n ** module id = 6\n ** module chunks = 0\n **/","module.exports = require(\"lodash\");\n\n\n/*****************\n ** WEBPACK FOOTER\n ** external \"lodash\"\n ** module id = 7\n ** module chunks = 0\n **/","'use strict';\n\n/**\n * nconf is used globally for config, client instantiates the necessary config files\n * import config throughout the application to share the global nconf\n */\n\nvar fs        = require('fs-extra');\nvar config    = require('nconf');\nvar defaults  = require('./default');\nvar util      = require('../lib/util');\nvar path      = require('path');\nvar _         = require('lodash');\n\nfunction _monitor(filePath) {\n  fs.unwatchFile(filePath);\n  fs.watchFile(filePath, function() {\n    _reload();\n  });\n}\n\nfunction _reload() {\n  config.remove('user-client');\n  config.remove('default-client');\n  config.remove('global');\n  _init();\n}\n\nfunction _init() {\n  config.env().argv().defaults({});\n\n  var userSettingsPath;\n  if (util.isMac()) {\n    userSettingsPath = path.join(util.getHomeDirectory(), '.mavensmate-config.json');\n  } else if (util.isWindows()) {\n    userSettingsPath = path.join(util.getWindowsAppDataPath(), 'MavensMate', 'mavensmate-config.json');\n  } else if (util.isLinux()) {\n    userSettingsPath = path.join(util.getHomeDirectory(), '.config', '.mavensmate-config.json');\n  }\n\n  var defaultSettings = {};\n  _.each(defaults, function(settingValue, settingKey) {\n    defaultSettings[settingKey] = settingValue.default;\n  });\n\n  // if user setting dont exist, copy default to user settings on disk\n  if (!fs.existsSync(userSettingsPath)) {\n    fs.outputJsonSync(userSettingsPath, defaultSettings, {spaces: 2});\n  }\n\n  // ensure valid JSON configuration\n  try {\n    util.getFileBody(userSettingsPath, true);\n  } catch(e) {\n    logger.error('could not parse user JSON configuration, reverting to default');\n    fs.outputJsonSync(userSettingsPath, defaultSettings, { spaces: 2 });\n  }\n  config.file('user', userSettingsPath);\n  _monitor(userSettingsPath);\n  config\n    .add('global', { type: 'literal', store: defaultSettings});\n\n  // normalize mm_api_version to string with a single decimal\n  var mmApiVersion = config.get('mm_api_version');\n  if (!util.endsWith(mmApiVersion,'.0')) {\n    mmApiVersion = mmApiVersion+'.0';\n    config.set('mm_api_version', mmApiVersion);\n  }\n\n  if (config.get('mm_http_proxy')) {\n    process.env.http_proxy = config.get('mm_http_proxy');\n  }\n  if (config.get('mm_https_proxy')) {\n    process.env.https_proxy = config.get('mm_https_proxy');\n  }\n}\n\n_init();\nmodule.exports = config;\n\n\n/** WEBPACK FOOTER **\n ** ../mavensmate/app/config/index.js\n **/","/**\n * @file Responsible for launching MavensMate UIs and opening files in the client self.editor\n * @author Joseph Ferraro <@joeferraro>\n */\n\n'use strict';\n\nvar Promise     = require('bluebird');\nvar _           = require('lodash');\nvar which       = require('which');\nvar spawn       = require('child_process').spawn;\nvar logger      = require('winston');\nvar util        = require('../util');\nvar config      = require('../../config');\nvar path        = require('path');\nvar os          = require('os');\nvar fs          = require('fs-extra');\nvar open        = require('open');\nvar querystring = require('querystring');\n\n/**\n * Service to handle interaction with the self.editor (sublime, atom, etc.)\n * @param {String} self.editor - name of the self.editor\n */\nvar EditorService = function(editor, openWindowFn) {\n  this.editor = editor;\n  this.openWindowFn = openWindowFn;\n  this.supportedEditors = this._getSupportedEditors();\n  if (this.editor && !this._isSupportedEditor(this.editor)) {\n    throw new Error(this.editor+' was not found in list of supported editors. Please check your global settings to ensure the self.editor path for '+this.editor+' is configured correctly.');\n  }\n};\n\nEditorService.prototype._isSupportedEditor = function(editor) {\n  if (!this.supportedEditors[this.editor]) {\n    logger.error('Unsupported editor. Supported editors: ', this.supportedEditors);\n    return false;\n  }\n  return true;\n};\n\nEditorService.prototype._getSupportedEditors = function() {\n  var editors = {};\n  var atomLocationConfig = config.get('mm_atom_exec_path')[util.platformConfigKey] || config.get('mm_atom_exec_path');\n  var vsCodeLocationConfig = config.get('mm_vscode_exec_path')[util.platformConfigKey] || config.get('mm_vscode_exec_path');\n  var pathAtomLocation, pathSublLocation, pathVsCodeLocation;\n  try { pathVsCodeLocation = which.sync('code'); } catch(e){}\n  try { pathAtomLocation = which.sync('atom'); } catch(e){}\n  var sublLocationConfig = config.get('mm_subl_location')[util.platformConfigKey] || config.get('mm_subl_location');\n  try { pathSublLocation = which.sync('subl'); } catch(e){}\n  var atomPath = fs.existsSync(atomLocationConfig) ? atomLocationConfig : pathAtomLocation;\n  var sublPath = fs.existsSync(sublLocationConfig) ? sublLocationConfig : pathSublLocation;\n  var vsCodePath = fs.existsSync(vsCodeLocationConfig) ? vsCodeLocationConfig : pathVsCodeLocation;\n  if (atomPath) {\n    editors.atom = atomPath;\n  }\n  if (sublPath) {\n    editors.sublime = sublPath;\n  }\n  if (vsCodePath) {\n    editors.vscode = vsCodePath;\n  }\n  return editors;\n};\n\n/**\n * Launches the MavensMate UI in either MavensMateWindowServer.app (osx) or the web browser (Linux/Windows)\n * @param  {String} commandName\n * @return {Nothing}\n */\nEditorService.prototype.launchUI = function(appPath, urlParams) {\n  var self = this;\n  return new Promise(function(resolve, reject) {\n    var portNumber = process.env.MAVENSMATE_SERVER_PORT;\n\n    if (!portNumber) {\n      return reject(new Error('Could not detect local MavensMate server port. Set MAVENSMATE_SERVER_PORT environment variable.'));\n    }\n\n    var url = 'http://localhost:'+portNumber+'/app/'+appPath;\n    if (self.editor && urlParams) {\n      urlParams.editor = self.editor;\n    } else if (self.editor) {\n      urlParams = {};\n      urlParams.editor = self.editor;\n    }\n    if (urlParams) {\n      url += '?'+querystring.stringify(urlParams);\n    }\n\n    logger.debug('opening url --->');\n    logger.debug(url);\n\n    // todo: refactor windowopener (this is used by mavensmate-desktop)\n    if (self.openWindowFn) {\n      self.openWindowFn(url);\n      resolve();\n    } else {\n      // open web browser\n      open(url, function() {\n        if (process.env.MAVENSMATE_CONTEXT === 'cli') {\n          resolve();\n          process.exit(0);\n        } else {\n          resolve();\n        }\n      });\n\n    }\n  });\n};\n\n/**\n * Opens the specified URL in the user's browser (should probably be located in util, but oh well)\n * @param  {String} url - url to open in the browser\n */\nEditorService.prototype.openUrl = function(url) {\n  var self = this;\n  return new Promise(function(resolve, reject) {\n    try {\n      if (self.openWindowFn) {\n        self.openWindowFn(url);\n        resolve();\n      } else if (os.platform() === 'darwin') {\n        var browserChildProcess = spawn('open', [url], {\n          detached: true\n        });\n\n        browserChildProcess.on('close', function (code) {\n          if (code === 0) {\n            resolve();\n          }\n        });\n      } else {\n        // open web browser\n        open(url, function() {\n          resolve();\n        });\n      }\n    } catch(e) {\n      reject(e);\n    }\n  });\n};\n\nEditorService.prototype.runCommand = function(commandName) {\n  var self = this;\n  return new Promise(function(resolve, reject) {\n    if (self.editor === 'sublime') {\n      var editorExe = spawn(self.supportedEditors[self.editor], ['--command', commandName]);\n      editorExe.stdout.on('data', function (data) {\n        logger.debug('editor command STDOUT:');\n        logger.debug(data);\n      });\n\n      editorExe.stderr.on('data', function (data) {\n        logger.error('ERROR: Result of run command in editor: ');\n        logger.error(data);\n        return resolve(); // we resolve bc this is not a life/death operation\n      });\n\n      editorExe.on('close', function(code) {\n        logger.debug('editorExe close: ');\n        logger.debug(code);\n        if (code !== 0) {\n          logger.error('Could not run command in '+self.editor);\n          resolve();\n        } else {\n          resolve();\n        }\n      });\n\n      editorExe.on('error', function(err) {\n        logger.error(err);\n        resolve();\n      });\n    } else {\n      resolve();\n    }\n  });\n};\n\n/**\n * Open a specific path in the editor\n * @param  {String} path - path to open\n * @return {Nothing}\n */\nEditorService.prototype.open = function(path) {\n  var self = this;\n  return new Promise(function(resolve, reject) {\n    var editorExe = spawn(self.supportedEditors[self.editor], [ path ]);\n    editorExe.stdout.on('data', function (data) {\n      logger.debug('editorExe STDOUT:');\n      logger.debug(data);\n    });\n\n    editorExe.stderr.on('data', function (data) {\n      logger.error('Result of path open in self.editor: ');\n      logger.error(data);\n      return reject(new Error('Could not open in editor'));\n    });\n\n    editorExe.on('close', function(code) {\n      logger.debug('editorExe close: ');\n      logger.debug(code);\n      if (code !== 0) {\n        reject(new Error('Could not open path in '+self.editor+'. Check your MavensMate global settings to ensure self.editor paths are configured properly for '+self.editor));\n      } else {\n        resolve();\n      }\n    });\n\n    editorExe.on('error', function(err) {\n      return reject(err);\n    });\n  });\n};\n\nmodule.exports = EditorService;\n\n\n/** WEBPACK FOOTER **\n ** ../mavensmate/app/lib/services/editor.js\n **/","module.exports = require(\"fs-extra\");\n\n\n/*****************\n ** WEBPACK FOOTER\n ** external \"fs-extra\"\n ** module id = 10\n ** module chunks = 0\n **/","/**\n * @file Represents an element of Salesforce metadata.\n * @author Joseph Ferraro <@joeferraro>\n */\n\n'use strict';\n\nvar Promise         = require('bluebird');\nvar _               = require('lodash');\nvar fs              = require('fs-extra');\nvar path            = require('path');\nvar MetadataHelper  = require('./metadata').MetadataHelper;\nvar util            = require('./util');\nvar config          = require('../config');\nvar request         = require('request');\nvar swig            = require('swig');\nvar logger          = require('winston');\nvar TemplateService = require('./services/template');\n\nvar types = {\n    TOP_LEVEL_METADATA_DIRECTORY: 'TOP_LEVEL_METADATA_DIRECTORY',\n    TOP_LEVEL_METADATA_FILE: 'TOP_LEVEL_METADATA_FILE',\n    METADATA_FOLDER: 'METADATA_FOLDER',\n    METADATA_FOLDER_ITEM: 'METADATA_FOLDER_ITEM',\n    LIGHTNING_BUNDLE: 'LIGHTNING_BUNDLE',\n    LIGHTNING_BUNDLE_ITEM: 'LIGHTNING_BUNDLE_ITEM'\n};\nObject.freeze(types);\n\nvar lightningTypes = {\n    STYLE: 'STYLE',\n    APPLICATION: 'APPLICATION',\n    DOCUMENTATION: 'DOCUMENTATION',\n    COMPONENT: 'COMPONENT',\n    EVENT: 'EVENT',\n    INTERFACE: 'INTERFACE',\n    CONTROLLER: 'CONTROLLER',\n    HELPER: 'HELPER',\n    RENDERER: 'RENDERER'\n};\nObject.freeze(lightningTypes);\n\nvar MavensMateFile = function(opts) {\n  opts = opts || {};\n  this.path = opts.path;\n  this.project = opts.project;\n  this.metadataHelper = this.project ? new MetadataHelper({ sfdcClient : this.project.sfdcClient }) : new MetadataHelper();\n  if (this.path) {\n    this.path = path.normalize(this.path);\n    this.type = this.metadataHelper.getTypeByPath(this.path);\n    this.basename = path.basename(this.path);\n    this.extension = path.extname(this.path).replace(/./, '');\n    if (this.basename.match(/./g)||[].length === 1) {\n      this.name = this.basename.split('.')[0];\n    } else {\n      this.name = path.basename(this.basename, '.' + this.extension);\n    }\n    this.folderName = path.basename(path.dirname(this.path));\n  }\n};\n\nMavensMateFile.prototype._template = null;\nMavensMateFile.prototype._basename = null;\nMavensMateFile.prototype._name = null;\nMavensMateFile.prototype._folderName = null;\nMavensMateFile.prototype._extension = null;\nMavensMateFile.prototype._apexTriggerObjectName = null;\n\n/**\n * whether the path represents a directory\n */\nObject.defineProperty(MavensMateFile.prototype, 'isDirectory', {\n  get: function() {\n    if (this.type.xmlName === 'Document') {\n      return path.extname(this.path) === ''; //TODO: some documents may not have an extension!\n    } else {\n      return path.extname(this.path) === '';\n    }\n  }\n});\n\n/**\n * basename of path\n */\nObject.defineProperty(MavensMateFile.prototype, 'basename', {\n  get: function() {\n    return this._basename;\n  },\n  set: function(value) {\n    this._basename = value;\n  }\n});\n\n/**\n * object name of apex trigger (if applicable)\n */\nObject.defineProperty(MavensMateFile.prototype, 'apexTriggerObjectName', {\n  get: function() {\n    return this._apexTriggerObjectName;\n  },\n  set: function(value) {\n    this._apexTriggerObjectName = value;\n  }\n});\n\n/**\n * basename of path without extension\n */\nObject.defineProperty(MavensMateFile.prototype, 'name', {\n  get: function() {\n    return this._name;\n  },\n  set: function(value) {\n    this._name = value;\n  }\n});\n\n/**\n * basename of path without extension\n */\nObject.defineProperty(MavensMateFile.prototype, 'folderName', {\n  get: function() {\n    return this._folderName;\n  },\n  set: function(value) {\n    this._folderName = value;\n  }\n});\n\n/**\n * basename of path without extension\n */\nObject.defineProperty(MavensMateFile.prototype, 'extension', {\n  get: function() {\n    return this._extension;\n  },\n  set: function(value) {\n    this._extension = value;\n  }\n});\n\n/**\n * name when referenced via package.xml\n */\nObject.defineProperty(MavensMateFile.prototype, 'packageName', {\n  get: function() {\n    if (this.classification === types.METADATA_FOLDER_ITEM) {\n      return this.folderName + '/' + this.name;\n    } else {\n      return this.name;\n    }\n  }\n});\n\nObject.defineProperty(MavensMateFile.prototype, 'isToolingType', {\n  get: function() {\n    var supportedExtensions = ['cls', 'trigger', 'page', 'component'];\n    return supportedExtensions.indexOf(this.extension) >= 0;\n  }\n});\n\nObject.defineProperty(MavensMateFile.prototype, 'isLightningType', {\n  get: function() {\n    return this.type.xmlName === 'AuraDefinitionBundle';\n  }\n});\n\n/**\n * Returns base name of lightning component (e.g. fooRenderer -> foo)\n * @return {String}\n */\nObject.defineProperty(MavensMateFile.prototype, 'lightningBaseName', {\n  get: function() {\n    var lbn = this.name;\n    if (util.endsWith(lbn, 'Controller')) {\n      lbn = lbn.replace(/Controller/, '');\n    } else if (util.endsWith(lbn, 'Helper')) {\n      lbn = lbn.replace(/Helper/, '');\n    } if (util.endsWith(lbn, 'Renderer')) {\n      lbn = lbn.replace(/Renderer/, '');\n    }\n    return lbn;\n  },\n});\n\nObject.defineProperty(MavensMateFile.prototype, 'lightningType', {\n  get: function() {\n    if (this.extension === 'css') {\n      return 'STYLE';\n    } else if (this.extension === 'app') {\n      return 'APPLICATION';\n    } else if (this.extension === 'auradoc') {\n      return 'DOCUMENTATION';\n    } else if (this.extension === 'cmp') {\n      return 'COMPONENT';\n    } else if (this.extension === 'evt') {\n      return 'EVENT';\n    } else if (this.extension === 'intf') {\n      return 'INTERFACE';\n    } else if (this.extension === 'js') {\n      if (util.endsWith(this.name, 'Controller')) {\n        return 'CONTROLLER';\n      } else if (util.endsWith(this.name, 'Helper')) {\n        return 'HELPER';\n      }  else if (util.endsWith(this.name, 'Renderer')) {\n        return 'RENDERER';\n      }\n    }\n  }\n});\n\n/**\n * classification of the path\n */\nObject.defineProperty(MavensMateFile.prototype, 'classification', {\n  get: function() {\n    if (this.type.inFolder) {\n      var inFolderTypeDirectoryNames = this.metadataHelper.inFolderDirectoryNames;\n      if (this.isDirectory) {\n        if (inFolderTypeDirectoryNames.indexOf(path.basename(path.dirname(this.path))) >= 0) {\n          return types.TOP_LEVEL_METADATA_DIRECTORY;\n        } else {\n          return types.METADATA_FOLDER;\n        }\n      } else {\n        return types.METADATA_FOLDER_ITEM;\n      }\n    } else if (this.type.xmlName === 'AuraDefinitionBundle') {\n      if (this.isDirectory) {\n        return types.LIGHTNING_BUNDLE;\n      } else {\n        return types.LIGHTNING_BUNDLE_ITEM;\n      }\n    } else {\n      if (this.isDirectory) {\n        return types.TOP_LEVEL_METADATA_DIRECTORY;\n      } else {\n        return types.TOP_LEVEL_METADATA_FILE;\n      }\n    }\n  }\n});\n\n/**\n * Local file body (source code, conents, etc.)\n */\nObject.defineProperty(MavensMateFile.prototype, 'body', {\n  get: function() {\n    if (this.isDirectory) {\n      throw new Error('Can not get body of directory');\n    }\n    return util.getFileBody(this.path);\n  }\n});\n\n/**\n * Returns whether this path type requires a corresponding meta file\n * @return {String}\n */\nObject.defineProperty(MavensMateFile.prototype, 'hasMetaFile', {\n  get: function() {\n    return this.type.metaFile === true;\n  }\n});\n\n/**\n* Whether the instance exists on the disk (or virtual disk (future))\n* @return {Boolean}\n*/\nObject.defineProperty(MavensMateFile.prototype, 'existsOnFileSystem', {\n  get: function() {\n    return this.path ? fs.existsSync(this.path) : false;\n  }\n});\n\n/**\n * Whether this is a -meta.xml file\n * @return {Boolean}\n */\nObject.defineProperty(MavensMateFile.prototype, 'isMetaFile', {\n  get: function() {\n    return util.endsWith(this.path, '-meta.xml');\n  }\n});\n\n/**\n * Id of the file on the server\n */\nObject.defineProperty(MavensMateFile.prototype, 'id', {\n  get: function() {\n    try {\n      if (this.isDirectory) {\n        throw new Error('Cannot get server id for directory.');\n      } else {\n        // determine id (useful for lightning/apex/vf types bc tooling api is preferential to ids)\n        if (this.isLightningType && this.project) {\n          var lightningIndex = this.project.getLightningIndexSync();\n          return _.find(lightningIndex, { AuraDefinitionBundle : { DeveloperName: this.lightningBaseName }, DefType: this.lightningType }).Id;\n        } else if (this.project) {\n          return this.project.getLocalStore()[this.basename].id;\n        }\n      }\n    } catch(e){\n      logger.debug('Could not determine metadata id: '+e.message);\n    }\n  }\n});\n\nObject.defineProperty(MavensMateFile.prototype, 'localStoreEntry', {\n  get: function() {\n    try {\n      if (this.isDirectory || this.isLightningType) {\n        throw new Error('Cannot get local store entry for directories or lightning types currently.');\n      } else {\n        return this.project.getLocalStore()[this.basename];\n      }\n    } catch(e){\n      logger.debug('Could not determine local store entry: '+e.message);\n    }\n  }\n});\n\nObject.defineProperty(MavensMateFile.prototype, 'serverCopy', {\n  get: function() {\n    var self = this;\n    return new Promise(function(resolve, reject) {\n      try {\n        if (self.isDirectory || self.isLightningType) {\n          throw new Error('Cannot get server contents for directories or lightning types currently.');\n        } else {\n          if (!self.project) {\n            throw new Error('Cannot get server contents without a valid project instance.');\n          }\n          var supportedTypeXmlNames = ['ApexClass','ApexPage','ApexComponent','ApexTrigger'];\n          if (supportedTypeXmlNames.indexOf(self.type.xmlName) === -1) {\n            throw new Error('serverContents only supports Apex types.');\n          }\n\n          var bodyField = (self.type.xmlName === 'ApexPage' || self.type.xmlName === 'ApexComponent') ? 'Markup' : 'Body';\n          var soql = 'Select LastModifiedById, LastModifiedDate, LastModifiedBy.Name, '+bodyField+' From '+self.type.xmlName+' Where Name = \\''+self.name+'\\'';\n          self.project.sfdcClient.conn.query(soql, function(err, result) {\n            if (err) {\n              logger.debug('could not get server contents: '+err.message);\n              return reject(err);\n            } else if (result.records.length == 0) {\n              var err = new Error('Server copy query returned no results: ' + soql);\n              logger.debug(err.message);\n              return reject(err);\n            }\n            result.records[0].Body = result.records[0][bodyField];\n            resolve(result.records[0]);\n          });\n        }\n      } catch(e){\n        logger.debug('Could not determine local store entry: '+e.message);\n        reject(e);\n      }\n    });\n  }\n});\n\n/**\n * local files in this directory\n */\nObject.defineProperty(MavensMateFile.prototype, 'localMembers', {\n  get: function() {\n    if (!this.isDirectory) {\n      throw new Error('localMembers property is only supported for directory types');\n    }\n    var self = this;\n    var contents = [];\n    var directoryFiles = fs.readdirSync(self.path);\n    _.each(directoryFiles, function(f) {\n      contents.push(new MavensMateFile({ path: path.join(self.path, f), project: self.project }));\n      if (!path.extname(f)) {\n        var subDirectoryFiles = fs.readdirSync(path.join(self.path, f));\n        _.each(subDirectoryFiles, function(sf) {\n          contents.push(new MavensMateFile({ path: path.join(self.path, f, sf), project: self.project }));\n        });\n      }\n    });\n    return contents;\n  }\n});\n\n/**\n * Returns base name of the folder (e.g. path/to/src/documents/foldername/foo.txt -> foldername)\n * Currently, salesforce does not support folders nested deeper than 1 level\n * @return {String}\n */\nObject.defineProperty(MavensMateFile.prototype, 'folderBaseName', {\n  get: function() {\n    var folderPath = path.dirname(this.path);\n    return path.basename(folderPath);\n  },\n});\n\n/**\n * template\n * @return {Object}\n */\nObject.defineProperty(MavensMateFile.prototype, 'template', {\n  get: function() {\n    return this._template;\n  },\n  set: function(value) {\n    this._template = value;\n  }\n});\n\n/**\n * Returns base name of the package.xml subscription\n * @return {String}\n */\nObject.defineProperty(MavensMateFile.prototype, 'subscriptionName', {\n  get: function() {\n    if (this.type.inFolder) {\n      if (this.type.xmlName === 'Document') {\n        return this.folderBaseName + '/' + this.name + '.' + this.extension;\n      } else {\n        return this.folderBaseName + '/' + this.name;\n      }\n    } else {\n      return this.name;\n    }\n  },\n});\n\nMavensMateFile.prototype.setTypeByXmlName = function(xmlName) {\n  this.type = this.metadataHelper.getTypeByXmlName(xmlName);\n};\n\nMavensMateFile.prototype.setAbstractPath = function() {\n  this.path = this.type.directoryName + '/' + this.name + '.' + this.type.suffix;\n  this.extension = this.type.suffix;\n  this.basename = path.basename(this.path);\n  this.name = this.basename.split('.')[0];\n  this.folderName = path.basename(path.dirname(this.path));\n};\n\n/**\n * Returns the MavensMate-Templates template body based on this.template\n * @return {Promise} - resolves with {String} template body\n */\nMavensMateFile.prototype._getTemplateBody = function() {\n  var self = this;\n  return new Promise(function(resolve, reject) {\n    try {\n      var templateService = new TemplateService();\n      resolve(templateService.getTemplateBody(self.type.xmlName, self.template.file_name));\n    } catch(e) {\n      logger.error('Could not get template body', e);\n      reject(e);\n    }\n  });\n};\n\nMavensMateFile.prototype.mergeTemplate = function() {\n  var self = this;\n  return new Promise(function(resolve, reject) {\n    var apiName = self.name;\n    self._getTemplateBody()\n      .then(function(templateBody) {\n        resolve(swig.render(templateBody, { locals: self.templateValues }));\n      })\n      .catch(function(err) {\n        reject(err);\n      })\n      .done();\n    });\n};\n\n/**\n * Renders template and writes to appropriate destination\n * @param  {String} deployPath\n * @return {Promise}\n */\nMavensMateFile.prototype.renderAndWriteToDisk = function(destination) {\n  var self = this;\n  return new Promise(function(resolve, reject) {\n    var apiName = self.name;\n    self._getTemplateBody()\n      .then(function(templateBody) {\n        var filePath = path.join(destination, self.type.directoryName, [apiName,self.type.suffix].join('.'));\n        var fileBody = swig.render(templateBody, { locals: self.templateValues });\n        fs.outputFileSync(filePath, fileBody);\n\n        if (self.hasMetaFile) {\n          var metaFilePath = path.join(destination, self.type.directoryName, [apiName,self.type.suffix+'-meta.xml'].join('.'));\n          var metaFileBody = swig.renderFile(path.join(__dirname, 'templates', 'meta.xml'), {\n            metadata: self,\n            apiVersion: config.get('mm_api_version')\n          });\n          fs.outputFileSync(metaFilePath, metaFileBody);\n        }\n        resolve();\n      })\n      .catch(function(err) {\n        reject(new Error('Could not write metadata file based on template: '+err));\n      })\n      .done();\n    });\n};\n\nMavensMateFile.prototype.writeToDiskSync = function(body) {\n  body = body || '';\n  if (this.isDirectory && this.path) {\n    fs.ensureDirSync(this.path);\n  } else if (!this.isDirectory && this.path) {\n    fs.outputFileSync(this.path, body);\n  }\n};\n\nMavensMateFile.prototype.deleteLocally = function() {\n  if (this.hasMetaFile && fs.existsSync(this.path+'-meta.xml')) {\n    fs.removeSync(this.path+'-meta.xml');\n  }\n  if (this.existsOnFileSystem) {\n    fs.removeSync(this.path);\n  }\n};\n\nmodule.exports.createFileInstances = function(paths, project) {\n  var files = [];\n  _.each(paths, function(p) {\n    files.push(new MavensMateFile({ path: p, project: project }));\n  });\n  return files;\n};\n\nmodule.exports.getLightningBundleItemFiles = function(files) {\n  return _.filter(files, function(f) { return f.classification === types.LIGHTNING_BUNDLE_ITEM; });\n};\n\nmodule.exports.getToolingFiles = function(files, exludeToolingMetadata) {\n  return _.filter(files, function(f) { return !exludeToolingMetadata && f.isToolingType; });\n};\n\nmodule.exports.getMetadataApiFiles = function(files, exludeToolingMetadata) {\n  return _.filter(files, function(f) {\n    if (f.isMetaFile) {\n      return true;\n    } else if (f.classification === types.LIGHTNING_BUNDLE_ITEM) {\n      return false;\n    } else if (exludeToolingMetadata && f.isToolingType) {\n      return false;\n    }\n    return true;\n  });\n};\n\nmodule.exports.createPackageSubscription = function(files, projectPackageXml, exludeToolingMetadata) {\n  var subscription = {};\n  var projectSubscription = {};\n  if (projectPackageXml) {\n    projectSubscription = projectPackageXml.subscription;\n  }\n  _.each(files, function(f) {\n    if (f.isToolingType && exludeToolingMetadata) {\n      return; // (continue)\n    }\n    if (f.classification === types.TOP_LEVEL_METADATA_DIRECTORY && projectSubscription) {\n      // classes, ApexClass\n      subscription[f.type.xmlName] = projectSubscription[f.type.xmlName];\n    } else if (f.classification === types.TOP_LEVEL_METADATA_FILE) {\n      if (subscription[f.type.xmlName]) {\n        if (subscription[f.type.xmlName] !== '*') {\n          subscription[f.type.xmlName].push(f.packageName);\n        }\n      } else {\n        subscription[f.type.xmlName] = [ f.packageName ];\n      }\n    } else if (f.classification === types.METADATA_FOLDER || f.classification === types.METADATA_FOLDER_ITEM) {\n      if (subscription[f.type.xmlName]) {\n        subscription[f.type.xmlName].push(f.packageName);\n      } else {\n        subscription[f.type.xmlName] = [ f.packageName ];\n      }\n    } else if (f.classification === types.LIGHTNING_BUNDLE) {\n      if (subscription[f.type.xmlName]) {\n        subscription[f.type.xmlName].push(f.packageName);\n      } else {\n        subscription[f.type.xmlName] = [ f.packageName ];\n      }\n    }\n  });\n  return subscription;\n};\n\nmodule.exports.types = types;\nmodule.exports.MavensMateFile = MavensMateFile;\n\n\n\n/** WEBPACK FOOTER **\n ** ../mavensmate/app/lib/file.js\n **/","module.exports = require(\"express\");\n\n\n/*****************\n ** WEBPACK FOOTER\n ** external \"express\"\n ** module id = 12\n ** module chunks = 0\n **/","/**\n * @file Store of async requests submitted to the server\n * @author Joseph Ferraro <@joeferraro>\n */\n\n'use strict';\n\nvar _         = require('lodash');\nvar uuid      = require('node-uuid');\nvar events    = require('events');\nvar logger    = require('winston');\nvar inherits  = require('inherits');\n\nvar RequestStore = function(){};\n\ninherits(RequestStore, events.EventEmitter);\n\n/**\n * Hash of requestId --> request\n * @type {Object}\n */\nRequestStore.prototype.requests = {};\n\n/**\n * Adds a request to the store\n * @param {Promise} thenable\n */\nRequestStore.prototype.add = function(thenable) {\n  var self = this;\n  var request, requestId;\n  requestId = uuid.v1();\n  request = {\n    id: requestId,\n    complete: false,\n    thenable: thenable\n  };\n  thenable\n    .then(function(res) {\n      self._finish(requestId, null, res);\n    })\n    .catch(function(err) {\n      self._finish(requestId, err, null);\n    });\n  this.requests[requestId] = request;\n  this.emit('new-request', requestId);\n  return requestId;\n};\n\n/**\n * Checks whether the request is complete\n * @param  {String}  requestId\n * @return {Boolean}           whether the request is complete\n */\nRequestStore.prototype.isRequestComplete = function(requestId) {\n  return this.requests[requestId].complete;\n};\n\n/**\n * Returns the result for a requestid\n * @param  {String} requestId\n * @return {Object}\n */\nRequestStore.prototype.getResultForId = function(requestId) {\n  var p = _.clone(this.requests[requestId]);\n  delete p.thenable;\n  delete this.requests[requestId];\n  return p;\n};\n\n/**\n * TODO: we're doing a lot of gymnastics with the error/result objects, need to standardize with command.js's respond\n * @param  {String} requestId  - id of the job to mark as complete\n * @param  {Object} error  - should be an error object, but see TODO\n * @param  {Object} result - result object, typically formatted like { response: {  } }\n * @return {Nothing}\n */\nRequestStore.prototype._finish = function(requestId, error, result) {\n  logger.debug('finishing requestId: '+requestId);\n  if (error) {\n    logger.error(error);\n  } else if (result) {\n    logger.silly(result);\n  }\n  if (error && error instanceof Error) {\n    this.requests[requestId].error = error.message;\n    this.requests[requestId].stack = error.stack;\n  } else if (result) {\n    this.requests[requestId].result = result;\n  } else {\n    logger.error('Could not set request', requestId, 'as finished', error, result)\n    throw new Error('Could not finish request '+requestId);\n  }\n  this.emit('finish-request', requestId);\n  this.requests[requestId].complete = true;\n};\n\nmodule.exports = new RequestStore();\n\n\n/** WEBPACK FOOTER **\n ** ../mavensmate/app/lib/request-store.js\n **/","module.exports = require('electron');\n\n\n/*****************\n ** WEBPACK FOOTER\n ** external \"require('electron')\"\n ** module id = 14\n ** module chunks = 0\n **/","/**\n * @file Metadata helper classes\n * @author Joseph Ferraro <@joeferraro>\n */\n\n'use strict';\nvar _               = require('lodash');\nvar fs              = require('fs-extra');\nvar path            = require('path');\nvar util            = require('./util');\nvar logger          = require('winston');\n// var MavensMateFile  = require('./file').MavensMateFile;\n\nvar LightningBundle, MetadataHelper;\n\n/**\n * Represents an element of Salesforce.com metadata\n * @constructor\n * @param {Project} project - project instance\n * @param {String} path - path to lightning bundle\n */\nLightningBundle = function(path, project) {\n  this.project = project;\n  this.path = path;\n};\n\n// Object.defineProperty(LightningBundle.prototype, 'bundleItems', {\n//   get: function() {\n//     var self = this;\n//     var bundleFiles = [];\n//     var bfs = fs.readdirSync(self.path);\n//     _.each(bfs, function(bf) {\n//       bundleFiles.push(new MavensMateFile({ project: self.project, path: bf }));\n//     });\n//   }\n// });\n\nObject.defineProperty(LightningBundle.prototype, 'serverContents', {\n  get: function() {\n    // TODO\n  }\n});\n\nMetadataHelper = function(opts) {\n  util.applyProperties(this, opts);\n  if (this.sfdcClient) {\n    if (this.sfdcClient.describeCache && this.sfdcClient.describeCache.metadataObjects) {\n      this.describe = this.sfdcClient.describeCache;\n    } else {\n      this.describe = {};\n      this.describe.metadataObjects = this.parentTypes;\n    }\n  } else {\n    this.describe = {};\n    this.describe.metadataObjects = this.parentTypes;\n  }\n};\n\n/**\n * Attempts to get the metadata type based on the supplied path (could be file path or directory path)\n * @param  {String} p - /path/to/some/metadata.foo\n * @return {Object}\n */\nMetadataHelper.prototype.getTypeByPath = function(p) {\n  var parentPath = path.dirname(p);\n  var grandparentPath = path.dirname(path.dirname(p));\n  if (!path.extname(p) && path.basename(parentPath) === 'aura') {\n    return this.getTypeByDirectoryName('aura');\n  } else if (path.basename(grandparentPath) === 'aura') {\n    return this.getTypeByDirectoryName('aura');\n  } else {\n    var folderBasedTypes = _.where(this.parentTypes, { 'inFolder': true });\n\n    // directory handling\n    if (!path.extname(p)) {\n\n      // foo/bar/src/classes\n      var directoryMatch = _.find(this.parentTypes, { 'directoryName': path.basename(p) });\n      if (directoryMatch) {\n        return this.getTypeByDirectoryName(path.basename(p));\n      }\n\n      //foo/bar/src/reports/myreportfolder\n      var parentFolderDirectoryMatch = _.find(folderBasedTypes, { 'directoryName': path.basename(parentPath) });\n      if (parentFolderDirectoryMatch) {\n        return this.getTypeByDirectoryName(path.basename(parentPath));\n      }\n    }\n\n    var ext;\n    if (util.endsWith(p, '-meta.xml')) {\n      ext = p.replace('-meta.xml', '').split('.').pop();\n    } else {\n      ext = p.split('.').pop();\n    }\n    var typeBySuffix = this.getTypeBySuffix(ext);\n    if (typeBySuffix) {\n      return typeBySuffix;\n    }\n\n    //deeply-nested file handling (report/email template/document)\n    //foo/bar/src/email/myfolder/foo.email\n    var grandparentFolderDirectoryMatch = _.find(folderBasedTypes, { 'directoryName': path.basename(grandparentPath) });\n    if (grandparentFolderDirectoryMatch) {\n      return this.getTypeByDirectoryName(path.basename(grandparentPath));\n    }\n\n    // email templates, for example, will have a -meta.xml file that holds folder metadata\n    if (util.endsWith(p, '-meta.xml')) {\n      return this.getTypeByDirectoryName(path.basename(parentPath));\n    }\n  }\n};\n\n/**\n * Gets metadata type based on the supplied name\n * @param  {String} name - ApexClass|ApexPage|etc.\n * @return {Object}\n */\nMetadataHelper.prototype.getTypeByXmlName = function(name) {\n  var type;\n  var self = this;\n  type = _.find(self.describe.metadataObjects, function(metadataType) {\n    return metadataType.xmlName === name;\n  });\n  if (!type) {\n    type = _.find(self.childTypes, function(childType) {\n      return childType.xmlName === name;\n    });\n  }\n  if (!type) {\n    type = _.find(self.parentTypes, function(parentType) {\n      return parentType.xmlName === name;\n    });\n  }\n  logger.silly('getting metadata type by name: '+name);\n  logger.silly(type);\n  return type;\n};\n\n/**\n * Gets metadata type based on the supplied suffix\n * @param  {String} suffix - cls|trigger|page|component|etc.\n * @return {Object}\n */\nMetadataHelper.prototype.getTypeBySuffix = function(suffix) {\n  var type;\n  var self = this;\n  if (suffix.indexOf('.') >= 0) {\n    suffix = suffix.replace(/\\./g, '');\n  }\n  _.each(self.describe.metadataObjects, function(metadataType) {\n    if (metadataType.suffix === suffix) {\n      type = metadataType;\n      return false;\n    }\n  });\n  return type;\n};\n\n/**\n * Gets metadata type based on the supplied directory name\n * @param  {String} suffix - pages|triggers|classes|etc.\n * @return {Object}\n */\nMetadataHelper.prototype.getTypeByDirectoryName = function(dirName) {\n  var type;\n  var self = this;\n  _.each(self.describe.metadataObjects, function(metadataType) {\n    if (metadataType.directoryName === dirName) {\n      type = metadataType;\n      return false;\n    }\n  });\n  if (type === undefined) {\n    _.each(self.parentTypes, function(parentType) {\n      if (parentType.directoryName === dirName) {\n        type = parentType;\n        return false;\n      }\n    });\n  }\n  return type;\n};\n\nMetadataHelper.prototype.childTypes = [\n    {'xmlName' : 'ActionOverride', 'tagName' : 'actionOverrides', 'parentXmlName' : 'CustomObject' },\n    {'xmlName' : 'CustomField', 'tagName' : 'fields', 'parentXmlName' : 'CustomObject' },\n    {'xmlName' : 'BusinessProcess', 'tagName' : 'businessProcesses', 'parentXmlName' : 'CustomObject' },\n    {'xmlName' : 'RecordType', 'tagName' : 'recordTypes', 'parentXmlName' : 'CustomObject' },\n    {'xmlName' : 'WebLink', 'tagName' : 'webLinks', 'parentXmlName' : 'CustomObject' },\n    {'xmlName' : 'ValidationRule', 'tagName' : 'validationRules', 'parentXmlName' : 'CustomObject' },\n    {'xmlName' : 'NamedFilter', 'tagName' : 'namedFilters', 'parentXmlName' : 'CustomObject' },\n    {'xmlName' : 'SharingReason', 'tagName' : 'sharingReasons', 'parentXmlName' : 'CustomObject' },\n    {'xmlName' : 'ListView', 'tagName' : 'listViews', 'parentXmlName' : 'CustomObject' },\n    {'xmlName' : 'FieldSet', 'tagName' : 'fieldSets', 'parentXmlName' : 'CustomObject' },\n    {'xmlName' : 'SharingRecalculation', 'tagName' : 'sharingRecalculations', 'parentXmlName' : 'CustomObject' },\n    {'xmlName' : 'CompactLayout', 'tagName' : 'compactLayouts', 'parentXmlName' : 'CustomObject' },\n    {'xmlName' : 'CustomLabel', 'tagName' : 'customLabels', 'parentXmlName' : 'CustomLabels' },\n    {'xmlName' : 'SharingCriteriaRule', 'tagName' : 'sharingCriteriaRules', 'parentXmlName' : 'SharingRules' },\n    {'xmlName' : 'SharingOwnerRule', 'tagName' : 'sharingOwnerRules', 'parentXmlName' : 'SharingRules' },\n    {'xmlName' : 'SharingTerritoryRule', 'tagName' : 'sharingTerritoryRules', 'parentXmlName' : 'SharingRules' },\n    {'xmlName' : 'WorkflowAlert', 'tagName' : 'alerts', 'parentXmlName' : 'Workflow' },\n    {'xmlName' : 'WorkflowTask', 'tagName' : 'tasks', 'parentXmlName' : 'Workflow' },\n    {'xmlName' : 'WorkflowOutboundMessage', 'tagName' : 'outboundMessages', 'parentXmlName' : 'Workflow' },\n    {'xmlName' : 'WorkflowFieldUpdate', 'tagName' : 'fieldUpdates', 'parentXmlName' : 'Workflow' },\n    {'xmlName' : 'WorkflowRule', 'tagName' : 'rules', 'parentXmlName' : 'Workflow' },\n    {'xmlName' : 'WorkflowEmailRecipient', 'tagName' : 'emailRecipients', 'parentXmlName' : 'Workflow' },\n    {'xmlName' : 'WorkflowTimeTrigger', 'tagName' : 'timeTriggers', 'parentXmlName' : 'Workflow' },\n    {'xmlName' : 'WorkflowActionReference', 'tagName' : 'actionReferences', 'parentXmlName' : 'Workflow' }\n];\n\nMetadataHelper.prototype.parentTypes = [\n    {\n        'directoryName': 'customMetadata',\n        'inFolder': false,\n        'metaFile': false,\n        'suffix': 'md',\n        'xmlName': 'CustomMetadata'\n    },\n    {\n        'directoryName': 'installedPackages',\n        'inFolder': false,\n        'metaFile': false,\n        'suffix': 'installedPackage',\n        'xmlName': 'InstalledPackage'\n    },\n    {\n        'childXmlNames': 'CustomLabel',\n        'directoryName': 'labels',\n        'inFolder': false,\n        'metaFile': false,\n        'suffix': 'labels',\n        'xmlName': 'CustomLabels'\n    },\n    {\n        'directoryName': 'staticresources',\n        'inFolder': false,\n        'metaFile': true,\n        'suffix': 'resource',\n        'xmlName': 'StaticResource'\n    },\n    {\n        'directoryName': 'scontrols',\n        'inFolder': false,\n        'metaFile': true,\n        'suffix': 'scf',\n        'xmlName': 'Scontrol'\n    },\n    {\n        'directoryName': 'components',\n        'inFolder': false,\n        'metaFile': true,\n        'suffix': 'component',\n        'xmlName': 'ApexComponent'\n    },\n    {\n        'directoryName': 'pages',\n        'inFolder': false,\n        'metaFile': true,\n        'suffix': 'page',\n        'xmlName': 'ApexPage'\n    },\n    {\n        'directoryName': 'queues',\n        'inFolder': false,\n        'metaFile': false,\n        'suffix': 'queue',\n        'xmlName': 'Queue'\n    },\n    {\n        'childXmlNames': [\n            'CustomField',\n            'BusinessProcess',\n            'CompactLayout',\n            'RecordType',\n            'WebLink',\n            'ValidationRule',\n            'NamedFilter',\n            'SharingReason',\n            'ListView',\n            'FieldSet',\n            'ApexTriggerCoupling'\n        ],\n        'directoryName': 'objects',\n        'inFolder': false,\n        'metaFile': false,\n        'suffix': 'object',\n        'xmlName': 'CustomObject'\n    },\n    {\n        'directoryName': 'reportTypes',\n        'inFolder': false,\n        'metaFile': false,\n        'suffix': 'reportType',\n        'xmlName': 'ReportType'\n    },\n    {\n        'directoryName': 'reports',\n        'inFolder': true,\n        'metaFile': false,\n        'suffix': 'report',\n        'xmlName': 'Report'\n    },\n    {\n        'directoryName': 'dashboards',\n        'inFolder': true,\n        'metaFile': false,\n        'suffix': 'dashboard',\n        'xmlName': 'Dashboard'\n    },\n    {\n        'directoryName': 'analyticSnapshots',\n        'inFolder': false,\n        'metaFile': false,\n        'suffix': 'snapshot',\n        'xmlName': 'AnalyticSnapshot'\n    },\n    {\n        'directoryName': 'layouts',\n        'inFolder': false,\n        'metaFile': false,\n        'suffix': 'layout',\n        'xmlName': 'Layout'\n    },\n    {\n        'directoryName': 'portals',\n        'inFolder': false,\n        'metaFile': false,\n        'suffix': 'portal',\n        'xmlName': 'Portal'\n    },\n    {\n        'directoryName': 'documents',\n        'inFolder': true,\n        'metaFile': true,\n        'xmlName': 'Document'\n    },\n    {\n        'directoryName': 'weblinks',\n        'inFolder': false,\n        'metaFile': false,\n        'suffix': 'weblink',\n        'xmlName': 'CustomPageWebLink'\n    },\n    {\n        'directoryName': 'quickActions',\n        'inFolder': false,\n        'metaFile': false,\n        'suffix': 'quickAction',\n        'xmlName': 'QuickAction'\n    },\n    {\n        'childXmlNames': {\n            '@xsi:nil': 'true'\n        },\n        'directoryName': 'flexipages',\n        'inFolder': false,\n        'metaFile': false,\n        'suffix': 'flexipage',\n        'xmlName': 'FlexiPage'\n    },\n    {\n        'directoryName': 'tabs',\n        'inFolder': false,\n        'metaFile': false,\n        'suffix': 'tab',\n        'xmlName': 'CustomTab'\n    },\n    {\n        'directoryName': 'customApplicationComponents',\n        'inFolder': false,\n        'metaFile': false,\n        'suffix': 'customApplicationComponent',\n        'xmlName': 'CustomApplicationComponent'\n    },\n    {\n        'directoryName': 'applications',\n        'inFolder': false,\n        'metaFile': false,\n        'suffix': 'app',\n        'xmlName': 'CustomApplication'\n    },\n    {\n        'directoryName': 'letterhead',\n        'inFolder': false,\n        'metaFile': false,\n        'suffix': 'letter',\n        'xmlName': 'Letterhead'\n    },\n    {\n        'directoryName': 'email',\n        'inFolder': true,\n        'metaFile': true,\n        'suffix': 'email',\n        'xmlName': 'EmailTemplate'\n    },\n    {\n        'childXmlNames': [\n            'WorkflowFieldUpdate',\n            'WorkflowKnowledgePublish',\n            'WorkflowQuickCreate',\n            'WorkflowTask',\n            'WorkflowChatterPost',\n            'WorkflowAlert',\n            'WorkflowSend',\n            'WorkflowOutboundMessage',\n            'WorkflowActionFlow',\n            'WorkflowApex',\n            'WorkflowRule'\n        ],\n        'directoryName': 'workflows',\n        'inFolder': false,\n        'metaFile': false,\n        'suffix': 'workflow',\n        'xmlName': 'Workflow'\n    },\n    {\n        'childXmlNames': 'AssignmentRule',\n        'directoryName': 'assignmentRules',\n        'inFolder': false,\n        'metaFile': false,\n        'suffix': 'assignmentRules',\n        'xmlName': 'AssignmentRules'\n    },\n    {\n        'childXmlNames': 'AutoResponseRule',\n        'directoryName': 'autoResponseRules',\n        'inFolder': false,\n        'metaFile': false,\n        'suffix': 'autoResponseRules',\n        'xmlName': 'AutoResponseRules'\n    },\n    {\n        'childXmlNames': 'EscalationRule',\n        'directoryName': 'escalationRules',\n        'inFolder': false,\n        'metaFile': false,\n        'suffix': 'escalationRules',\n        'xmlName': 'EscalationRules'\n    },\n    {\n        'directoryName': 'roles',\n        'inFolder': false,\n        'metaFile': false,\n        'suffix': 'role',\n        'xmlName': 'Role'\n    },\n    {\n        'directoryName': 'groups',\n        'inFolder': false,\n        'metaFile': false,\n        'suffix': 'group',\n        'xmlName': 'Group'\n    },\n    {\n        'directoryName': 'postTemplates',\n        'inFolder': false,\n        'metaFile': false,\n        'suffix': 'postTemplate',\n        'xmlName': 'PostTemplate'\n    },\n    {\n        'directoryName': 'approvalProcesses',\n        'inFolder': false,\n        'metaFile': false,\n        'suffix': 'approvalProcess',\n        'xmlName': 'ApprovalProcess'\n    },\n    {\n        'directoryName': 'homePageComponents',\n        'inFolder': false,\n        'metaFile': false,\n        'suffix': 'homePageComponent',\n        'xmlName': 'HomePageComponent'\n    },\n    {\n        'directoryName': 'homePageLayouts',\n        'inFolder': false,\n        'metaFile': false,\n        'suffix': 'homePageLayout',\n        'xmlName': 'HomePageLayout'\n    },\n    {\n        'directoryName': 'objectTranslations',\n        'inFolder': false,\n        'metaFile': false,\n        'suffix': 'objectTranslation',\n        'xmlName': 'CustomObjectTranslation'\n    },\n    {\n        'directoryName': 'flows',\n        'inFolder': false,\n        'metaFile': false,\n        'suffix': 'flow',\n        'xmlName': 'Flow'\n    },\n    {\n        'directoryName': 'classes',\n        'inFolder': false,\n        'metaFile': true,\n        'suffix': 'cls',\n        'xmlName': 'ApexClass'\n    },\n    {\n        'directoryName': 'triggers',\n        'inFolder': false,\n        'metaFile': true,\n        'suffix': 'trigger',\n        'xmlName': 'ApexTrigger'\n    },\n    {\n        'directoryName': 'profiles',\n        'inFolder': false,\n        'metaFile': false,\n        'suffix': 'profile',\n        'xmlName': 'Profile'\n    },\n    {\n        'directoryName': 'permissionsets',\n        'inFolder': false,\n        'metaFile': false,\n        'suffix': 'permissionset',\n        'xmlName': 'PermissionSet'\n    },\n    {\n        'directoryName': 'datacategorygroups',\n        'inFolder': false,\n        'metaFile': false,\n        'suffix': 'datacategorygroup',\n        'xmlName': 'DataCategoryGroup'\n    },\n    {\n        'directoryName': 'remoteSiteSettings',\n        'inFolder': false,\n        'metaFile': false,\n        'suffix': 'remoteSite',\n        'xmlName': 'RemoteSiteSetting'\n    },\n    {\n        'directoryName': 'authproviders',\n        'inFolder': false,\n        'metaFile': false,\n        'suffix': 'authprovider',\n        'xmlName': 'AuthProvider'\n    },\n    {\n        'childXmlNames': [\n            'LeadOwnerSharingRule',\n            'LeadCriteriaBasedSharingRule'\n        ],\n        'directoryName': 'leadSharingRules',\n        'inFolder': false,\n        'metaFile': false,\n        'suffix': 'sharingRules',\n        'xmlName': 'LeadSharingRules'\n    },\n    {\n        'childXmlNames': [\n            'CampaignOwnerSharingRule',\n            'CampaignCriteriaBasedSharingRule'\n        ],\n        'directoryName': 'campaignSharingRules',\n        'inFolder': false,\n        'metaFile': false,\n        'suffix': 'sharingRules',\n        'xmlName': 'CampaignSharingRules'\n    },\n    {\n        'childXmlNames': [\n            'CaseOwnerSharingRule',\n            'CaseCriteriaBasedSharingRule'\n        ],\n        'directoryName': 'caseSharingRules',\n        'inFolder': false,\n        'metaFile': false,\n        'suffix': 'sharingRules',\n        'xmlName': 'CaseSharingRules'\n    },\n    {\n        'childXmlNames': [\n            'ContactOwnerSharingRule',\n            'ContactCriteriaBasedSharingRule'\n        ],\n        'directoryName': 'contactSharingRules',\n        'inFolder': false,\n        'metaFile': false,\n        'suffix': 'sharingRules',\n        'xmlName': 'ContactSharingRules'\n    },\n    {\n        'childXmlNames': [\n            'OpportunityOwnerSharingRule',\n            'OpportunityCriteriaBasedSharingRule'\n        ],\n        'directoryName': 'opportunitySharingRules',\n        'inFolder': false,\n        'metaFile': false,\n        'suffix': 'sharingRules',\n        'xmlName': 'OpportunitySharingRules'\n    },\n    {\n        'childXmlNames': [\n            'AccountOwnerSharingRule',\n            'AccountCriteriaBasedSharingRule'\n        ],\n        'directoryName': 'accountSharingRules',\n        'inFolder': false,\n        'metaFile': false,\n        'suffix': 'sharingRules',\n        'xmlName': 'AccountSharingRules'\n    },\n    {\n        'childXmlNames': [\n            'CustomObjectOwnerSharingRule',\n            'CustomObjectCriteriaBasedSharingRule'\n        ],\n        'directoryName': 'customObjectSharingRules',\n        'inFolder': false,\n        'metaFile': false,\n        'suffix': 'sharingRules',\n        'xmlName': 'CustomObjectSharingRules'\n    },\n    {\n        'directoryName': 'communities',\n        'inFolder': false,\n        'metaFile': false,\n        'suffix': 'community',\n        'xmlName': 'Community'\n    },\n    {\n        'directoryName': 'callCenters',\n        'inFolder': false,\n        'metaFile': false,\n        'suffix': 'callCenter',\n        'xmlName': 'CallCenter'\n    },\n    {\n        'directoryName': 'connectedApps',\n        'inFolder': false,\n        'metaFile': false,\n        'suffix': 'connectedApp',\n        'xmlName': 'ConnectedApp'\n    },\n    {\n        'directoryName': 'samlssoconfigs',\n        'inFolder': false,\n        'metaFile': false,\n        'suffix': 'samlssoconfig',\n        'xmlName': 'SamlSsoConfig'\n    },\n    {\n        'directoryName': 'synonymDictionaries',\n        'inFolder': false,\n        'metaFile': false,\n        'suffix': 'synonymDictionary',\n        'xmlName': 'SynonymDictionary'\n    },\n    {\n        'directoryName': 'settings',\n        'inFolder': false,\n        'metaFile': false,\n        'suffix': 'settings',\n        'xmlName': 'Settings'\n    },\n    {\n      'directoryName': 'aura',\n      'inFolder': false,\n      'metaFile': false,\n      'xmlName': 'AuraDefinitionBundle'\n    }\n];\n\nMetadataHelper.prototype.inFolderDirectoryNames = function() {\n  var directoryNames = [];\n  var self = this;\n  var parentTypes = (self.describe.metadataObjects && self.describe.metadataObjects.length > 0) ? self.describe.metadataObjects : self.parentTypes;\n  _.each(parentTypes, function(metadataType) {\n    if (metadataType.inFolder) {\n      directoryNames.push(metadataType.directoryName);\n    }\n  });\n  return directoryNames;\n};\n\nmodule.exports.LightningBundle = LightningBundle;\nmodule.exports.MetadataHelper = MetadataHelper;\n\n\n/** WEBPACK FOOTER **\n ** ../mavensmate/app/lib/metadata.js\n **/","/**\n * @file Responsible for CRUD of Lightning metadata\n * @author Joseph Ferraro <@joeferraro>\n */\n\n'use strict';\n\nvar Promise = require('bluebird');\nvar _       = require('lodash');\nvar path    = require('path');\nvar logger  = require('winston');\nvar util    = require('../util');\n\n// TODO: move source strings to swig templates\n\nvar LightningService = function(project){\n  this.project = project;\n};\n\nLightningService.prototype.getAll = function() {\n  var self = this;\n  return new Promise(function(resolve, reject) {\n    self.project.sfdcClient.conn.tooling.query('Select Id, AuraDefinitionBundleId,AuraDefinitionBundle.DeveloperName,DefType,Format FROM AuraDefinition', function(err, res) {\n      if (err) {\n        reject(err);\n      } else {\n        resolve(res.records);\n      }\n    });\n  });\n};\n\nLightningService.prototype.createBundle = function(apiName, description) {\n  var self = this;\n  logger.debug('Creating lightning bundle: '+apiName);\n  return new Promise(function(resolve, reject) {\n    self.project.sfdcClient.conn.tooling.sobject('AuraDefinitionBundle').create({\n      Description: description, // my description\n      DeveloperName: apiName, // cool_bro\n      MasterLabel: apiName, // cool bro\n      ApiVersion: self.project.sfdcClient.apiVersion || '32.0'\n    }, function(err, res) {\n      if (err) {\n        reject(err);\n      } else {\n        logger.debug('Lightning bundle creation result: ');\n        logger.debug(res);\n        resolve(res);\n      }\n    });\n  });\n};\n\nLightningService.prototype.deleteBundle = function(bundleId) {\n  var self = this;\n  return new Promise(function(resolve, reject) {\n    self.project.sfdcClient.conn.tooling.sobject('AuraDefinitionBundle').delete(bundleId, function(err, res) {\n      if (err) {\n        reject(new Error('Could not delete AuraBundle: '+err.message));\n      } else {\n        resolve(res);\n      }\n    });\n  });\n};\n\nLightningService.prototype.deleteBundleItems = function(mavensmateFiles) {\n  var self = this;\n  return new Promise(function(resolve, reject) {\n    if (mavensmateFiles.length === 0) {\n      return resolve();\n    } else {\n      self.project.getLightningIndex()\n        .then(function(lightningIndex) {\n          logger.debug(lightningIndex);\n          var deleteIds = [];\n          _.each(mavensmateFiles, function(mmf) {\n            var lightningBundleName = mmf.folderName; //mybundle\n            var lightningType = mmf.lightningType;\n            logger.debug('deleting lightning type: '+lightningType);\n            logger.debug('deleting lightningBundleName: '+lightningBundleName);\n            deleteIds.push(_.find(lightningIndex, { AuraDefinitionBundle : { DeveloperName: lightningBundleName }, DefType: lightningType }).Id);\n          });\n          logger.debug('deleting lightning components!!');\n          logger.debug(mavensmateFiles);\n          logger.debug(deleteIds);\n          self.project.sfdcClient.conn.tooling.sobject('AuraDefinition').delete(deleteIds, function(err, res) {\n            if (err) {\n              reject(new Error('Could not delete AuraBundle item: '+err.message));\n            } else {\n              resolve(res);\n            }\n          });\n        })\n        .catch(function(err) {\n          reject(new Error('Could not get delete bundle items: '+err.message));\n        });\n    }\n  });\n};\n\nLightningService.prototype.getBundle = function(bundleId) {\n  var self = this;\n  return new Promise(function(resolve, reject) {\n    self.project.sfdcClient.conn.tooling.query('Select Id, AuraDefinitionBundleId,AuraDefinitionBundle.DeveloperName,DefType,Format FROM AuraDefinition WHERE AuraDefinitionBundleId = \\''+bundleId+'\\'', function(err, res) {\n      if (err) {\n        reject(err);\n      } else {\n        resolve(res);\n      }\n    });\n  });\n};\n\nLightningService.prototype.getBundleItems = function(mavensmateFiles) {\n  var self = this;\n  return new Promise(function(resolve, reject) {\n    if (mavensmateFiles.length === 0) {\n      return resolve();\n    } else {\n      logger.debug('attempting to get index');\n      self.project.getLightningIndex()\n        .then(function(lightningIndex) {\n          logger.debug('got lightning index');\n          logger.debug(lightningIndex);\n          var itemIds = [];\n          _.each(mavensmateFiles, function(mmf) {\n            var lightningBundleName = mmf.folderName; //mybundle\n            var lightningType = mmf.lightningType;\n            logger.debug('getting lightning type: '+lightningType);\n            logger.debug('getting lightningBundleName: '+lightningBundleName);\n            itemIds.push(_.find(lightningIndex, { AuraDefinitionBundle : { DeveloperName: lightningBundleName }, DefType: lightningType }).Id);\n          });\n          logger.debug('getting lightning components!!');\n          logger.debug(itemIds);\n          self.project.sfdcClient.conn.tooling.query('Select Id,AuraDefinitionBundleId,AuraDefinitionBundle.DeveloperName,DefType,Format,Source FROM AuraDefinition WHERE Id IN ('+util.joinForQuery(itemIds)+')', function(err, res) {\n            if (err) {\n              reject(err);\n            } else {\n              resolve(res);\n            }\n          });\n        })\n        .catch(function(err) {\n          reject(new Error('Could not get bundle items: '+err.message));\n        });\n    }\n  });\n};\n\n/**\n * Updates one or more lightning components\n * @param  {Array} - array of File instances\n * @return {Promise}\n */\nLightningService.prototype.update = function(files) {\n  var self = this;\n  return new Promise(function(resolve, reject) {\n    if (files.length === 0) {\n      resolve();\n    } else {\n      self.project.getLightningIndex()\n        .then(function(lightningIndex) {\n          logger.debug(lightningIndex);\n          var updatePayload = [];\n          _.each(files, function(f) {\n            var lightningBundleName = path.basename(path.dirname(f.path)); //mybundle\n            var lightningType = f.lightningType;\n            logger.debug('lightning type: '+lightningType);\n            logger.debug('lightningBundleName: '+lightningBundleName);\n            var payloadItem = {\n              Source: f.body,\n              Id: _.find(lightningIndex, { AuraDefinitionBundle : { DeveloperName: lightningBundleName }, DefType: lightningType }).Id\n            };\n            updatePayload.push(payloadItem);\n          });\n          logger.debug('updating lightning components!!');\n          logger.debug(updatePayload);\n          self.project.sfdcClient.conn.tooling.sobject('AuraDefinition').update(updatePayload, function(err, res) {\n            if (err) {\n              reject(err);\n            } else {\n              resolve(res);\n            }\n          });\n        })\n        .catch(function(err) {\n          reject(new Error('Could not update lightning components: '+err.message));\n        });\n    }\n  });\n};\n\nLightningService.prototype.updateComponent = function(id, source) {\n  var self = this;\n  return new Promise(function(resolve, reject) {\n    self.project.sfdcClient.conn.tooling.sobject('AuraDefinition').update({\n      Id : id,\n      Source : source\n    }, function(err, res) {\n      if (err) {\n        reject(err);\n      } else {\n        resolve(res);\n      }\n    });\n  });\n};\n\nLightningService.prototype.createComponent = function(bundleId) {\n  var self = this;\n  return new Promise(function(resolve, reject) {\n    self.project.sfdcClient.conn.tooling.sobject('AuraDefinition').create({\n      AuraDefinitionBundleId: bundleId,\n      DefType: 'COMPONENT',\n      Format: 'XML',\n      Source: '<aura:component></aura:component>'\n    }, function(err, res) {\n      if (err) {\n        reject(err);\n      } else {\n        resolve(res);\n      }\n    });\n  });\n};\n\nLightningService.prototype.createApplication = function(bundleId) {\n  var self = this;\n  return new Promise(function(resolve, reject) {\n    self.project.sfdcClient.conn.tooling.sobject('AuraDefinition').create({\n      AuraDefinitionBundleId: bundleId,\n      DefType: 'APPLICATION',\n      Format: 'XML',\n      Source: '<aura:application></aura:application>'\n    }, function(err, res) {\n      if (err) {\n        reject(err);\n      } else {\n        resolve(res);\n      }\n    });\n  });\n};\n\nLightningService.prototype.createInterface = function(bundleId) {\n  var self = this;\n  return new Promise(function(resolve, reject) {\n    self.project.sfdcClient.conn.tooling.sobject('AuraDefinition').create({\n      AuraDefinitionBundleId: bundleId,\n      DefType: 'INTERFACE',\n      Format: 'XML',\n      Source: '<aura:interface description=\"Interface template\">\\n\\t<aura:attribute name=\"example\" type=\"String\" default=\"\" description=\"An example attribute.\"/>\\n</aura:interface>'\n    }, function(err, res) {\n      if (err) {\n        reject(err);\n      } else {\n        resolve(res);\n      }\n    });\n  });\n};\n\nLightningService.prototype.createDocumentation = function(bundleId) {\n  var self = this;\n  return new Promise(function(resolve, reject) {\n    self.project.sfdcClient.conn.tooling.sobject('AuraDefinition').create({\n      AuraDefinitionBundleId: bundleId,\n      DefType: 'DOCUMENTATION',\n      Format: 'XML',\n      Source: '<aura:documentation>\\n\\t<aura:description>Documentation</aura:description>\\n\\t<aura:example name=\"ExampleName\" ref=\"exampleComponentName\" label=\"Label\">\\n\\t\\tExample Description\\n\\t</aura:example>\\n</aura:documentation>'\n    }, function(err, res) {\n      if (err) {\n        reject(err);\n      } else {\n        resolve(res);\n      }\n    });\n  });\n};\n\nLightningService.prototype.createController = function(bundleId) {\n  var self = this;\n  return new Promise(function(resolve, reject) {\n    self.project.sfdcClient.conn.tooling.sobject('AuraDefinition').create({\n      AuraDefinitionBundleId: bundleId,\n      DefType: 'CONTROLLER',\n      Format: 'JS',\n      Source: '({\\n\\tmyAction : function(component, event, helper) {\\n\\t}\\n})'\n    }, function(err, res) {\n      if (err) {\n        reject(err);\n      } else {\n        resolve(res);\n      }\n    });\n  });\n};\n\nLightningService.prototype.createRenderer = function(bundleId) {\n  var self = this;\n  return new Promise(function(resolve, reject) {\n    self.project.sfdcClient.conn.tooling.sobject('AuraDefinition').create({\n      AuraDefinitionBundleId: bundleId,\n      DefType: 'RENDERER',\n      Format: 'JS',\n      Source: '({\\n\\t// Your renderer method overrides go here\\n})'\n    }, function(err, res) {\n      if (err) {\n        reject(err);\n      } else {\n        resolve(res);\n      }\n    });\n  });\n};\n\nLightningService.prototype.createHelper = function(bundleId) {\n  var self = this;\n  return new Promise(function(resolve, reject) {\n    self.project.sfdcClient.conn.tooling.sobject('AuraDefinition').create({\n      AuraDefinitionBundleId: bundleId,\n      DefType: 'HELPER',\n      Format: 'JS',\n      Source: '({\\n\\thelperMethod : function() {\\n\\t}\\n})'\n    }, function(err, res) {\n      if (err) {\n        reject(err);\n      } else {\n        resolve(res);\n      }\n    });\n  });\n};\n\nLightningService.prototype.createStyle = function(bundleId) {\n  var self = this;\n  return new Promise(function(resolve, reject) {\n    self.project.sfdcClient.conn.tooling.sobject('AuraDefinition').create({\n      AuraDefinitionBundleId: bundleId,\n      DefType: 'STYLE',\n      Format: 'CSS',\n      Source: '.THIS {\\n}'\n    }, function(err, res) {\n      if (err) {\n        reject(err);\n      } else {\n        resolve(res);\n      }\n    });\n  });\n};\n\nLightningService.prototype.createEvent = function(bundleId) {\n  var self = this;\n  return new Promise(function(resolve, reject) {\n    self.project.sfdcClient.conn.tooling.sobject('AuraDefinition').create({\n      AuraDefinitionBundleId: bundleId,\n      DefType: 'EVENT',\n      Format: 'XML',\n      Source: '<aura:event type=\"APPLICATION\" description=\"Event template\" />'\n    }, function(err, res) {\n      if (err) {\n        reject(err);\n      } else {\n        resolve(res);\n      }\n    });\n  });\n};\n\nmodule.exports = LightningService;\n\n\n/** WEBPACK FOOTER **\n ** ../mavensmate/app/lib/services/lightning.js\n **/","/**\n * @file Represents connection to salesforce, many functions wrap jsforce\n * @author Joseph Ferraro <@joeferraro>\n */\n\n'use strict';\n\nvar jsforce       = require('jsforce');\nvar Promise       = require('bluebird');\nvar fs            = require('fs');\nvar _             = require('lodash');\nvar merge         = require('merge');\nvar util          = require('./util');\nvar events        = require('events');\nvar inherits      = require('inherits');\nvar stream        = require('stream');\nvar Stream        = stream.Stream;\nvar logger        = require('winston');\nvar config        = require('../config');\n\n/**\n * @param {Object} opts\n * @param {String} [opts.accessToken] - salesforce.com accesstoken\n * @param {String} [opts.refreshToken] - salesforce.com refreshToken\n * @param {String} [opts.instanceUrl] - Salesforce Instance URL (e.g. https://na1.salesforce.com/)\n * @param {String} [opts.username] - (optional) salesforce.com username\n * @param {String} [opts.password] - (optional) salesforce.com password (append security token)\n * @param {String} [opts.orgType] - (optional) type of org: developer|production|sandbox|prerelease\n * @param {String} [opts.loginUrl] - Salesforce Login Server URL (e.g. https://login.salesforce.com/)\n * @param {String} [opts.serverUrl] - Salesforce SOAP service endpoint URL (e.g. https://na1.salesforce.com/services/Soap/u/28.0)\n * @param {String} [opts.logger] - Logger instance\n *\n */\nfunction SalesforceClient(opts) {\n  util.applyProperties(this, opts);\n  this.apiVersion = config.get('mm_api_version') || '36.0';\n  this.clientId = process.env.SFDC_OAUTH_CLIENT_ID || '3MVG9uudbyLbNPZP7kLgoRiWVRqiN8gFcKwdAlztVnjgbj9shSk1vMXJNmV7W0ciFbeYiaP9D4tLfBBD06l_7'\n  this.callbackUrl = process.env.SFDC_OAUTH_CALLBACK_URL || 'https://localhost:56248/sfdc/auth/callback'\n  logger.debug('initiating SalesforceClient: ');\n}\n\ninherits(SalesforceClient, events.EventEmitter);\n\n/**\n * We need to manually post to the refresh token endpoint bc jsforce requires a client secret\n * @return Nothing\n */\nSalesforceClient.prototype._refreshFn = function(conn, callback) {\n  logger.debug('jsforce calling MavensMate _refreshFn delegate', conn);\n  logger.debug('manually refreshing access token...');\n  // danger: private jsforce api\n  conn.oauth2._postParams({\n    grant_type : 'refresh_token',\n    refresh_token : conn.refreshToken,\n    client_id : conn.oauth2.clientId,\n  }, function(err, res) {\n    if (err) {\n      logger.error('_refreshFn error', err);\n      callback(err);\n    } else {\n      logger.debug('_refreshFn result', res);\n      callback(null, res.access_token, res);\n    }\n  });\n};\n\n\n/**\n * When refreshToken is used to get a new access token, we handle the event here\n * @return {Nothing}\n */\nSalesforceClient.prototype._initWebServerRefreshHandler = function() {\n  var self = this;\n  // jsforce connection emits 'refresh' when token is refreshed in http-api.js\n  self.conn.on('refresh', function(accessToken, res) {\n    logger.debug('connection refresh event...', accessToken, res, self);\n    self.accessToken = accessToken;\n    self.instanceUrl = res.instance_url;\n    self.conn.identity(function(err, res) {\n      if (err) {\n        logger.error('could not retrieve sfdc connection identity after token refresh');\n      } else {\n        try {\n          self.conn.userInfo = merge(self.conn.userInfo, res);\n          self.startSystemStreamingListener()\n            .then(function() {\n              logger.debug('restarted streaming listener for sfdc client');\n            })\n            .catch(function(err) {\n              logger.error('Could not start streaming listener after sfdc client refresh', err);\n            });\n        } catch(e) {\n          logger.error('could not merge user info after conn refresh');\n        }\n      }\n      self.emit('token-refresh', self);\n    });\n  });\n};\n\n/**\n * When we get a new access token via username/password flow, we handle the refresh event here\n * @return {Nothing}\n */\nSalesforceClient.prototype._initUsernamePasswordRefreshHandler = function() {\n  var self = this;\n  self.conn.on('refresh', function(accessToken, res) {\n    self.accessToken = accessToken;\n    self.conn.identity(function(err, res) {\n      if (err) {\n        logger.error('could not retrieve sfdc connection identity');\n      } else {\n        try {\n          self.conn.userInfo = merge(self.conn.userInfo, res);\n          self.startSystemStreamingListener()\n            .then(function() {\n              logger.debug('restarted streaming listener for sfdc client');\n            })\n            .catch(function(err) {\n              logger.error('Could not start streaming listener after sfdc client refresh', err);\n            });\n        } catch(e) {\n          logger.error('could not merge user info after conn refresh');\n        }\n      }\n      self.emit('token-refresh', self);\n    });\n  });\n};\n\n/**\n * Attempts to use cached session information to initiate connection to salesforce\n * Alternatively, will perform login based on stored creds\n */\nSalesforceClient.prototype.initialize = function() {\n  var self = this;\n  // TODO: refactor un/pw vs oauth flows bc they're very similar\n  return new Promise(function(resolve, reject) {\n    if (self.initialized) {\n      return resolve();\n    }\n    logger.debug('initializing connection to salesforce ...', self);\n    if (self.accessToken && self.instanceUrl && self.transient) {\n      self.conn = new jsforce.Connection({\n        logLevel: config.get('mm_sfdc_api_log_level') || 'FATAL',\n        version: self.apiVersion,\n        instanceUrl: self.instanceUrl || 'https://na1.salesforce.com',\n        accessToken: self.accessToken\n      });\n      self._configureJsForce();\n      self.describe()\n        .then(function() {\n          self.initialized = true;\n          resolve();\n        })\n        .catch(function(error) {\n          reject(error);\n        })\n        .done();\n    } else if (self.accessToken && self.refreshToken) {\n      self.conn = new jsforce.Connection({\n        oauth2: {\n          clientId : self.clientId,\n          redirectUri : self.callbackUrl\n        },\n        refreshFn: self._refreshFn,\n        instanceUrl: self.instanceUrl || 'https://na1.salesforce.com',\n        accessToken: self.accessToken,\n        refreshToken: self.refreshToken,\n        logLevel: config.get('mm_sfdc_api_log_level') || 'FATAL',\n        version: self.apiVersion\n      });\n      self._initWebServerRefreshHandler();\n      logger.silly('initialized connection', self.conn);\n      self.conn.identity()\n        .then(function(res) {\n          self.conn.userInfo = merge(self.conn.userInfo, res);\n          self._configureJsForce();\n          return self.describe();\n        })\n        .then(function(res) {\n          self.initialized = true;\n          resolve(self.conn);\n        })\n        .catch(function(err) {\n          logger.error(err);\n          reject(err);\n        });\n    } else if (self.username && self.password) {\n      logger.debug('logging in to salesforce via username/password flow: '+self.getLoginUrl());\n      self.conn = new jsforce.Connection({\n        oauth2: {\n          clientId : self.clientId,\n          redirectUri : self.callbackUrl\n        },\n        logLevel: config.get('mm_sfdc_api_log_level') || 'FATAL',\n        version: self.apiVersion,\n        loginUrl: self.getLoginUrl()\n      });\n      self._initUsernamePasswordRefreshHandler();\n      self.conn.login(self.username, self.password)\n        .then(function(res) {\n          return self.conn.identity();\n        })\n        .then(function(res) {\n          self.conn.userInfo = merge(self.conn.userInfo, res);\n          self._configureJsForce();\n          return self.describe();\n        })\n        .then(function(res) {\n          self.initialized = true;\n          resolve(self.conn);\n        })\n        .catch(function(err) {\n          logger.error(err);\n          reject(err);\n        });\n    } else {\n      reject(new Error('username/password or accesstoken/refreshtoken required'));\n    }\n  });\n};\n\n/**\n * Logs into Salesforce via username/password flow\n * @return {Promise}\n */\nSalesforceClient.prototype._login = function() {\n  var self = this;\n  return new Promise(function(resolve, reject) {\n\n  });\n};\n\n/**\n * Returns the org type (developer, production, sandbox, prerelease, custom) for this client\n * @return {String}\n */\nSalesforceClient.prototype.getOrgType = function() {\n  var validOrgTypes = ['production', 'developer', 'sandbox', 'prerelease', 'custom'];\n  if (this.orgType && validOrgTypes.indexOf(this.orgType.toLowerCase()) === -1) {\n    return validOrgTypes[1];\n  } else if (!this.orgType) {\n    return validOrgTypes[1];\n  } else {\n    return this.orgType.toLowerCase();\n  }\n};\n\nSalesforceClient.prototype.getUserId = function() {\n  if (this.conn && this.conn.userInfo) {\n    return this.conn.userInfo.user_id;\n  }\n};\n\n/**\n * Returns username for this client\n * @return {String}\n */\nSalesforceClient.prototype.getUsername = function() {\n  if (this.conn && this.conn.userInfo) {\n    return this.conn.userInfo.username;\n  } else {\n    return this.username;\n  }\n};\n\n/**\n * Returns org namespace for this client\n * @return {String}\n */\nSalesforceClient.prototype.getNamespace = function() {\n  return this.describeCache.organizationNamespace;\n};\n\n/**\n * Returns login url for this client\n * @return {String}\n */\nSalesforceClient.prototype.getLoginUrl = function() {\n  if (this.loginUrl) {\n    return this.loginUrl;\n  } else {\n    if (this.getOrgType() === 'sandbox') {\n      return 'https://test.salesforce.com/';\n    } else {\n      return 'https://login.salesforce.com/';\n    }\n  }\n};\n\n/**\n * Returns access token for this client\n * @return {String}\n */\nSalesforceClient.prototype.getAccessToken = function() {\n  if (this.conn && this.conn.accessToken) {\n    return this.conn.accessToken;\n  } else if (this.accessToken) {\n    return this.accessToken;\n  } else {\n    return undefined;\n  }\n};\n\n/**\n * Returns instance url (e.g., https://na14.salesforce.com) for this client\n * @return {String}\n */\nSalesforceClient.prototype.getInstanceUrl = function() {\n  return this.instanceUrl || this.conn.instanceUrl || undefined;\n};\n\n/**\n * Applies MavensMate-specific settings to jsforce\n * @return {String}\n */\nSalesforceClient.prototype._configureJsForce = function() {\n  logger.debug('configuring jsforce ...');\n  this.conn.metadata.pollTimeout = parseInt(config.get('mm_timeout')) * 1000 || 20000;\n  this.conn.bulk.pollTimeout = parseInt(config.get('mm_timeout')) * 1000 || 20000;\n};\n\nSalesforceClient.prototype.setPollingTimeout = function(timeout) {\n  this.conn.metadata.pollTimeout = timeout || 20000;\n  this.conn.bulk.pollTimeout = timeout || 20000;\n};\n\nSalesforceClient.prototype.createApexMetadata = function(mavensMateFile) {\n  logger.info('createApexMetadata');\n  logger.info(mavensMateFile.type);\n  var self = this;\n  return new Promise(function(resolve, reject) {\n    mavensMateFile.mergeTemplate()\n      .then(function(body) {\n        logger.info(body);\n        var payload = {};\n        if (mavensMateFile.type.xmlName === 'ApexPage' || mavensMateFile.type.xmlName === 'ApexComponent') {\n          payload.markup = body;\n        } else {\n          payload.body = body;\n        }\n        if (mavensMateFile.type.xmlName === 'ApexTrigger') {\n          payload.TableEnumOrId = mavensMateFile.apexTriggerObjectName;\n        } else if (mavensMateFile.type.xmlName !== 'ApexClass') {\n          payload.name = mavensMateFile.name;\n          payload.MasterLabel = mavensMateFile.name;\n        }\n        self.conn.tooling.sobject(mavensMateFile.type.xmlName).create(payload, function(err, res) {\n          if (err && err.message.indexOf('duplicates value on record with id') === -1) {\n            reject(err);\n          } else {\n            resolve(res);\n          }\n        });\n      })\n      .catch(function(err) {\n        reject(err);\n      });\n  });\n};\n\n/**\n * Compiles files via Tooling API\n * @param  {Array of Metadata} metadata - metadata to be compiled (must already exist in salesforce)\n * @return {Promise}\n */\nSalesforceClient.prototype.compileWithToolingApi = function(files) {\n  var self = this;\n  return new Promise(function(resolve, reject) {\n    // logger.debug('compiling sfdcPaths via tooling api: '+JSON.stringify(sfdcPaths));\n\n    if ( _.filter( files, function(f) { return !f.isToolingType; } ).length > 0 ) {\n      return reject('Invalid extension for tooling API compilation');\n    }\n\n    // new container\n    // add member for each type\n    var containerId;\n\n    self._createContainer()\n      .then(function(result) {\n        containerId = result.id;\n        logger.debug('new container id is: '+containerId);\n        var memberPromises = [];\n        _.each(files, function(f) {\n          memberPromises.push(self._createMember(f, containerId));\n        });\n        return Promise.all(memberPromises);\n      })\n      .then(function(memberResults) {\n        var isMemberSuccess = _.where(memberResults, { 'success': false }).length === 0;\n\n        if (!isMemberSuccess) {\n          return reject('Could not create tooling members: '+JSON.stringify(memberResults));\n        }\n\n        return self._createContainerAsyncRequest(containerId);\n      })\n      .then(function(result) {\n        self._pollAsyncContainer(containerId, result.id, resolve, reject);\n      })\n      .catch(function(error) {\n        reject(error);\n      })\n      .done();\n  });\n};\n\nSalesforceClient.prototype._asyncContainerRequestCompleteHandler = function(containerId, results, resolve, reject) {\n  logger.debug('asyncContainerRequestCompleteHandler');\n  logger.debug('deleting container id:');\n  logger.debug(containerId);\n  logger.silly(results);\n  try {\n    this._deleteContainer(containerId)\n      .then(function() {\n        resolve(results);\n      });\n  } catch(e) {\n    reject(e);\n  }\n};\n\nSalesforceClient.prototype._asyncContainerRequestErrorHandler = function(containerId, err, resolve, reject) {\n  logger.debug('asyncContainerRequestErrorHandler');\n  logger.debug('deleting container id:');\n  logger.debug(containerId);\n  try {\n    this._deleteContainer(containerId)\n      .then(function() {\n        reject(err);\n      });\n  } catch(e) {\n    reject(e);\n  }\n};\n\n/**\n * Deletes a metadata container\n *\n * @method SalesforceClient#_deleteContainer\n * @param {String} containerId - Id of metadatacontainer\n */\nSalesforceClient.prototype._deleteContainer = function(containerId) {\n  var self = this;\n  return new Promise(function(resolve, reject) {\n    self.conn.tooling.sobject('MetadataContainer').delete(containerId, function(err, res) {\n      if (err) {\n        reject(err);\n      } else {\n        resolve(res);\n      }\n    });\n  });\n};\n\n/**\n * Submits container to create containerasyncrequest\n *\n * @method SalesforceClient#_createContainerAsyncRequest\n * @param {String} containerId - Id of metadatacontainer\n */\nSalesforceClient.prototype._createContainerAsyncRequest = function(containerId) {\n  var self = this;\n  return new Promise(function(resolve, reject) {\n    self.conn.tooling.sobject('ContainerAsyncRequest').create({\n      IsCheckOnly: false,\n      MetadataContainerId: containerId,\n      IsRunTests:false\n    }, function(err, res) {\n      if (err) {\n        reject(err);\n      } else {\n        resolve(res);\n      }\n    });\n  });\n};\n\n/**\n * Polling until asynccontainer is complete or error\n *\n * @method SalesforceClient#_pollAsyncContainer\n * @param {Number} interval - Polling interval in milliseconds\n * @param {Number} timeout - Polling timeout in milliseconds\n */\nSalesforceClient.prototype._pollAsyncContainer = function(containerId, requestId, resolve, reject, interval, timeout) {\n  logger.debug('_pollAsyncContainer for requestId: '+requestId);\n  var self = this;\n  var startTime = new Date().getTime();\n  var poll = function() {\n    var now = new Date().getTime();\n    if (startTime + timeout < now) {\n      self.emit('error', new Error('MavensMate timed out while polling Salesforce.com servers. To increase polling timeout, set mm_timeout to number of seconds.'));\n      return;\n    }\n    self._getAsyncRequest(requestId).then(function(results) {\n      var done = results[0].State !== 'Queued';\n      if (done) {\n        // self.emit('asynccontainer-complete', results);\n        self._asyncContainerRequestCompleteHandler(containerId, results, resolve, reject);\n      } else {\n        setTimeout(poll, interval);\n      }\n    }, function(err) {\n      // self.emit('asynccontainer-error', err);\n      self._asyncContainerRequestErrorHandler(containerId, err, resolve, reject);\n    });\n  };\n  setTimeout(poll, interval);\n};\n\n/**\n * Retrieves async request details\n * @return {Promise}\n */\nSalesforceClient.prototype._getAsyncRequest = function(requestId) {\n  var self = this;\n  return new Promise(function(resolve, reject) {\n    var fields;\n    if (parseInt(self.apiVersion) >= 31) {\n      fields = ['Id', 'MetadataContainerId', 'MetadataContainerMemberId', 'State', 'IsCheckOnly', 'DeployDetails', 'ErrorMsg'];\n    } else {\n      fields = ['Id', 'MetadataContainerId', 'MetadataContainerMemberId', 'State', 'IsCheckOnly', 'CompilerErrors', 'ErrorMsg'];\n    }\n\n    self.conn.tooling.sobject('ContainerAsyncRequest')\n      .find(\n        { Id: requestId },\n        fields\n      )\n      .execute(function(err, records) {\n        if (err) {\n          reject(err);\n        } else {\n          resolve(records);\n        }\n      });\n  });\n};\n\n/**\n * Creates a metadata container for compilation\n * @return {Promise}\n */\nSalesforceClient.prototype._createContainer = function() {\n  var self = this;\n  return new Promise(function(resolve, reject) {\n    self.conn.tooling.sobject('MetadataContainer').create({\n      name: util.generateRandomString(32)\n    }, function(err, res) {\n      if (err) {\n        reject('Could not create container: '+JSON.stringify(res));\n      } else {\n        resolve(res);\n      }\n    });\n  });\n};\n\n/**\n * Creates a Tooling member for each metadata instance passed\n * @param  {Metadata} metadata - Instance of Metadata\n * @param  {String} containerId - Tooling container ID\n * @return {Promise}\n */\nSalesforceClient.prototype._createMember = function(file, containerId) {\n  var self = this;\n  return new Promise(function(resolve, reject) {\n    var memberName = file.type.xmlName+'Member';\n    logger.debug('Creating tooling member:');\n    logger.silly(file.body);\n    logger.debug(containerId);\n    logger.debug(file.id);\n    self.conn.tooling.sobject(memberName).create({\n      Body: file.body,\n      MetadataContainerId: containerId,\n      ContentEntityId: file.id\n    }, function(err, res) {\n      if (err) {\n        reject(err);\n      } else {\n        resolve(res);\n      }\n    });\n  });\n};\n\nSalesforceClient.prototype._checkTest = function(requestId) {\n  var self = this;\n  return new Promise(function(resolve, reject) {\n    self.conn.tooling.query('Select ApexClassId, ApexClass.Name, Status, ExtendedStatus From ApexTestQueueItem Where ParentJobId = \\''+requestId+'\\' AND Status IN (\\'Aborted\\',\\'Completed\\',\\'Failed\\')', function(err, res) {\n      if (err) {\n        reject(err);\n      } else {\n        resolve(res);\n      }\n    });\n  });\n};\n\nSalesforceClient.prototype._getTestResults = function(requestId) {\n  var self = this;\n  return new Promise(function(resolve, reject) {\n    logger.debug('getting test results for job id:', requestId);\n    self.conn.tooling.query('SELECT Outcome, ApexClassId, ApexClass.Name, MethodName, Message, StackTrace, ApexLogId FROM ApexTestResult WHERE AsyncApexJobId = \\''+requestId+'\\'', function(err, res) {\n      if (err) {\n        reject(err);\n      } else {\n        logger.silly('test results', res);\n        resolve(res);\n      }\n    });\n  });\n};\n\n\n/**\n * To run specific test methods\n * [{\n      \"classId\" : \"<classId 1>\",\n      \"testMethods\" : [\"testMethod1\",\"testMethod2\",\"testMethod3\"]\n      },{\n      \"classId\" : \"<classId 2>\",\n      \"testMethods\" : [\"testMethod1\",\"testMethod2\"]\n    }];\n */\n\n/**\n * To run classes\n * [ \"classid1\", \"classid2\" ]\n */\n\n/**\n * Runs selected apex unit tests\n * @param  {Array} tests - e.g, [{ \"ApexClassId\" : \"1234\" }]\n * @return {Promise} Resolves to Object\n */\nSalesforceClient.prototype.runTests = function(classIdsOrTestsPayload) {\n  var self = this;\n  return new Promise(function(resolve, reject) {\n    var numberOfTests = classIdsOrTestsPayload.length;\n    var pollInterval = numberOfTests > 10 ? 5000 : 1000;\n\n    var postBody;\n    if (_.isString(classIdsOrTestsPayload[0])) {\n      postBody = { classids: classIdsOrTestsPayload.join(',') }\n    } else {\n      postBody = { tests: classIdsOrTestsPayload };\n    }\n\n    logger.debug('submitting tests to be run via runTestsAsynchronous:', postBody);\n\n    self.conn.request({\n      method: 'POST',\n      url: '/services/data/v'+self.apiVersion+'/tooling/runTestsAsynchronous',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(postBody)\n    }, function(err, res) {\n      if (err) {\n        logger.error('Error submitting to runTestsAsynchronous', err);\n        reject(err);\n      } else {\n        logger.info('result from runTestsAsynchronous POST', res);\n        var parentJobId = res;\n\n        // poll for the test results\n        var startTime = new Date().getTime();\n        var poll = function() {\n          var now = new Date().getTime();\n          if (startTime + self.conn.metadata.pollTimeout < now) {\n            reject(new Error('Apex test request timed out. Timeout can be configured via mm_timeout setting.'));\n            return;\n          }\n          self._checkTest(parentJobId).then(function(classResults) {\n            logger.debug('test status: ');\n            logger.debug(classResults);\n            if (classResults.size === numberOfTests) {\n              self._getTestResults(parentJobId)\n                .then(function(result) {\n                  resolve({classResults: classResults, methodResults: result});\n                })\n                .catch(function(err) {\n                  reject(new Error('Retrieving test results failed: '+err.message));\n                })\n                .done();\n            } else {\n              setTimeout(poll, pollInterval);\n            }\n          })\n          .catch(function(err) {\n            reject(new Error('Retrieving test results failed: '+err.message));\n          })\n          .done();\n        };\n        setTimeout(poll, pollInterval);\n      }\n    });\n  });\n};\n\n/**\n * Executes anonymous Apex\n * @return {Promise}\n */\nSalesforceClient.prototype.executeApex = function(payload) {\n  var self = this;\n  return new Promise(function(resolve, reject) {\n    self.conn.tooling.executeAnonymous(payload.body, function(err, res) {\n      if (err) {\n        reject('Could not execute anonymous apex: '+err.message);\n      } else {\n        resolve(res);\n      }\n    });\n  });\n};\n\n/**\n * Deploy components into an organization using zipped file representations\n *\n * @param {stream.Stream|Buffer} zipInput - Zipped file input source in readable stream or binary buffer\n * @param {Object} [options] - Options used in deployment\n * @param {Boolean} [options.allowMissingFiles] - Specifies whether a deploy succeeds even if files that are specified in package.xml but are not in the .zip file or not.\n * @param {Boolean} [options.autoUpdatePackage] - If a file is in the .zip file but not specified in package.xml, specifies whether the file should be automatically added to the package or not.\n * @param {Boolean} [options.checkOnly] - Indicates whether Apex classes and triggers are saved to the organization as part of the deployment (false) or not (true).\n * @param {Boolean} [options.ignoreWarnings] - Indicates whether a warning should allow a deployment to complete successfully (true) or not (false). Defaults to false.\n * @param {Boolean} [options.performRetrieve] - Indicates whether a retrieve() call is performed immediately after the deployment (true) or not (false).\n * @param {Boolean} [options.purgeOnDelete] - If true, the deleted components in the destructiveChanges.xml manifest file aren't stored in the Recycle Bin.\n * @param {Boolean} [options.rollbackOnError] - Indicates whether any failure causes a complete rollback (true) or not (false).\n * @param {Boolean} [options.runAllTests] - If true, all Apex tests defined in the organization are run.\n * @param {Array.<String>} [options.runTests] - A list of Apex tests to be run during deployment.\n * @param {Boolean} [options.singlePackage] - Indicates whether the specified .zip file points to a directory structure with a single package (true) or a set of packages (false).\n * @param {Callback.<Metadata~AsyncResult>} [callback] - Callback function\n * @returns {Metadata~DeployResultLocator}\n */\nSalesforceClient.prototype.deploy = function(zipInput, opts) {\n  var self = this;\n  return new Promise(function(resolve, reject) {\n    self.conn.metadata.deploy(zipInput, opts)\n      .complete(true, function(err, result) {\n          if (err) {\n            reject(err);\n          } else {\n            resolve(result);\n          }\n        });\n  });\n};\n\n/**\n * Retrieve packaged medadata --> TODO: finish\n * @param  {Array} packageNames - list of packages\n * @return {Promise}\n */\nSalesforceClient.prototype.retrievePackages = function(packageNames) {\n  var self = this;\n  return new Promise(function(resolve, reject) {\n    var r = self.conn.metadata.retrieve({ packageNames: packageNames, apiVersion: self.apiVersion })\n      .stream()\n      .pipe(fs.createWriteStream('mavensmate.zip'));\n\n    r.on('close', function() {\n      logger.debug('ended!');\n      resolve();\n    });\n  });\n};\n\n/**\n * Retrieves metadata from salesforce\n * @param  {Array|Object} metadataTypesOrPackage\n * @return {Promise} resolves with readable {Stream}\n */\nSalesforceClient.prototype.retrieveUnpackaged = function(metadataTypesOrPackage, writeToDisk, destination) {\n  var self = this;\n  return new Promise(function(resolve, reject) {\n    var unpackagedTypes = [];\n\n    logger.debug('retrieving unpackaged: ');\n    logger.debug(metadataTypesOrPackage);\n\n    // TODO: refactor package generation\n    if (_.isArray(metadataTypesOrPackage)) {\n      _.each(metadataTypesOrPackage, function(type) {\n        unpackagedTypes.push({\n          members: '*',\n          name: type\n        });\n      });\n    } else {\n      _.forOwn(metadataTypesOrPackage, function(value, key) {\n        unpackagedTypes.push({\n          members: value,\n          name: key\n        });\n      });\n    }\n\n    var retrieveRequest = self.conn.metadata.retrieve({\n      unpackaged: { types : unpackagedTypes },\n      apiVersion: self.apiVersion\n    });\n\n    var zipStream = new Stream();\n    zipStream.readable = true;\n\n    retrieveRequest.complete(function(err, result) {\n      if (err) {\n        logger.error('unpackaged retrieveRequest error: '+err.message);\n        if (err.message.indexOf('polling time out') >= 0) {\n          reject(new Error('Request timed out. Timeout can be configured via mm_timeout setting.'));\n        } else {\n          reject(err);\n        }\n      } else {\n        if (writeToDisk) {\n          var writePromise = util.writeStream(zipStream, destination);\n          zipStream.emit('data', new Buffer(result.zipFile, 'base64'));\n          zipStream.emit('end');\n          writePromise\n            .then(function(res) {\n              return resolve({zipStream: zipStream, fileProperties: result.fileProperties});\n            })\n            .catch(function(err) {\n              logger.error('error retrieving and writing to disk');\n              logger.error(err.message);\n              return reject(err);\n            });\n        } else {\n          resolve(result);\n        }\n      }\n    });\n  });\n};\n\nSalesforceClient.prototype.describeGlobal = function() {\n  var self = this;\n  return new Promise(function(resolve, reject) {\n    self.conn.describeGlobal(function(err, res) {\n      if (err) {\n        reject(err);\n      } else {\n        resolve(res);\n      }\n    });\n  });\n};\n\nSalesforceClient.prototype.describe = function() {\n  var self = this;\n  return new Promise(function(resolve, reject) {\n    self.conn.metadata.describe(self.apiVersion, function(err, res) {\n      if (err) {\n        reject(err);\n      } else {\n        self.describeCache = res;\n        resolve(res);\n      }\n    });\n  });\n};\n\nSalesforceClient.prototype.listFolder = function(metadataType, folder) {\n  var self = this;\n  return new Promise(function(resolve, reject) {\n    var result = {};\n    self.conn.metadata.list([{ type: metadataType, folder: folder }], function(err, res) {\n      if (err) {\n        reject(err);\n      } else {\n        if (!res) {\n          res = [];\n        } else if (!_.isArray(res)) {\n          res = [res];\n        }\n        if (config.get('mm_ignore_managed_metadata')) {\n          result[folder] = _.filter(res, function(r) {\n            return r.manageableState === 'unmanaged' || r.manageableState === undefined;\n          });\n        } else {\n          result[folder] = res;\n        }\n        resolve(result);\n      }\n    });\n  });\n};\n\nSalesforceClient.prototype.list = function(metadataType) {\n  var self = this;\n  return new Promise(function(resolve, reject) {\n    var result = {};\n    self.conn.metadata.list([{ type: metadataType }], function(err, res) {\n      if (err) {\n        reject(err);\n      } else {\n        if (!res) {\n          res = [];\n        } else if (!_.isArray(res)) {\n          res = [res];\n        }\n        if (config.get('mm_ignore_managed_metadata')) {\n          result[metadataType] = _.filter(res, function(r) {\n            return r.manageableState === 'unmanaged' || r.manageableState === undefined;\n          });\n        } else {\n          result[metadataType] = res;\n        }\n        resolve(result);\n      }\n    });\n  });\n};\n\nSalesforceClient.prototype.startSystemStreamingListener = function() {\n  var self = this;\n  return new Promise(function(resolve, reject) {\n    logger.debug('starting system streaming listener');\n    try {\n      self.conn.streaming.channel('/systemTopic/Logging').subscribe(function(message) {\n        logger.debug('New Log', message);\n        logger.debug('Event Type : ' + message.event.type);\n        logger.debug('Event Created : ' + message.event.createdDate);\n        logger.debug('Object Id : ' + message.sobject.Id);\n        self.emit('sfdcclient-new-log', message);\n      });\n      logger.debug('streaming listener successfully configured');\n      resolve();\n    } catch(e) {\n      logger.error('Could not start system streaming listener', e);\n      if (config.get('mm_http_proxy') || config.get('mm_https_proxy')) {\n        logger.debug('user has proxy configured but streaming listener not functional.');\n        resolve();\n      } else {\n        reject(new Error('Could not start system streaming listener: '+e.message));\n      }\n    }\n  });\n};\n\n/**\n * Creates TraceFlags for all user ids listed in config/.debug\n * @param  {Array} userIds\n * @param  {Date} expiration\n * @return {Promise} resolves to nothing\n */\nSalesforceClient.prototype.startLogging = function(debugSettings, expiration) {\n  var self = this;\n  var userIds = debugSettings.users;\n  var debugLevels = debugSettings.levels || {};\n  var debugLevelName = debugSettings.debugLevelName || 'MAVENSMATE';\n  logger.debug('attempting to start logging for: ');\n  logger.debug(userIds);\n  logger.debug('expiring: '+expiration);\n  // \"levels\": {\n  //     \"Workflow\": \"INFO\",\n  //     \"Callout\": \"INFO\",\n  //     \"System\": \"DEBUG\",\n  //     \"Database\": \"INFO\",\n  //     \"ApexCode\": \"FINE\",\n  //     \"Validation\": \"INFO\",\n  //     \"Visualforce\": \"DEBUG\"\n  // },\n  return new Promise(function(resolve, reject) {\n    /*jshint camelcase: false */\n    self.conn.tooling.query('SELECT Id FROM DebugLevel WHERE DeveloperName = \\''+debugLevelName+'\\' AND CreatedById = \\''+self.conn.userInfo.user_id+'\\'', function(err, res) {\n      if (err) {\n        reject(new Error('Could not retrieve DebugLevel: '+err.message));\n      } else {\n        var debugLevelIdsToDelete = [];\n        _.each(res.records, function(debugLevel) {\n          debugLevelIdsToDelete.push(debugLevel.Id);\n        });\n        logger.debug('attempting to delete debuglevels: ');\n        logger.debug(debugLevelIdsToDelete);\n        self.conn.tooling.sobject('DebugLevel').destroy(debugLevelIdsToDelete)\n          .then(function(deleteResult) {\n            logger.debug('deleted debug level');\n            logger.debug(deleteResult);\n\n            logger.debug('creating debug level');\n            var debugLevelsToCreate = [];\n            var dl = {\n              DeveloperName: debugLevelName,\n              MasterLabel: debugLevelName,\n              Workflow: debugLevels.Workflow || 'DEBUG',\n              Callout: debugLevels.Callout || 'DEBUG',\n              System: debugLevels.System || 'DEBUG',\n              Database: debugLevels.Database || 'DEBUG',\n              ApexCode: debugLevels.ApexCode || 'DEBUG',\n              ApexProfiling: debugLevels.ApexProfiling || 'DEBUG',\n              Validation: debugLevels.Validation || 'DEBUG',\n              Visualforce: debugLevels.Visualforce || 'DEBUG'\n            };\n            debugLevelsToCreate.push(dl);\n            logger.debug('attempting to create debug level');\n\n            return self.conn.tooling.sobject('DebugLevel').create(debugLevelsToCreate);\n          })\n          .then(function(debugLevelCreateResult) {\n            logger.debug('debugLevelCreateResult', debugLevelCreateResult);\n            var traceFlagsToCreate = [];\n            _.each(userIds, function(userId) {\n              var tf = {\n                ExpirationDate: expiration,\n                TracedEntityId: userId,\n                LogType: debugSettings.logType || 'USER_DEBUG',\n                DebugLevelId: debugLevelCreateResult[0].id\n              };\n              traceFlagsToCreate.push(tf);\n            });\n            logger.debug('attempting to create trace flags');\n            return self.conn.tooling.sobject('TraceFlag').create(traceFlagsToCreate);\n          })\n          .then(function(traceFlagCreateResults) {\n            logger.debug('Created trace flag(s) for users: ');\n            logger.debug(traceFlagCreateResults);\n            resolve();\n          })\n          .catch(function(err) {\n            reject(new Error('Could not create Trace Flags: '+err.message));\n          })\n          .done();\n      }\n    });\n    /*jshint camelcase: true */\n  });\n};\n\nSalesforceClient.prototype.executeSoql = function(soql) {\n  var self = this;\n  return new Promise(function(resolve, reject) {\n    self.conn.query(soql, function(err, res) {\n      if (err) {\n        reject(err);\n      } else {\n        resolve(res);\n      }\n    });\n  });\n};\n\n/**\n * Deletes TraceFlags created by the running user for the supplied userIds\n * @param  {Array of Strings} userIds\n * @return {Promise} resolves to nothing\n */\nSalesforceClient.prototype.stopLogging = function(userIds) {\n  var self = this;\n  return new Promise(function(resolve, reject) {\n    /*jshint camelcase: false */\n    self.conn.tooling.query('SELECT Id FROM TraceFlag WHERE TracedEntityId IN ('+util.joinForQuery(userIds)+') AND CreatedById = \\''+self.conn.userInfo.user_id+'\\'', function(err, res) {\n      if (err) {\n        reject(new Error('Could not retrieve TraceFlags for debug users: '+err.message));\n      } else {\n        var traceFlagIdsToDelete = [];\n\n        _.each(res.records, function(traceFlag) {\n          traceFlagIdsToDelete.push(traceFlag.Id);\n        });\n\n        self.conn.tooling.sobject('TraceFlag').destroy(traceFlagIdsToDelete)\n          .then(function(deleteResult) {\n            logger.debug('deleted trace flags');\n            logger.debug(deleteResult);\n            resolve();\n          })\n          .catch(function(err) {\n            reject(new Error('Could not delete Trace Flags: '+err.message));\n          })\n          .done();\n      }\n    });\n    /*jshint camelcase: true */\n  });\n};\n\nSalesforceClient.prototype.getServerProperties = function(mavensMateFiles) {\n  var self = this;\n  return new Promise(function(resolve, reject) {\n    logger.debug('getting server properties ...');\n    logger.silly(mavensMateFiles);\n\n    var baseSoql = 'Select Id, Name, CreatedDate, CreatedById, NamespacePrefix, CreatedBy.Name, LastModifiedById, LastModifiedDate, LastModifiedBy.Name From ';\n    var baseSoqlFilter = ' WHERE ID IN (';\n\n    var classes = [];\n    var classIds = [];\n    var triggers = [];\n    var triggerIds = [];\n    var pages = [];\n    var pageIds = [];\n    var components = [];\n    var componentIds = [];\n\n    _.each(mavensMateFiles, function(mmf) {\n      if (mmf.type.xmlName === 'ApexPage') {\n        pageIds.push(mmf.id);\n        pages.push(mmf);\n      } else if (mmf.type.xmlName === 'ApexTrigger') {\n        triggerIds.push(mmf.id);\n        triggers.push(mmf);\n      } else if (mmf.type.xmlName === 'ApexClass') {\n        classIds.push(mmf.id);\n        classes.push(mmf);\n      } else if (mmf.type.xmlName === 'ApexComponent') {\n        componentIds.push(mmf.id);\n        components.push(mmf);\n      }\n    });\n\n    var queries = [];\n    if (classes.length > 0) {\n      queries.push(\n        self.conn.query(baseSoql + 'ApexClass' + baseSoqlFilter + util.joinForQuery(classIds)+')')\n      );\n    }\n    if (components.length > 0) {\n      queries.push(\n        self.conn.query(baseSoql + 'ApexComponent' + baseSoqlFilter + util.joinForQuery(componentIds)+')')\n      );\n    }\n    if (triggers.length > 0) {\n      queries.push(\n        self.conn.query(baseSoql + 'ApexTrigger' + baseSoqlFilter + util.joinForQuery(triggerIds)+')')\n      );\n    }\n    if (pages.length > 0) {\n      queries.push(\n        self.conn.query(baseSoql + 'ApexPage' + baseSoqlFilter + util.joinForQuery(pageIds)+')')\n      );\n    }\n\n    Promise.all(queries)\n      .then(function(res) {\n        var results = [];\n        _.each(res, function(r) {\n          if (r.records && r.records.length > 0) {\n            Array.prototype.push.apply(results, r.records);\n          }\n        });\n        resolve(results);\n      })\n      .catch(function(err) {\n        logger.error('could not get server properties for Apex/VF metadata', err);\n        reject(err);\n      });\n  });\n};\n\nmodule.exports = SalesforceClient;\n\n\n\n/** WEBPACK FOOTER **\n ** ../mavensmate/app/lib/sfdc-client.js\n **/","/**\n * @file Responsible for deployment of Salesforce metadata (Custom Objects, Apex Classes, Lightning files, etc.) to other servers\n * @author Joseph Ferraro <@joeferraro>\n */\n\n'use strict';\nvar Promise               = require('bluebird');\nvar _                     = require('lodash');\nvar temp                  = require('temp');\nvar swig                  = require('swig');\nvar fs                    = require('fs-extra');\nvar path                  = require('path');\nvar util                  = require('../util');\nvar events                = require('events');\nvar inherits              = require('inherits');\nvar SalesforceClient      = require('../sfdc-client');\nvar OrgConnectionService  = require('./org-connection');\nvar Package               = require('../package').Package;\nvar MetadataHelper        = require('../metadata').MetadataHelper;\nvar logger                = require('winston');\nvar config                = require('../../config');\nvar mavensMateFile        = require('../file');\n\n// TODO: create tmp directory on instantiation, set as property\n// TODO: refactor execute... methods\n\n/**\n * Represents a deployment to one or more Salesforce.com servers\n * @param {Object} opts\n * @param {Array} opts.project - Project instance\n * @param {Array} opts.sfdcClient - Sfdc Client instance\n * @param {Array} opts.targets - array of org connections\n * @param {Array} opts.checkOnly - whether this is a validate-only deployment\n * @param {Array} opts.runTests - whether to run tests during this deployment\n * @param {Array} opts.rollbackOnError - whether to rollback when the deployment fails\n * @param {Array} opts.package - deployment payload\n * @param {Array} opts.newDeploymentName - the name of the deployment to be saved for future deploys\n * @param {Array} opts.debugCategories - array of debug categories for the deployment\n */\nfunction Deploy(opts) {\n  util.applyProperties(this, opts);\n  this.sfdcClient = this.project ? this.project.sfdcClient : this.sfdcClient;\n  this.metadataHelper = new MetadataHelper({ sfdcClient: this.sfdcClient });\n}\n\ninherits(Deploy, events.EventEmitter);\n\nDeploy.prototype.getResultHtml = function(targets, deployOptions, deployResult) {\n  var resultHtml = swig.renderFile('views/deploy/result.html', {\n    results: deployResult,\n    targets: targets,\n    deployOptions: deployOptions,\n    project: this.project\n  });\n  return {\n    html: resultHtml,\n    object: deployResult\n  };\n};\n\nDeploy.prototype.getNamedDeployments = function() {\n  var self = this;\n  if (!self.project) {\n    throw new Error('No project found');\n  }\n  var namedDeployments = [];\n  // this is the default deployment, based on the project's package.xml\n  namedDeployments.push({\n    name: 'Project package.xml',\n    path: path.join(self.project.path, 'src', 'package.xml')\n  });\n  if (!fs.existsSync(path.join(this.project.path, 'deploy'))) {\n    return namedDeployments;\n  } else {\n    // these are custom \"named deploys\"\n    _.each(util.listDirectories(path.join(this.project.path, 'deploy')), function(savedDeployPath) {\n      namedDeployments.push({\n        name: path.basename(savedDeployPath),\n        path: path.join(savedDeployPath, 'unpackaged', 'package.xml')\n      });\n    });\n    return namedDeployments;\n  }\n};\n\n/**\n * Compiles files via Metadata API, updates local store based on deploy result\n * @param  {Array of Metadata} metadata - metadata to be compiled (must already exist in salesforce)\n * @return {Promise}\n */\nDeploy.prototype.compileWithMetadataApi = function(files, subscription) {\n  var self = this;\n    return new Promise(function(resolve, reject) {\n\n    logger.debug('compiling metadata via metadata api: ');\n    // logger.debug(metadata);\n    var deployResult;\n    self.stage(files, subscription)\n      .then(function(zipStream) {\n        return self.project.sfdcClient.deploy(zipStream, { rollbackOnError : true, performRetrieve: true });\n      })\n      .then(function(result) {\n        logger.debug('Compile result: ');\n        logger.debug(result);\n        deployResult = result;\n        if (deployResult.details.retrieveResult) {\n          return self.project.updateLocalStore(deployResult.details.retrieveResult.fileProperties);\n        } else {\n          return new Promise(function(resolve) {\n            resolve();\n          });\n        }\n      })\n      .then(function() {\n        resolve(deployResult);\n      })\n      .catch(function(error) {\n        reject(error);\n      })\n      .done();\n  });\n};\n\nDeploy.prototype.executeRemote = function(deployOptions) {\n  var self = this;\n  self.orgConnectionService = new OrgConnectionService(self.project);\n\n  logger.debug('deploying to remote');\n\n  return new Promise(function(resolve, reject) {\n    if (!self.targets || self.targets.length === 0) {\n      return reject(new Error('Please specify at least one deployment target'));\n    }\n\n    var deployPromises = [];\n    deployOptions = deployOptions || {\n      rollbackOnError: true,\n      performRetrieve: true\n    };\n\n    var newPath = temp.mkdirSync({ prefix: 'mm_' });\n    var retrieveResultStream;\n    // var fileProperties;\n    self.project.sfdcClient.retrieveUnpackaged(self.package, true, newPath)\n      .then(function(retrieveResult) {\n        logger.debug('retrieved deployment payload from remote, preparing to deploy to targets');\n        logger.debug(self.targets);\n        if (config.get('mm_archive_deployments') === true) {\n          // todo\n        }\n        if (self.deploymentName) {\n          if (fs.existsSync(path.join(self.project.path, 'deploy', self.deploymentName))) {\n            fs.removeSync(path.join(self.project.path, 'deploy', self.deploymentName));\n            fs.copySync(path.join(newPath, 'unpackaged'), path.join(self.project.path, 'deploy', self.deploymentName, 'unpackaged'));\n          } else {\n            fs.ensureDirSync(path.join(self.project.path, 'deploy', self.deploymentName, 'unpackaged'));\n            fs.copySync(path.join(newPath, 'unpackaged'), path.join(self.project.path, 'deploy', self.deploymentName, 'unpackaged'));\n          }\n        }\n        _.each(self.targets, function(t) {\n          var targetId = _.isString(t) ? t : t.id;\n          logger.debug('adding deploy target id: ', targetId);\n          logger.debug('deploy options', deployOptions);\n          var targetConnection = self.orgConnectionService.getById(targetId);\n          logger.debug('targetConnection', targetConnection);\n          deployPromises.push(self._deployToTarget(targetConnection, newPath, deployOptions));\n        });\n        return Promise.all(deployPromises);\n      })\n      .then(function(deployResults) {\n        var result = {};\n        _.each(deployResults, function(deployResult) {\n          var connectionId = Object.keys(deployResult)[0];\n          result[connectionId] = deployResult[connectionId];\n          if (result[connectionId].details.componentFailures) {\n            if (!_.isArray(result[connectionId].details.componentFailures)) {\n              result[connectionId].details.componentFailures = [result[connectionId].details.componentFailures];\n            }\n          }\n          if (result[connectionId].details.componentSuccesses) {\n            if (!_.isArray(result[connectionId].details.componentSuccesses)) {\n              result[connectionId].details.componentSuccesses = [result[connectionId].details.componentSuccesses];\n            }\n          }\n          if (result[connectionId].details.runTestResult && result[connectionId].details.runTestResult.codeCoverageWarnings) {\n            if (!_.isArray(result[connectionId].details.runTestResult.codeCoverageWarnings)) {\n              result[connectionId].details.runTestResult.codeCoverageWarnings = [result[connectionId].details.runTestResult.codeCoverageWarnings];\n            }\n          }\n        });\n        resolve(result);\n      })\n      .catch(function(err) {\n        logger.error('Could not complete deployment: '+err.message);\n        reject(err);\n      })\n      .done();\n  });\n};\n\n/**\n * Takes an array of Metadata instances and prepares a local deployment zip to be passed to the Metadata API for deployment\n * @param  {Array} of type Metadata - metadata\n * @return {Promise} resolves with zip stream\n */\nDeploy.prototype.stage = function(files, subscription) {\n  var self = this;\n  return new Promise(function(resolve, reject) {\n\n    // TODO: handle folder-based metadata, like documents, templates\n    // recurse upward looking for valid folder name, if reach path.join(workspace, projectname), then not valid?\n\n    // writes temp directory, puts zip file inside\n    var newPath = temp.mkdirSync({ prefix: 'mm_' });\n    fs.mkdirpSync(path.join(newPath, 'unpackaged'));\n\n    var pkg = new Package({ subscription: subscription });\n    pkg.init()\n      .then(function() {\n        pkg.path = path.join(newPath, 'unpackaged', 'package.xml');\n        pkg.writeFileSync();\n\n        _.each(files, function(f) {\n\n          logger.debug('STAGING: '+f.path);\n          var filePath = f.path;\n          // filePath => /foo/bar/myproject/unpackaged/classes/myclass.cls\n\n          var fileBasename = path.basename(filePath);\n          // fileBaseName => myclass.cls\n\n          logger.debug('fileBasename: '+fileBasename);\n\n          var directory = path.dirname(filePath);\n          // directory => /foo/bar/myproject/unpackaged/classes\n\n          logger.debug('directory: '+directory);\n\n          var projectSrc = path.join(self.project.workspace, self.project.name, 'src');\n          var destinationDirectory = directory.replace(projectSrc, path.join(newPath, 'unpackaged'));\n          // destinationDirectory => /foo/bar/myproject/unpackaged/classes\n\n          logger.debug('destinationDirectory: '+destinationDirectory);\n\n          // make directory if it doesnt exist (parent dirs included)\n          if (!fs.existsSync(destinationDirectory)) {\n            fs.mkdirpSync(destinationDirectory);\n          }\n\n          // copy to tmp\n          fs.copySync(filePath, path.join(destinationDirectory, fileBasename));\n\n          if (f.hasMetaFile) {\n            if (f.isMetaFile) {\n              fs.copySync(filePath.replace('-meta.xml',''), path.join(destinationDirectory, fileBasename.replace('-meta.xml', '')));\n            } else {\n              fs.copySync(filePath+'-meta.xml', path.join(destinationDirectory, fileBasename+'-meta.xml'));\n            }\n          }\n        });\n        return util.zipDirectory(path.join(newPath, 'unpackaged'), newPath);\n      })\n      .then(function() {\n        var zipStream = fs.createReadStream(path.join(newPath, 'unpackaged.zip'));\n        resolve(zipStream);\n      })\n      .catch(function(err) {\n        logger.debug('Could not prepare metadata for deployment: '+err.message);\n        reject(err);\n      })\n      .done();\n  });\n};\n\n/**\n * Deploys zipStream to project's sfdcClient\n * @param  {Stream} zipStream - zipped deployment\n * @return {[type]}           [description]\n */\nDeploy.prototype.executeStream = function(zipStream, opts) {\n  var self = this;\n  var deployOptions = opts || {};\n  deployOptions.rollbackOnError = true;\n  return new Promise(function(resolve, reject) {\n    self.project.sfdcClient.deploy(zipStream, deployOptions)\n      .then(function(result) {\n        resolve(result);\n      })\n      .catch(function(error) {\n        reject(error);\n      })\n      .done();\n  });\n};\n\n// TODO: CHANGE METADATA TO FILE!!!\n\n/**\n * Deploys file instance to server, creating a server copy, places in self.project\n * @return {Promise} - resolves with Object response from Salesforce\n */\nDeploy.prototype.execute = function(file, deployOptions) {\n  var self = this;\n  return new Promise(function(resolve, reject) {\n\n    if (!deployOptions) {\n      deployOptions = {\n        rollbackOnError: true\n      };\n    }\n\n    var newPath = temp.mkdirSync({ prefix: 'mm_' });\n    logger.debug('deploying file: ');\n\n    var pkg = new Package({ subscription: mavensMateFile.createPackageSubscription([file]) });\n    pkg.init()\n      .then(function() {\n        pkg.path = path.join(newPath, 'unpackaged', 'package.xml');\n        pkg.writeFileSync();\n        return file.renderAndWriteToDisk(path.join(newPath, 'unpackaged'));\n      })\n      .then(function() {\n        return util.zipDirectory(path.join(newPath, 'unpackaged'), newPath);\n      })\n      .then(function() {\n        var zipStream = fs.createReadStream(path.join(newPath, 'unpackaged.zip'));\n        return self.project.sfdcClient.deploy(zipStream, deployOptions);\n      })\n      .then(function(result) {\n        logger.debug('Creation result: ');\n        logger.debug(result);\n        if (result.success) {\n          var metadataPath = path.join(newPath, 'unpackaged', file.type.directoryName, file.name+'.'+file.type.suffix);\n          // metadataPath => /my/tmp/directory/unpackaged/classes/myclass.cls\n\n          var fileBasename = path.basename(metadataPath);\n          // fileBaseName => myclass.cls\n\n          var directory = path.dirname(metadataPath);\n          // directory => /my/tmp/directory/unpackaged/classes\n\n          var projectSrc = path.join(self.project.workspace, self.project.name, 'src');\n          // projectSrc => /foo/bar/myproject/src\n\n          var destinationDirectory = directory.replace(path.join(newPath, 'unpackaged'), projectSrc);\n          // destinationDirectory => /foo/bar/myproject/src/classes\n\n          // make directory if it doesnt exist (parent dirs included)\n          if (!fs.existsSync(destinationDirectory)) {\n            fs.mkdirpSync(destinationDirectory);\n          }\n\n          // copy to project\n          // console.log(metadataPath);\n          // console.log(path.join(destinationDirectory, fileBasename));\n          fs.copySync(metadataPath, path.join(destinationDirectory, fileBasename));\n\n          if (file.hasMetaFile) {\n            fs.copySync(metadataPath+'-meta.xml', path.join(destinationDirectory, fileBasename+'-meta.xml'));\n          }\n        }\n        resolve(result);\n      })\n      .catch(function(err) {\n        logger.debug('Error deploying new file to server');\n        logger.debug(err);\n        logger.debug(err.stack);\n        if (err.message.indexOf('polling time out') >= 0) {\n            reject(new Error('MavensMate timed out while polling Salesforce.com servers. To increase polling timeout, set mm_timeout to number of seconds.'));\n        } else {\n            reject(err);\n        }\n      })\n      .done();\n  });\n};\n\nDeploy.prototype._deployToTarget = function(target, deployPath, deployOptions) {\n  var self = this;\n  return new Promise(function(resolve, reject) {\n    logger.debug('deploying to target: ');\n    logger.debug(target);\n\n    // if using keyring, retrieve password (otherwise it will be a property of the target)\n    if (target.username && !target.password) {\n      target.password = self.project.keychainService.getPassword(target.id, 'password');\n    } else if (!target.password && !target.accessToken && !target.refreshToken) {\n      target.accessToken = self.project.keychainService.getPassword(target.id, 'accessToken');\n      target.refreshToken = self.project.keychainService.getPassword(target.id, 'refreshToken');\n    }\n\n    var deployClient;\n    var deployStream;\n\n    logger.debug('READY TO DEPLOY: ');\n    logger.debug(target.name);\n    if (target.password) {\n      logger.silly(target.password);\n    } else {\n      logger.silly(target.accessToken);\n      logger.silly(target.refreshToken);\n    }\n    logger.debug(target.instanceUrl);\n    logger.debug('deploy options:');\n    logger.debug(deployOptions);\n\n    util.zipDirectory(path.join(deployPath, 'unpackaged'), deployPath)\n      .then(function() {\n        if (target.username && target.password) {\n          deployClient = new SalesforceClient({\n            username: target.username,\n            password: target.password,\n            orgType: target.orgType,\n            loginUrl: target.loginUrl\n          });\n        } else {\n          deployClient = new SalesforceClient({\n            accessToken: target.accessToken,\n            refreshToken: target.refreshToken,\n            instanceUrl: target.instanceUrl\n          });\n        }\n        return deployClient.initialize();\n      })\n      .then(function() {\n        deployClient.setPollingTimeout(300000); // TODO: make configurable from UI\n        deployStream = fs.createReadStream(path.join(deployPath, 'unpackaged.zip'));\n        return deployClient.deploy(deployStream, deployOptions);\n      })\n      .then(function(deployResult) {\n        var result = {};\n        result[target.id] = deployResult;\n        resolve(result);\n      })\n      .catch(function(err) {\n        logger.error('_deployToTarget failed', target.name, target.id, err.message);\n        logger.error(err);\n        reject(err);\n      })\n      .done();\n  });\n};\n\n/**\n * Takes an array of Metadata instances and prepares a local deployment zip to be passed to the Metadata API for deletion\n * @param  {Array} of type Metadata - metadata\n * @return {Promise} resolves with zip stream\n */\nDeploy.prototype.stageDelete = function(subscription) {\n  return new Promise(function(resolve, reject) {\n    // TODO: handle folder-based metadata, like documents, templates\n    // recurse upward looking for valid folder name, if reach path.join(workspace, projectname), then not valid?\n\n    // writes temp directory, puts zip file inside\n    var newPath = temp.mkdirSync({ prefix: 'mm_' });\n\n    fs.mkdirpSync(path.join(newPath, 'unpackaged'));\n\n    var pkg = new Package({ subscription: subscription });\n    var emptyPackage = new Package({ subscription: {} });\n    pkg.init()\n      .then(function() {\n        pkg.path = path.join(newPath, 'unpackaged', 'destructiveChanges.xml');\n        pkg.writeFileSync();\n        emptyPackage = new Package({ subscription: {} });\n        return emptyPackage.init();\n      })\n      .then(function() {\n        emptyPackage.path = path.join(newPath, 'unpackaged', 'package.xml');\n        emptyPackage.writeFileSync();\n        return util.zipDirectory(path.join(newPath, 'unpackaged'), newPath);\n      })\n      .then(function() {\n        var zipStream = fs.createReadStream(path.join(newPath, 'unpackaged.zip'));\n        resolve(zipStream);\n      })\n      .catch(function(err) {\n        logger.debug('Could not prepare metadata for deletion: '+err);\n        reject(err);\n      })\n      .done();\n  });\n};\n\n\nmodule.exports = Deploy;\n\n\n\n/** WEBPACK FOOTER **\n ** ../mavensmate/app/lib/services/deploy.js\n **/","module.exports = require(\"temp\");\n\n\n/*****************\n ** WEBPACK FOOTER\n ** external \"temp\"\n ** module id = 19\n ** module chunks = 0\n **/","/**\n * @file Represents a package.xml file\n * @author Joseph Ferraro <@joeferraro>\n */\n\n'use strict';\n\nvar Promise = require('bluebird');\nvar _       = require('lodash');\nvar swig    = require('swig');\nvar fs      = require('fs-extra');\nvar path    = require('path');\nvar logger  = require('winston');\nvar config  = require('../config');\nvar xmldoc  = require('xmldoc');\nvar sax     = require('sax');\n\n/**\n * Represents a collection of metadata\n * @param {Object} opts\n * @param {String} opts.path - path to package.xml\n * @param {Array} opts.metadata - Array of Metadata\n * @param {Array} opts.metadataTypeXmlNames - Array of metadata type xml names, e.g. ['ApexClass', 'ApexPage']\n */\n\n// can take array of metadata as constructor argument, turns into object representation\n// { \"ApexClass\" : [ \"thisclass\", \"thatclass\" ], \"ApexPage\" : \"*\" }\n\nfunction Package(opts) {\n  this.path = opts.path;\n  this.files = opts.files;\n  this.metadataTypeXmlNames = opts.metadataTypeXmlNames;\n  this.subscription = opts.subscription;\n  this.project = opts.project;\n}\n\nPackage.prototype._path = null;\nPackage.prototype._files = null;\nPackage.prototype._subscription = null;\n\nPackage.prototype.init = function() {\n  var self = this;\n  return new Promise(function(resolve, reject) {\n    if (self.subscription) {\n      logger.debug('initing package instance with subscription: ');\n      logger.debug(self.subscription);\n      self._ensureCustomObjectSubscriptionIsValid()\n        .then(function() {\n          resolve();\n        })\n        .catch(function(e) {\n          reject(e);\n        });\n    } else {\n      logger.debug('initing package instance');\n      if (self.files) {\n        self._getSubscriptionFromFiles()\n          .then(function(obj) {\n            logger.debug('setting package subscription: ');\n            logger.debug(obj);\n            self.subscription = obj;\n            resolve();\n          })\n          .catch(function(err) {\n            reject(new Error('Could not initiate Package instance by metadata list: '+err.message));\n          });\n      } else if (self.metadataTypeXmlNames) {\n        self._getSubscriptionFromMetadataTypeXmlNames()\n          .then(function(obj) {\n            logger.debug('setting package subscription: ');\n            logger.debug(obj);\n            self.subscription = obj;\n            resolve();\n          })\n          .catch(function(err) {\n            reject(new Error('Could not initiate Package instance by metadata list: '+err.message));\n          });\n      } else if (self.path) {\n        self._deserialize()\n          .then(function(obj) {\n            logger.debug('setting package subscription: ');\n            logger.debug(obj);\n            self.subscription = obj;\n            self._ensureCustomObjectSubscriptionIsValid()\n              .then(function() {\n                resolve();\n              })\n              .catch(function(e) {\n                reject(e);\n              });\n          })\n          .catch(function(err) {\n            reject(new Error('Could not initiate Package instance by path: '+err.message));\n          });\n      }\n    }\n  });\n};\n\n/**\n *  Unstructured array of Metadata elements included in this package\n */\nObject.defineProperty(Package.prototype, 'files', {\n  get: function() {\n    return this._files;\n  },\n  set: function(value) {\n    this._files = value;\n  }\n});\n\n/**\n *  Structured Metadata subscription ( { \"ApexClass\" : [ \"thisclass\", \"thatclass\" ], \"ApexPage\" : \"*\" } )\n */\nObject.defineProperty(Package.prototype, 'subscription', {\n  get: function() {\n    return this._subscription;\n  },\n  set: function(value) {\n    this._subscription = value;\n  }\n});\n\n/**\n *  File path of this package\n */\nObject.defineProperty(Package.prototype, 'path', {\n  get: function() {\n    return this._path;\n  },\n  set: function(value) {\n    this._path = value;\n  }\n});\n\nPackage.prototype._ensureCustomObjectSubscriptionIsValid = function() {\n  var self = this;\n  return new Promise(function(resolve, reject) {\n    try {\n      logger.debug('_ensureCustomObjectSubscriptionIsValid');\n      if (self.project && self.subscription.CustomObject && self.subscription.CustomObject === '*') {\n        var customObjectSub = [];\n        var projectMetadata = self.project.getOrgMetadataIndex()\n          .then(function(index) {\n            var customObjectIndex = _.find(index, function(item){ return item.id === 'CustomObject' });\n            _.each(customObjectIndex.children, function(customObjectChild) {\n              customObjectSub.push(customObjectChild.fullName);\n            });\n            self.subscription.CustomObject = customObjectSub;\n            resolve();\n          })\n          .catch(function(err) {\n            logger.error('could not subscribe to all custom objects', err);\n            resolve();\n          });\n      } else {\n        resolve();\n      }\n    } catch(err) {\n      logger.error('could not subscribe to all custom objects', err);\n      resolve(); // we resolve so we dont break a user's retrieve\n    }\n  });\n};\n\n// todo: some types dont support '*' subscription\nPackage.prototype._getSubscriptionFromMetadataTypeXmlNames = function() {\n  var self = this;\n  return new Promise(function(resolve, reject) {\n    try {\n      var sub = {};\n      _.each(self.metadataTypeXmlNames, function(typeXmlName) {\n        sub[typeXmlName] = '*';\n      });\n      resolve(sub);\n    } catch(err) {\n      reject(new Error('Could not get package dictionary: '+err.message));\n    }\n  });\n};\n\nPackage.prototype._getSubscriptionFromFiles = function() {\n  var self = this;\n  return new Promise(function(resolve, reject) {\n    try {\n      var pkg = {};\n      _.each(self.files, function(f) {\n        var metadataTypeXmlName = f.type.xmlName;\n        if (!_.has(pkg, metadataTypeXmlName)) {\n          pkg[metadataTypeXmlName] = [f.name];\n        } else {\n          var value = pkg[metadataTypeXmlName];\n          value.push(f.name);\n        }\n      });\n      return resolve(pkg);\n    } catch(err) {\n      reject(new Error('Could not get package dictionary: '+err.message));\n    }\n  });\n};\n\nPackage.prototype.writeFile = function() {\n  var self = this;\n  return new Promise(function(resolve, reject) {\n    if (!self.path) {\n      return reject(new Error('Could not write to disk. Please specify package path'));\n    }\n    logger.debug('writing package to path: '+self.path);\n    var xmlBody = self._serialize();\n    fs.outputFile(self.path, xmlBody, function(err) {\n      if (err) {\n        reject(new Error('Could not write package to disk: '+err.message));\n      } else {\n        resolve();\n      }\n    });\n  });\n};\n\nPackage.prototype.writeFileSync = function() {\n  var xmlBody = this._serialize();\n  logger.debug('writing package to path: '+this.path);\n  logger.debug(xmlBody);\n  fs.outputFileSync(this.path, xmlBody);\n};\n\n/**\n * Inserts metadata to package subscription\n * @param  {Array of type Metadata} metadata\n * @return {None}\n */\nPackage.prototype.subscribe = function(files) {\n  var self = this;\n  if (!_.isArray(files)) {\n    files = [files];\n  }\n  _.each(files, function(f) {\n    // logger.debug('metadata type: ');\n    // logger.debug(f.type);\n    var metadataTypeXmlName = f.type.xmlName;\n    if (_.has(self.subscription, metadataTypeXmlName)) {\n      if (self.subscription[metadataTypeXmlName] === '*') {\n        return false; // nothing to do here\n      } else {\n        if (self.subscription[metadataTypeXmlName].indexOf(f.subscriptionName) === -1) {\n          self.subscription[metadataTypeXmlName].push(f.subscriptionName);\n        }\n      }\n    } else {\n      self.subscription[metadataTypeXmlName] = [f.subscriptionName];\n    }\n  });\n};\n\n/**\n * Removes metadata from package subscription\n * @param  {Array of type Metadata} metadata\n * @return {[type]}\n */\nPackage.prototype.unsubscribe = function(files) {\n  var self = this;\n  if (!_.isArray(files)) {\n    files = [files];\n  }\n  _.each(files, function(f) {\n    logger.debug('unsubscribing: '+f.name);\n    logger.debug('type: '+f.type);\n    var metadataTypeXmlName = f.type.xmlName;\n    if (_.has(self.subscription, metadataTypeXmlName)) {\n      if (self.subscription[metadataTypeXmlName] === '*') {\n        return false; // nothing to do here\n      } else {\n        var members = self.subscription[metadataTypeXmlName];\n        var newMembers = [];\n        _.each(members, function(member) {\n          if (member !== f.subscriptionName) {\n            newMembers.push(member);\n          }\n        });\n        self.subscription[metadataTypeXmlName] = newMembers;\n      }\n    } else {\n      self.subscription[metadataTypeXmlName] = f.subscriptionName;\n    }\n  });\n};\n\n/**\n * Take JS object representation of package.xml, serializes to XML\n * @param  {Object} packageXmlObject\n * @return {String}\n */\nPackage.prototype._serialize = function() {\n  var self = this;\n  logger.debug('serializing package:');\n  logger.debug(self.subscription);\n  var serialized = swig.renderFile(path.join(__dirname, 'templates', 'package.xml'), {\n    obj: self.subscription,\n    apiVersion: config.get('mm_api_version')\n  });\n  return serialized;\n};\n\n/**\n * Parses package.xml to JS object\n * @param {String} path - disk path of package.xml\n * @return {Promise} - resolves to JavaScript object\n */\nPackage.prototype._deserialize = function() {\n  var self = this;\n  return new Promise(function(resolve, reject) {\n    var pkg = {};\n    logger.debug('deserializing: '+self.path);\n    if (!self.path) {\n      reject(new Error('Please set package.xml path'));\n    } else {\n      fs.readFile(self.path, function(err, data) {\n        if (err) {\n          reject(err);\n        } else {\n          try {\n            var parser = sax.parser(true);\n            var isValidPackage = true;\n            parser.onerror = function (e) {\n              logger.debug('Parse error: package.xml --> '+e);\n              isValidPackage = false;\n              parser.resume();\n            };\n            parser.onend = function () {\n              if (!isValidPackage) {\n                reject(new Error('Could not parse package.xml, invalid XML'));\n              } else {\n                var doc = new xmldoc.XmlDocument(data);\n                _.each(doc.children, function(type) {\n                  var metadataType;\n                  var val = [];\n\n                  if (type.name !== 'types') {\n                    return;\n                  }\n                  _.each(type.children, function(node) {\n                    if (node.name === 'name' && node.val !== undefined) {\n                      metadataType = node.val;\n                      return false;\n                    }\n                  });\n                  _.each(type.children, function(node) {\n                    if (node.name === 'members') {\n                      if (node.val === '*') {\n                        val = '*';\n                        return false;\n                      } else {\n                        val.push(node.val);\n                      }\n                    }\n                  });\n                  pkg[metadataType] = val;\n                });\n                logger.debug('parsed package.xml to -->'+JSON.stringify(pkg));\n                resolve(pkg);\n              }\n            };\n            parser.write(data.toString().trim()).close();\n          } catch(e) {\n            reject('Could not deserialize package: '+e.message);\n          }\n        }\n      });\n    }\n  });\n};\n\n/**\n * Member providers are overrides when creating a package for retrieval by salesforce\n * they are necessary because certain metadata types don't behave \"normally\"\n */\n\nfunction MemberProvider(sfdcClient) {\n  this.sfdcClient = sfdcClient;\n}\n\nMemberProvider.prototype = {\n  getMembers : function(){}\n};\n\nfunction ListProvider(sfdcClient) {\n  this.sfdcClient = sfdcClient;\n}\n\nListProvider.prototype = {\n  getList : function(){}\n};\n\n\nfunction SharingRulesMemberProvider(sfdcClient) {\n  MemberProvider.call(this, sfdcClient);\n}\n\nSharingRulesMemberProvider.prototype = Object.create(MemberProvider.prototype, {\n  getMembers : {\n    value : function() {\n      var self = this;\n      return new Promise(function(resolve, reject) {\n        self.sfdcClient.list('CustomObject')\n          .then(function(res) {\n            var customObjectNames = [];\n            _.each(res.CustomObject, function(r) {\n              customObjectNames.push(r.fullName);\n            });\n            resolve(customObjectNames);\n          })\n          .catch(function(err) {\n            reject(err);\n          });\n      });\n    }\n  }\n});\nSharingRulesMemberProvider.prototype.constructor = SharingRulesMemberProvider;\n\nfunction SharingRulesListProvider(sfdcClient) {\n  ListProvider.call(this, sfdcClient);\n}\n\nSharingRulesListProvider.prototype = Object.create(ListProvider.prototype, {\n  getList: {\n    value: function() {\n      var self = this;\n      return new Promise(function(resolve, reject) {\n        var memberProvider = new SharingRulesMemberProvider(self.sfdcClient);\n        memberProvider.getMembers()\n          .then(function(members) {\n            return self.sfdcClient.retrieveUnpackaged({\n              SharingRules : members\n            });\n          })\n          .then(function(retrieveResult) {\n            var res = {};\n            res.SharingRules = _.filter(retrieveResult.fileProperties, function(fileProperty) {\n              return fileProperty.type === 'SharingRules';\n            });\n            resolve(res);\n          })\n          .catch(function(err) {\n            reject(err);\n          });\n      });\n    }\n  }\n});\n\nSharingRulesListProvider.prototype.constructor = SharingRulesListProvider;\n\nfunction CustomObjectMemberProvider(sfdcClient) {\n  MemberProvider.call(this, sfdcClient);\n}\n\nfunction WorkflowListProvider(sfdcClient) {\n  ListProvider.call(this, sfdcClient);\n}\n\nWorkflowListProvider.prototype = Object.create(ListProvider.prototype, {\n  getList: {\n    value: function() {\n      var self = this;\n      return new Promise(function(resolve, reject) {\n        Promise.all([\n          // retrieve CaseComment workflow file properties separately, since CaseComment isn't returned\n          // with list workflow call, see http://salesforce.stackexchange.com/q/100517/594\n          self.sfdcClient.retrieveUnpackaged({\n            Workflow : ['CaseComment']\n          }),\n          self.sfdcClient.list('Workflow')\n        ])\n          .then(function(results) {\n            var retrieveResults = results[0];\n            var listResults = results[1];\n            var output = listResults;\n            var caseCommentWorkflows = _.filter(retrieveResults.fileProperties, function(fileProperty) {\n              return fileProperty.type === 'Workflow';\n            })\n            output.Workflow = output.Workflow.concat(caseCommentWorkflows);\n            resolve(output);\n          })\n          .catch(reject).done();\n      });\n    }\n  }\n});\n\nWorkflowListProvider.prototype.constructor = WorkflowListProvider;\n\nmodule.exports.Package = Package;\nmodule.exports.MemberProvider = MemberProvider;\nmodule.exports.ListProvider = ListProvider;\nmodule.exports.SharingRulesMemberProvider = SharingRulesMemberProvider;\nmodule.exports.SharingRulesListProvider = SharingRulesListProvider;\nmodule.exports.WorkflowListProvider = WorkflowListProvider;\n\n\n/** WEBPACK FOOTER **\n ** ../mavensmate/app/lib/package.js\n **/","module.exports = require(\"moment\");\n\n\n/*****************\n ** WEBPACK FOOTER\n ** external \"moment\"\n ** module id = 21\n ** module chunks = 0\n **/","module.exports = require(\"querystring\");\n\n\n/*****************\n ** WEBPACK FOOTER\n ** external \"querystring\"\n ** module id = 22\n ** module chunks = 0\n **/","/**\n * @file Responsible for refreshing local metadata from the connected Salesforce server\n * @author Joseph Ferraro <@joeferraro>\n */\n\n'use strict';\n\nvar fs                = require('fs-extra-promise');\nvar path              = require('path');\nvar Promise           = require('bluebird');\nvar logger            = require('winston');\nvar MetadataHelper    = require('./metadata').MetadataHelper;\nvar LightningService  = require('./services/lightning');\nvar Package           = require('./package').Package;\nvar util              = require('./util');\nvar temp              = require('temp');\nvar mavensMateFile    = require('./file');\n\n/**\n * Responsible for refreshing local copies of files/directories from the server\n * @param {Project} project - project instance (required)\n * @param {Array} paths - array of path strings [ 'foo/bar/src/classes', 'foo/bar/src/pages/foo.page' ]\n */\nvar RefreshDelegate = function(project, paths) {\n  if (!project || !paths) {\n    throw new Error('RefreshDelegate requires a valid project instance and an array of paths to refresh.');\n  }\n  this.project = project;\n  this.paths = paths;\n  this.metadataHelper = new MetadataHelper({ sfdcClient : this.project.sfdcClient });\n};\n\n/**\n * Executes refresh and overwrite for all delegate paths\n * @return {Promise}\n * TODO: handle src\n */\nRefreshDelegate.prototype.execute = function() {\n  // TODO: implement stash\n  var self = this;\n  return new Promise(function(resolve, reject) {\n    self._refreshLocalPaths()\n      .then(function(res) {\n        resolve(res);\n      })\n      .catch(function(err) {\n        // TODO: revert via stash\n        logger.debug('Could not complete refresh request: '+err.message);\n        reject(err);\n      });\n  });\n};\n\n/**\n * Retrieves source of metadata via retrieve\n * @param  {Array} metadata - array of Metadata instances\n * @return {Promise}\n */\nRefreshDelegate.prototype._refreshLocalPaths = function() {\n  // 1. get subscription for that path\n  // 2. create retrieve request\n  // 3. overwrite!\n  //\n\n  // [\n  //   'foo/bar/src/classes', -> 'TOP_LEVEL_METADATA_DIRECTORY'\n  //   'foo/bar/src/pages/mypage.page', -> 'TOP_LEVEL_METADATA_FILE'\n  //   'foo/bar/src/documents/myfolder', -> 'METADATA_FOLDER'\n  //   'foo/bar/src/email/myemailfolder/myemail.email', -> 'METADATA_FOLDER_ITEM'\n  //   'foo/bar/src/aura/mylightningbundle', -> 'LIGHTNING_BUNDLE'\n  //   'foo/bar/src/aura/mylightningbundle/mylightningbundleController.js' -> 'LIGHTNING_BUNDLE_ITEM'\n  // ]\n  //\n  // top-level directories (foo/bar/src/classes) can be refreshed more easily\n  // foo/bar/src/classes -> ApexClass -> look for ApexClass subscription in project package -> add to retrieve package\n  //\n  // top-level files (foo/bar/src/pages/mypage.page) can be refresh easily\n  // foo/bar/src/pages/mypage.page -> ApexPage -> add mypage.page to ApexPage subscription in retrieve package\n  //\n  // sub-directories (foo/bar/src/documents/myfolder) are more difficult\n\n  var self = this;\n  return new Promise(function(resolve, reject) {\n    if (self.paths.length === 0) {\n      return resolve();\n    }\n\n    // first we get a list of types we're refreshing\n    // foo/bar/src/classes -> ApexClass\n    // foo/bar/src/documents/myfolder -> Document\n    // once we have the types we're refreshing [ 'ApexClass', 'Document' ], we can figure out what the subscription is for those types\n    // so we look at the packagexml and create a retrieval package:\n    // {\n    //   ApexClass : '*',\n    //   Document : ['myfolder', 'myfolder/myfile', 'myotherfolder', 'myotherfolder/myfile']\n    // }\n\n    var files = mavensMateFile.createFileInstances(self.paths);\n    var lightningBundleItemFiles = mavensMateFile.getLightningBundleItemFiles(files);\n    var refreshSubscription = mavensMateFile.createPackageSubscription(files, self.project.packageXml);\n\n    // now we perform the retrieve\n    var newPath = temp.mkdirSync({ prefix: 'mm_' });\n    var retrievePath = path.join(newPath, 'unpackaged');\n    //fs.mkdirsSync(retrievePath);\n    var fileProperties;\n    var pkg = new Package({ subscription: refreshSubscription });\n    pkg.init()\n      .then(function() {\n        logger.debug('submitting retrieve request for pkg metadata');\n        logger.debug(pkg.subscription);\n        return self.project.sfdcClient.retrieveUnpackaged(pkg.subscription, true, newPath);\n      })\n      .then(function(retrieveResult) {\n        fileProperties = retrieveResult.fileProperties;\n        return self.project.updateLocalStore(fileProperties);\n      })\n      .then(function() {\n        // TODO: handle packaged\n        return self.project.replaceLocalFiles(retrievePath);\n      })\n      .then(function(res) {\n        resolve(res);\n      })\n      .catch(function(err) {\n        logger.debug('Could not refresh metadata: '+err.message);\n        reject(err);\n      })\n      .done();\n  });\n};\n\n\n/**\n * Retrieves source of lightning bundle items, overwrite local copies\n * @param  {Array} lightningMetadata - array of Metadata of type Lightning\n * @return {Promise}\n * TODO: overwrite local copies\n */\nRefreshDelegate.prototype._retrieveAndOverwriteLightningMetadata = function(lightningMetadata) {\n  var self = this;\n  return new Promise(function(resolve, reject) {\n    if (lightningMetadata.length === 0) {\n      return resolve();\n    }\n\n    logger.debug('refreshing lightning components');\n    logger.debug(lightningMetadata[0].path);\n\n    var lightningService = new LightningService(self.project);\n    lightningService.getBundleItems(lightningMetadata)\n      .then(function(result) {\n        // console.log('result from getting bundle items: ');\n        // console.log(result);\n        resolve(result);\n        // todo : overwrite\n      })\n      .catch(function(err) {\n        reject(err);\n      })\n      .done();\n  });\n};\n\nmodule.exports = RefreshDelegate;\n\n\n\n/** WEBPACK FOOTER **\n ** ../mavensmate/app/lib/refresh.js\n **/","/**\n * @file Responsible for CRUD of org connections (deploy targets)\n * @author Joseph Ferraro <@joeferraro>\n */\n\n'use strict';\nvar Promise                 = require('bluebird');\nvar _                 = require('lodash');\nvar fs                = require('fs-extra');\nvar path              = require('path');\nvar uuid              = require('node-uuid');\nvar SalesforceClient  = require('../sfdc-client');\nvar KeychainService   = require('../services/keychain');\nvar logger            = require('winston');\n\n/**\n * Service to get, add, update, remove org connections for a given project\n * @param {Object} project - project instance\n */\nfunction OrgConnectionService(project) {\n  this.project = project;\n  this.keychainService = new KeychainService();\n}\n\n/**\n * Lists all org connections for this project\n * @return {Array} - list of connections\n */\nOrgConnectionService.prototype.listAll = function() {\n  var self = this;\n  return new Promise(function(resolve, reject) {\n    fs.readJson(path.join(self.project.path, 'config', '.org_connections'), function(err, connections) {\n      if (err) {\n        if (err.message.indexOf('ENOENT') >= 0) {\n          resolve([]);\n        } else {\n          reject(new Error('Could not load org connections: '+err.message));\n        }\n      } else {\n        _.each(connections, function(c) {\n          if (self.keychainService.useSystemKeychain()) {\n            c.accessToken = self.keychainService.getPassword(c.id, 'accessToken', true);\n            c.refreshToken = self.keychainService.getPassword(c.id, 'refreshToken', true);\n            c.password = self.keychainService.getPassword(c.id, 'password', true);\n          }\n        });\n        logger.debug('returning all org connections', connections);\n        resolve(connections);\n      }\n    });\n  });\n};\n\n/**\n * Returns the org connection by id\n * @return {Object} - connection\n */\nOrgConnectionService.prototype.getById = function(id) {\n  try {\n    var connections = fs.readJsonSync(path.join(this.project.path, 'config', '.org_connections'));\n    return _.find(connections, function(c) { return c.id === id; });\n  } catch(e) {\n    if (e.message.indexOf('ENOENT') >= 0) {\n      return null;\n    } else {\n      throw e;\n    }\n  }\n};\n\n/**\n * Adds an org connection\n * @param {Object} opts\n * @param {String} opts.name\n * @param {String} opts.accessToken\n * @param {String} opts.refreshToken\n * @param {String} opts.username\n * @param {String} opts.password\n * @param {String} opts.instanceUrl\n * @param {String} opts.orgType\n * @param {String} opts.loginUrl\n *\n */\nOrgConnectionService.prototype.add = function(opts) {\n  var self = this;\n  return new Promise(function(resolve, reject) {\n    var connectionId = uuid.v1();\n    if (opts.username && opts.password) {\n      var newConnection = {\n        name: opts.name,\n        id: connectionId,\n        username: opts.username,\n        orgType: opts.orgType,\n        loginUrl: opts.loginUrl\n      };\n    } else {\n      var newConnection = {\n        name: opts.name,\n        id: connectionId,\n        instanceUrl: opts.instanceUrl\n      };\n    }\n\n    if (opts.username && opts.password) {\n      if (self.keychainService.useSystemKeychain()) {\n        self.keychainService.storePassword(connectionId, opts.password, 'password');\n      } else {\n        newConnection.password = opts.password;\n      }\n    } else {\n      if (self.keychainService.useSystemKeychain()) {\n        self.keychainService.storePassword(connectionId, opts.accessToken, 'accessToken');\n        self.keychainService.storePassword(connectionId, opts.refreshToken, 'refreshToken');\n      } else {\n        newConnection.accessToken = opts.accessToken;\n        newConnection.refreshToken = opts.refreshToken;\n      }\n    }\n\n    if (opts.username && opts.password) {\n      var orgConnectionClient = new SalesforceClient({\n        username: opts.username,\n        password: opts.password,\n        instanceUrl: opts.instanceUrl,\n        loginUrl: opts.loginUrl,\n        orgType: opts.orgType\n      });\n    } else {\n      var orgConnectionClient = new SalesforceClient({\n        accessToken: opts.accessToken,\n        refreshToken: opts.refreshToken,\n        instanceUrl: opts.instanceUrl\n      });\n    }\n    orgConnectionClient.initialize()\n      .then(function() {\n        if (!fs.existsSync(path.join(self.project.path, 'config', '.org_connections'))) {\n          fs.outputFile(path.join(self.project.path, 'config', '.org_connections'), JSON.stringify([newConnection], null, 4), function(err) {\n            if (err) {\n              reject(err);\n            } else {\n              resolve();\n            }\n          });\n        } else {\n          fs.readJson(path.join(self.project.path, 'config', '.org_connections'), function(err, connections) {\n            if (err) {\n              reject(err);\n            } else {\n              connections.push(newConnection);\n              fs.outputFile(path.join(self.project.path, 'config', '.org_connections'), JSON.stringify(connections, null, 4), function(err) {\n                if (err) {\n                  reject(err);\n                } else {\n                  resolve();\n                }\n              });\n            }\n          });\n        }\n      })\n      .catch(function(err) {\n        logger.error('could not initialize sfdc client for org connection: '+err.message);\n        reject(err);\n      })\n      .done();\n\n  });\n};\n\n/**\n * Updates an org connection by id\n * @param {Object} opts\n * @param {String} opts.name\n * @param {String} opts.accessToken\n * @param {String} opts.refreshToken\n * @param {String} opts.username\n * @param {String} opts.password\n * @param {String} opts.instanceUrl\n * @param {String} opts.orgType\n * @param {String} opts.loginUrl\n * @return {Promise}\n */\nOrgConnectionService.prototype.update = function(opts) {\n  var self = this;\n  return new Promise(function(resolve, reject) {\n    if (!fs.existsSync(path.join(self.project.path, 'config', '.org_connections'))) {\n      fs.writeSync(path.join(self.project.path, 'config', '.org_connections'), []);\n    }\n    fs.readJson(path.join(self.project.path, 'config', '.org_connections'), function(err, connections) {\n      if (err) {\n        reject(new Error('Could not load org connections: '+err.message));\n      } else {\n        _.each(connections, function(c) {\n          if (c.id === opts.id) {\n            if (opts.username && opts.password) {\n              c.name = opts.name;\n              c.username = opts.username;\n              c.orgType = opts.orgType.toLowerCase();\n              c.loginUrl = opts.loginUrl;\n              if (self.keychainService.useSystemKeychain()) {\n                self.keychainService.replacePassword(c.id, opts.password, 'password');\n              } else {\n                c.password = opts.password;\n              }\n            } else {\n              c.name = opts.name;\n              c.instanceUrl = opts.instanceUrl;\n              if (self.keychainService.useSystemKeychain()) {\n                self.keychainService.replacePassword(c.id, opts.accessToken, 'accessToken');\n                self.keychainService.replacePassword(c.id, opts.refreshToken, 'refreshToken');\n              } else {\n                c.accessToken = opts.accessToken;\n                c.refreshToken = opts.refreshToken;\n              }\n            }\n            return false;\n          }\n        });\n        fs.outputFile(path.join(self.project.path, 'config', '.org_connections'), JSON.stringify(connections, null, 4), function(err) {\n          if (err) {\n            reject(new Error('Could not update org connections: '+err.message));\n          } else {\n            resolve();\n          }\n        });\n      }\n    });\n  });\n};\n\n/**\n * Removes an org connection\n * @param  {String} id\n * @return {Promise}\n */\nOrgConnectionService.prototype.remove = function(id) {\n  var self = this;\n  return new Promise(function(resolve, reject) {\n    fs.readJson(path.join(self.project.path, 'config', '.org_connections'), function(err, connections) {\n      if (err) {\n        reject(new Error('Could not load org connections: '+err.message));\n      } else {\n        var newConnections = [];\n        _.each(connections, function(c) {\n          if (c.id !== id) {\n            newConnections.push(c);\n          }\n        });\n        fs.outputFile(path.join(self.project.path, 'config', '.org_connections'), JSON.stringify(newConnections, null, 4), function(err) {\n          if (err) {\n            reject(new Error('Could not write org connections: '+err.message));\n          } else {\n            resolve();\n          }\n        });\n      }\n    });\n  });\n};\n\nmodule.exports = OrgConnectionService;\n\n\n/** WEBPACK FOOTER **\n ** ../mavensmate/app/lib/services/org-connection.js\n **/","module.exports = require(\"events\");\n\n\n/*****************\n ** WEBPACK FOOTER\n ** external \"events\"\n ** module id = 25\n ** module chunks = 0\n **/","module.exports = require(\"fs-extra-promise\");\n\n\n/*****************\n ** WEBPACK FOOTER\n ** external \"fs-extra-promise\"\n ** module id = 26\n ** module chunks = 0\n **/","module.exports = require(\"os\");\n\n\n/*****************\n ** WEBPACK FOOTER\n ** external \"os\"\n ** module id = 27\n ** module chunks = 0\n **/","module.exports = require(\"swig\");\n\n\n/*****************\n ** WEBPACK FOOTER\n ** external \"swig\"\n ** module id = 28\n ** module chunks = 0\n **/","var path            = require('path');\nvar util            = require('../util');\nvar logger          = require('winston');\nvar _               = require('lodash');\nvar capitalize      = require('../utilities/capitalize');\nvar camelize        = require('../utilities/camelize');\nvar EditorService   = require('../services/editor');\n\nvar commands = {};\nvar cmdPath = path.join(__dirname);\nvar commandFiles = util.walkSync(cmdPath);\n_.each(commandFiles, function(filepath) {\n  commands[capitalize(camelize(path.basename(filepath).split('.')[0])+'Command')] = require(filepath).command;\n});\n\n/**\n * Responses to the client that executed the command\n * @param  {Object|String} res   - response from the command\n * @param  {Boolean} success - whether the command was successfull (TODO: do we need this?)\n * @param  {Error} error   - error instance (for failed commands)\n * @return {String|Object|STDOUT}         - depends on the configuration of the client (more documentation needed here)\n */\nfunction _handleCommandResult(result) {\n  // if we're running via the cli, we can print human-friendly responses\n  // otherwise we return proper JSON\n  logger.info('handling command result');\n  if (result.result) {\n    logger.debug(result.result);\n  } else if (result.error) {\n    logger.error(result.error);\n  }\n\n  if (result.error) {\n    if (process.env.MAVENSMATE_CONTEXT !== 'cli') {\n      result.reject(result.error);\n    } else {\n      console.error(JSON.stringify({\n        error:result.error.message\n      }));\n      process.exit(1);\n    }\n  } else {\n    if (_.isString(result.result)) {\n      var response = {\n        message: result.result\n      };\n      if (process.env.MAVENSMATE_CONTEXT !== 'cli') {\n        result.resolve(response);\n      } else {\n        console.log(JSON.stringify(response));\n        process.exit(0);\n      }\n    } else {\n      if (process.env.MAVENSMATE_CONTEXT !== 'cli') {\n        result.resolve(result.result);\n      } else {\n        console.log(JSON.stringify(result.result));\n        process.exit(0);\n      }\n    }\n  }\n};\n\n/**\n * Command executor\n * @param  {Object} opts\n * @param  {Function} opts.openWindowFn - js function used to open a UI\n * @param  {Function} opts.project - project instance (used by the cli)\n * @return {Function}\n */\nmodule.exports = function(opts) {\n\n  opts = opts || {};\n\n  return {\n    /**\n     * Executes a command\n     * @param  {Object}   payload - object containing the following:\n     * @param  {String}   payload.name  - name of the command, e.g. new-project\n     * @param  {String}   payload.body  - arbitrary body of the command, e.g. { username: foo, password: bar } }\n     * @param  {String}   payload.project  - project instance or project id\n     * @param  {String}   payload.editor  - name of the editor, e.g. sublime, vscode, atom\n     * @param  {Function} payload.callback - callback, will be called when command finishes executing\n     * @return {Nothing}\n     */\n    execute: function(payload) {\n      return new Promise(function(resolve, reject) {\n        try {\n          logger.info('\\n\\n==================> executing command');\n          // logger.silly('payload ', payload);\n\n          var name, body, editor, project, openWindowFn, commandClassName;\n          name = payload.name;\n          body = payload.body;\n          editor = payload.editor || process.env.MAVENSMATE_EDITOR;\n          project = payload.project || opts.project;\n          openWindowFn = payload.openWindowFn || opts.openWindowFn;\n\n          // if we're in cli mode and our project has expired creds, we intercept the command and send them to authenticate\n          if (process.env.MAVENSMATE_CONTEXT === 'cli' && project && project.requiresAuthentication) {\n            name = 'oauth-project';\n          }\n\n          commandClassName = capitalize(camelize(name))+'Command'; // => new-project -> NewProjectCommand\n\n          var editorService = new EditorService(editor, openWindowFn);\n\n          var command = new commands[commandClassName](project, body, editorService);\n\n          logger.info('name: ', name);\n          logger.info('project: ', project && project.name ? project.name : 'none');\n          logger.info('body: ', JSON.stringify(body));\n          logger.info('editor: ', editor || 'none');\n          logger.debug('mavensmate command class name: '+commandClassName);\n          logger.silly('mavensmate command instance: ', command);\n\n          if (!commands[commandClassName]) {\n            _handleCommandResult({\n              error: new Error('Command not supported: '+name),\n              resolve: resolve,\n              reject: reject\n            });\n            return;\n          }\n\n          command.execute()\n            .then(function(result) {\n              _handleCommandResult({\n                result: result,\n                resolve: resolve,\n                reject: reject\n              });\n            })\n            .catch(function(error) {\n              _handleCommandResult({\n                error: error,\n                resolve: resolve,\n                reject: reject\n              });\n            });\n        } catch(e) {\n          logger.error(e);\n          _handleCommandResult(e);\n        }\n      });\n    }\n  }\n}\n\n\n/** WEBPACK FOOTER **\n ** ../mavensmate/app/lib/commands/index.js\n **/","/**\n * @file Represents a local MavensMate project\n * @author Joseph Ferraro <@joeferraro>\n */\n\n'use strict';\nvar Promise           = require('bluebird');\nvar temp              = require('temp');\nvar _                 = require('lodash');\nvar fs                = require('fs-extra-promise');\nvar path              = require('path');\nvar find              = require('findit');\nvar util              = require('./util');\nvar uuid              = require('node-uuid');\nvar inherits          = require('inherits');\nvar events            = require('events');\nvar SalesforceClient  = require('./sfdc-client');\nvar MetadataHelper    = require('./metadata').MetadataHelper;\nvar config            = require('../config');\nvar logger            = require('winston');\nvar normalize         = require('./utilities/normalize-object');\nvar IndexService      = require('./services/index');\nvar Package           = require('./package').Package;\nvar SymbolService     = require('./services/symbol');\nvar LogService        = require('./services/log');\nvar LightningService  = require('./services/lightning');\nvar KeychainService   = require('./services/keychain');\n\n/**\n * Represents a MavensMate project\n *\n * @constructor\n * @param {Object} [opts] - Options used in deployment\n * @param {String} [opts.name] - For new projects, sets the name of the project\n * @param {String} [opts.subscription] - (optional) Specifies list of Metadata types that the project should subscribe to\n * @param {String} [opts.workspace] - (optional) For new projects, sets the workspace\n * @param {String} [opts.path] - (optional) Explicitly sets path of the project (defaults to current working directory)\n * @param {String} [opts.origin] - (optional) When creating a MavensMate project from an existing directory, pass the existing path as \"origin\"\n */\nvar Project = function(opts) {\n  this.name = opts.name;\n  this.path = opts.path;\n  this.workspace = opts.workspace;\n  this.subscription = opts.subscription;\n  this.origin = opts.origin;\n  this.username = opts.username;\n  this.password = opts.password;\n  this.accessToken = opts.accessToken;\n  this.refreshToken = opts.refreshToken;\n  this.instanceUrl = opts.instanceUrl;\n  this.package = opts.package;\n  this.orgType = opts.orgType;\n  this.sfdcClient = opts.sfdcClient;\n  this.requiresAuthentication = true;\n  this.settings = {};\n  this.packageXml = null;\n  this.orgMetadata = null;\n  this.lightningIndex = null;\n  this.metadataHelper = null;\n  this.keychainService = new KeychainService();\n  this.logService = new LogService(this);\n  this.symbolService = new SymbolService(this);\n  this.lightningService = new LightningService(this);\n};\n\ninherits(Project, events.EventEmitter);\n\n/**\n * Initializes project instance based on whether this is a new or existing project\n * @param  {Boolean} isNewProject\n * @return {Promise}\n */\nProject.prototype.initialize = function(isNewProject, isExistingDirectory) {\n  var self = this;\n\n  return new Promise(function(resolve, reject) {\n    isNewProject = isNewProject || false;\n\n    if (!isNewProject) {\n      self._initExisting()\n        .then(function() {\n          resolve(self);\n        })\n        .catch(function(error) {\n          logger.error('Could not initiate existing Project instance: '+error.message);\n          reject(error);\n        })\n        .done();\n    } else if (isNewProject) {\n      var initPromise = isExistingDirectory ? self._initNewProjectFromExistingDirectory() : self._initNew();\n      initPromise\n        .then(function() {\n          resolve(self);\n        })\n        .catch(function(error) {\n          logger.error('Could not initiate new Project instance: '+error.message);\n          reject(error);\n        })\n        .done();\n    }\n  });\n};\n\n/**\n * Initiates an existing (on disk) MavensMate project instance\n * @return {Promise}\n */\nProject.prototype._initNewProjectFromExistingDirectory = function() {\n  var self = this;\n  return new Promise(function(resolve, reject) {\n    var pkg, fileProperties;\n    if (!self.workspace) {\n      throw new Error('Please select a workspace for this project');\n    }\n    if (!self.origin) {\n      throw new Error('Please select an origin for this project');\n    }\n    if (!fs.existsSync(path.join(self.origin, 'src'))) {\n      return reject(new Error('Project must have a top-level src directory'));\n    }\n    if (!fs.existsSync(path.join(self.origin, 'src', 'package.xml'))) {\n      return reject(new Error('Project must have a valid package.xml file located in the src directory'));\n    }\n    self.name = path.basename(self.origin); // set name of the project to the basename of the project's origin path\n\n    // if they're moving the project into a workspace\n    if (self.workspace !== path.dirname(self.origin)) {\n      if (fs.existsSync(path.join(self.workspace, self.name))) {\n        return reject(new Error('Project with this name already exists in the selected workspace'));\n      } else {\n        // copy non-mavensmate project to selected workspace\n        fs.ensureDirSync(path.join(self.workspace, self.name));\n        fs.copySync(self.origin, path.join(self.workspace, self.name));\n      }\n    }\n\n    self.path = path.join(self.workspace, self.name);\n    fs.ensureDirSync(path.join(self.path, 'config'));\n\n    self.sfdcClient.describe()\n      .then(function(describe) {\n        self.metadataHelper = new MetadataHelper({ sfdcClient: self.sfdcClient });\n        return self.setDescribe(describe);\n      })\n      .then(function() {\n        pkg = new Package({ project: self, path: path.join(self.path, 'src', 'package.xml') });\n        return pkg.init();\n      })\n      .then(function() {\n        return self.sfdcClient.retrieveUnpackaged(pkg.subscription, true, self.path);\n      })\n      .then(function(retrieveResult) {\n        logger.debug('retrieve result: ');\n        logger.debug(retrieveResult);\n        fileProperties = retrieveResult.fileProperties;\n        if (fs.existsSync(path.join(self.path, 'unpackaged'))) {\n          fs.removeSync(path.join(self.path, 'unpackaged'));\n        }\n        self.id = uuid.v1();\n        return self._initConfig();\n      })\n      .then(function() {\n        logger.debug('initiating local store');\n        logger.silly(fileProperties);\n\n        return self._writeLocalStore(fileProperties);\n      })\n      .then(function() {\n        resolve();\n      })\n      .catch(function(error) {\n        // remove directory from workspace if we encounter an exception along the way\n        logger.error('Could not retrieve and write project to file system: '+error.message);\n        logger.error(error.stack);\n        if (self.origin !== path.join(self.workspace, self.name) && fs.existsSync(path.join(self.workspace, self.name))) {\n          fs.removeSync(path.join(self.workspace, self.name));\n        }\n        reject(error);\n      })\n      .done();\n  });\n};\n\n/**\n * Initiates an existing (on disk) MavensMate project instance\n * @return {Promise}\n */\nProject.prototype._initExisting = function() {\n  logger.debug('itializing existing project on the disk...');\n\n  var self = this;\n\n  return new Promise(function(resolve, reject) {\n    if (!self._hasValidStructure()) {\n      return reject(new Error('This does not seem to be a valid MavensMate project directory.'));\n    }\n\n    if (self.path) {\n      self.workspace = path.dirname(self.path);\n      self.name = path.basename(self.path);\n    } else if (self.workspace && self.name) {\n      self.path = path.join(self.workspace, self.name);\n    } else {\n      self.path = process.cwd();\n      self.workspace = path.dirname(self.path);\n      self.name = path.basename(self.path);\n    }\n\n    if (!fs.existsSync(self.path)) {\n      return reject(new Error('Project path does not exist.'));\n    }\n\n    logger.debug('project name', self.name);\n    logger.debug('project path', self.path);\n\n    self.settings = self._readSettings();\n    var creds = self._readCredentials();\n    if (!creds.password && !creds.accessToken && !creds.refreshToken) {\n      throw new Error('Could not retrieve credentials for project '+self.name);\n    }\n    if (!creds.password && creds.accessToken && !creds.refreshToken) {\n      throw new Error('Project ('+self.name+') is using Oauth for authentication but no refresh token was found');\n    }\n\n    self.packageXml = new Package({\n      project: self,\n      path: path.join(self.path, 'src', 'package.xml')\n    });\n    self.packageXml.init()\n      .then(function() {\n        if (!self.sfdcClient) {\n          logger.debug('Creating new sfdc client', self.settings, creds);\n          if (creds.refreshToken) {\n            self.sfdcClient = new SalesforceClient({\n              username: self.settings.username,\n              accessToken: creds.accessToken,\n              refreshToken: creds.refreshToken,\n              instanceUrl: self.settings.instanceUrl,\n              loginUrl: self.settings.loginUrl,\n              orgType: self.settings.orgType\n            });\n          } else {\n            self.sfdcClient = new SalesforceClient({\n              username: self.settings.username,\n              password: creds.password,\n              loginUrl: self.settings.loginUrl,\n              orgType: self.settings.orgType\n            });\n          }\n          self._listenForTokenUpdates();\n        }\n        return self.sfdcClient.initialize();\n      })\n      .then(function(res) {\n        self.metadataHelper = new MetadataHelper({ sfdcClient: self.sfdcClient });\n        self.getLocalStore();\n        return self.getOrgMetadataIndexWithSelections();\n      })\n      .then(function() {\n        return self._refreshDescribeFromServer();\n      })\n      .then(function() {\n        self.sfdcClient.on('sfdcclient-new-log', function(message) {\n          if (message.sobject && message.sobject.Id) {\n            self.logService.downloadLog(message.sobject.Id)\n              .then(function(filePath) {\n                self.emit('new-log', filePath);\n              })\n              .catch(function(error) {\n                logger.debug('Could not download log: '+error.message);\n              })\n              .done();\n          }\n        });\n        return self.sfdcClient.startSystemStreamingListener();\n      })\n      .then(function() {\n        self.requiresAuthentication = false;\n        resolve();\n      })\n      .catch(function(error) {\n        logger.error(error);\n        if (util.isCredentialsError(error)) {\n          logger.debug('project has expired access/refresh token, marking as invalid');\n          self.requiresAuthentication = true;\n        }\n        reject(error);\n      })\n      .done();\n  });\n};\n\n/**\n * Initiates a new (not yet on disk) MavensMate project instance\n * @return {Promise}\n */\nProject.prototype._initNew = function() {\n  var self = this;\n  return new Promise(function(resolve, reject) {\n    if (!self.workspace) {\n      var workspace;\n      var workspaceSetting = config.get('mm_workspace');\n      logger.debug('Workspace not specified, retrieving base workspace: ');\n      logger.debug(workspaceSetting);\n      if (_.isArray(workspaceSetting)) {\n        workspace = workspaceSetting[0];\n      } else if (_.isString(workspaceSetting)) {\n        workspace = workspaceSetting;\n      }\n      if (workspace && !fs.existsSync(workspace)) {\n        fs.mkdirSync(workspace);\n      }\n      self.workspace = workspace;\n      logger.debug('workspace set to: '+self.workspace);\n    } else if (!fs.existsSync(self.workspace)) {\n      fs.mkdirSync(self.workspace);\n    }\n    if (!self.workspace) {\n      throw new Error('Could not set workspace for new project');\n    }\n    self.path = path.join(self.workspace, self.name);\n    if (fs.existsSync(self.path)) {\n      reject(new Error('Directory already exists!'));\n    } else {\n      self.id = uuid.v1();\n      resolve(self.id);\n    }\n  });\n};\n\n/**\n * Whether this project has a valid MavensMate project structure\n * @return {Boolean}\n */\nProject.prototype._hasValidStructure = function() {\n  if (this.path) {\n    return fs.existsSync(path.join(this.path, 'config', '.settings'));\n  } else if (this.workspace && this.name) {\n    return fs.existsSync(path.join(this.workspace, this.name, 'config', '.settings'));\n  } else {\n    return fs.existsSync(path.join(process.cwd(),'config', '.settings'));\n  }\n};\n\nProject.prototype.replaceLocalFiles = function(remotePath, replacePackageXml) {\n  var self = this;\n  return new Promise(function(resolve, reject) {\n    var finder = find(remotePath);\n    finder.on('file', function (file) {\n      var fileBasename = path.basename(file);\n      // file => /foo/bar/myproject/unpackaged/classes/myclass.cls\n      logger.debug('refreshing file: '+file);\n\n      var directory = path.dirname(file); //=> /foo/bar/myproject/unpackaged/classes\n      var destinationDirectory = directory.replace(remotePath, path.join(self.workspace, self.name, 'src')); //=> /foo/bar/myproject/src/classes\n\n      // make directory if it doesnt exist (parent dirs included)\n      if (!fs.existsSync(destinationDirectory)) {\n        fs.mkdirpSync(destinationDirectory);\n      }\n\n      // remove project metadata, replace with recently retrieved\n      if (replacePackageXml && fileBasename === 'package.xml') {\n        fs.removeSync(path.join(destinationDirectory, fileBasename));\n        fs.copySync(file, path.join(destinationDirectory, fileBasename));\n      } else if (fileBasename !== 'package.xml') {\n        fs.removeSync(path.join(destinationDirectory, fileBasename));\n        fs.copySync(file, path.join(destinationDirectory, fileBasename));\n      }\n    });\n    finder.on('end', function () {\n      // remove retrieved\n      // TODO: package support\n      if (fs.existsSync(remotePath)) {\n        fs.removeAsync(remotePath)\n          .then(function() {\n            resolve();\n          })\n          .catch(function(err) {\n            reject(err);\n          });\n      } else {\n        resolve();\n      }\n    });\n    finder.on('error', function (err) {\n      logger.debug('Could not process retrieved metadata: '+err.message);\n      reject(err);\n    });\n  });\n};\n\n/**\n * Performs a Salesforce.com retrieve based on the type of project being requested,\n * create necessary /config, places on the disk in the correct workspace\n * @return {Promise}\n */\nProject.prototype.retrieveAndWriteToDisk = function() {\n  var self = this;\n\n  return new Promise(function(resolve, reject) {\n    var fileProperties;\n    if (fs.existsSync(self.path)) {\n      reject(new Error('Project with this name already exists in the specified workspace.'));\n    } else {\n      if (!self.package) {\n        // if user has not specified package, add standard developer objects to package\n        self.package = [\n          'ApexClass', 'ApexComponent', 'ApexPage', 'ApexTrigger', 'StaticResource'\n        ];\n      }\n      self.sfdcClient.describe()\n        .then(function(describe) {\n          return self.setDescribe(describe);\n        })\n        .then(function() {\n          self.path = path.join(self.workspace, self.name);\n          fs.mkdirSync(self.path);\n          fs.mkdirSync(path.join(self.path, 'config'));\n          return self.sfdcClient.retrieveUnpackaged(self.package, true, self.path);\n        })\n        .then(function(retrieveResult) {\n          fileProperties = retrieveResult.fileProperties;\n          if (fs.existsSync(path.join(self.path, 'unpackaged'))) {\n            fs.renameSync(path.join(self.path, 'unpackaged'), path.join(self.path, 'src'));\n          }\n          // TODO: ensure packages write properly\n          return self._initConfig();\n        })\n        .then(function() {\n          logger.debug('initiating local store');\n          logger.silly(fileProperties);\n\n          return self._writeLocalStore(fileProperties);\n        })\n        .then(function() {\n          resolve();\n        })\n        .catch(function(error) {\n          // remove directory from workspace if we encounter an exception along the way\n          logger.error('Could not retrieve and write project to file system: '+error.message);\n          logger.error(error.stack);\n          if (fs.existsSync(self.path)) {\n            fs.removeSync(self.path);\n          }\n          reject(error);\n        })\n        .done();\n    }\n  });\n};\n\n/**\n * Writes config/ files\n * @return {Promise}\n */\nProject.prototype._initConfig = function() {\n  var self = this;\n  return new Promise(function(resolve, reject) {\n    var settings = {\n      projectName: self.name,\n      username: self.sfdcClient.getUsername(),\n      id: self.id,\n      namespace: self.sfdcClient.getNamespace() || '',\n      orgType: self.sfdcClient.getOrgType(),\n      loginUrl: self.sfdcClient.getLoginUrl(),\n      instanceUrl: self.sfdcClient.getInstanceUrl(),\n      workspace: self.workspace,\n      subscription: self.subscription || config.get('mm_default_subscription')\n    };\n    self.writeSettings(settings);\n    self._writeCredentials();\n\n    var promises = [\n      self._writeDebug(),\n      self._writeEditorSettings(),\n      self._refreshDescribeFromServer(),\n      self.indexLightning()\n    ];\n\n    Promise.all(promises)\n      .then(function() {\n        resolve();\n      })\n      .catch(function(err) {\n        logger.error('Could not initiate project config directory -->'+err.message);\n        reject(err);\n      })\n      .done();\n  });\n};\n\n/**\n * Reverts a project to server state based on package.xml\n * TODO: handle packages!\n * @return {Promise}\n */\nProject.prototype.refreshFromServer = function() {\n  // TODO: implement stash!\n  var self = this;\n  return new Promise(function(resolve, reject) {\n    logger.debug('refreshing project from server...');\n    var retrieveResult;\n    var retrievePath = temp.mkdirSync({ prefix: 'mm_' });\n    self.packageXml = new Package({ project: self, path: path.join(self.path, 'src', 'package.xml') });\n    self.packageXml.init()\n      .then(function() {\n        return self.sfdcClient.retrieveUnpackaged(self.packageXml.subscription, true, retrievePath);\n      })\n      .then(function(res) {\n        retrieveResult = res;\n        util.emptyDirectoryRecursiveSync(path.join(self.path, 'src'));\n        return self.replaceLocalFiles(path.join(retrievePath, 'unpackaged'), true);\n      })\n      .then(function() {\n        return self._writeLocalStore(retrieveResult.fileProperties);\n      })\n      .then(function() {\n        return self.indexLightning();\n      })\n      .then(function() {\n        util.removeEmptyDirectoriesRecursiveSync(path.join(self.path, 'src'));\n        resolve();\n      })\n      .catch(function(err) {\n        logger.error('Error refreshing project from server -->'+err.message);\n        reject(err);\n      })\n      .done();\n  });\n};\n\n/**\n * Reverts a project to server state based on package.xml, also updates local metadata index and describe index\n * TODO: handle packages!\n * @return {Promise}\n */\nProject.prototype.clean = function() {\n  // TODO: implement stash!\n  var self = this;\n  return new Promise(function(resolve, reject) {\n    self.refreshFromServer()\n      .then(function() {\n        return self._refreshDescribeFromServer();\n      })\n      .then(function() {\n        return self.indexMetadata();\n      })\n      .then(function() {\n        resolve();\n      })\n      .catch(function(err) {\n        logger.error('Error cleaning project -->'+err.message);\n        reject(err);\n      })\n      .done();\n  });\n};\n\n/**\n * Compiles projects based on package.xml\n * @return {Promise}\n */\nProject.prototype.compile = function() {\n  var self = this;\n  return new Promise(function(resolve, reject) {\n    // writes temp directory, puts zip file inside\n    var newPath = temp.mkdirSync({ prefix: 'mm_' });\n    fs.copy(path.join(self.path, 'src'), path.join(newPath, 'unpackaged'), function(err) {\n      if (err) {\n        return reject(err);\n      } else {\n        var deployResult;\n        util.zipDirectory(path.join(newPath, 'unpackaged'), newPath)\n          .then(function() {\n            var zipStream = fs.createReadStream(path.join(newPath, 'unpackaged.zip'));\n            return self.sfdcClient.deploy(zipStream, { rollbackOnError : true, performRetrieve: true });\n          })\n          .then(function(result) {\n            logger.debug('Compile result: ');\n            logger.debug(result);\n            deployResult = result;\n            if (deployResult.details.retrieveResult) {\n              return self.updateLocalStore(deployResult.details.retrieveResult.fileProperties);\n            } else {\n              return new Promise(function(resolve) {\n                resolve();\n              });\n            }\n          })\n          .then(function() {\n            resolve(deployResult);\n          })\n          .catch(function(error) {\n            reject(error);\n          })\n          .done();\n      }\n    });\n  });\n};\n\n/**\n * Edits project based on provided payload (should be a JSON package)\n * @param  {Object} payload\n * @return {Promise}\n */\nProject.prototype.edit = function(pkg) {\n  // TODO: implement stash!\n  var self = this;\n  return new Promise(function(resolve, reject) {\n    var newPackage;\n    logger.debug('editing project, requested package is: ', pkg);\n    var retrievePath = temp.mkdirSync({ prefix: 'mm_' });\n    self.sfdcClient.retrieveUnpackaged(pkg, true, retrievePath)\n      .then(function(retrieveResult) {\n        return self._writeLocalStore(retrieveResult.fileProperties);\n      })\n      .then(function() {\n        util.emptyDirectoryRecursiveSync(path.join(self.path, 'src'));\n        return self.replaceLocalFiles(path.join(retrievePath, 'unpackaged'), true);\n      })\n      .then(function() {\n        newPackage = new Package({ project: self, path: path.join(self.path, 'src', 'package.xml') });\n        return newPackage.init();\n      })\n      .then(function() {\n        self.packageXml = newPackage;\n        util.removeEmptyDirectoriesRecursiveSync(path.join(self.path, 'src'));\n        resolve();\n      })\n      .catch(function(error) {\n        reject(error);\n      })\n      .done();\n  });\n};\n\n/**\n * Retrieves config/.settings from the disk\n * @return {[type]} [description]\n */\nProject.prototype._readSettings = function() {\n  try {\n    return fs.readJsonSync(path.join(this.path, 'config', '.settings'));\n  } catch(err) {\n    logger.error('Error reading settings -->', err);\n    throw new Error('Could not read settings: '+err.message);\n  }\n};\n\n/**\n * Writes settings to disk, updates local settings store\n */\nProject.prototype.writeSettings = function(settings) {\n  try {\n    for (var key in settings) {\n      this.settings[key] = settings[key];\n    }\n    fs.writeFileSync(path.join(this.path, 'config', '.settings'), JSON.stringify(this.settings, null, 4));\n  } catch(err) {\n    logger.error('Could not write settings', err);\n    throw new Error('Could not write settings', err);\n  }\n};\n\n// retrieves local_store from config/.local_store\nProject.prototype.getLocalStore = function() {\n  var localStore;\n  try {\n    localStore = fs.readJsonSync(path.join(this.path, 'config', '.local_store'));\n  } catch(e) {\n    if (e.message.indexOf('Unexpected end of input') >= 0) {\n      localStore = {};\n    } else {\n      throw e;\n    }\n  }\n  return localStore;\n};\n\nProject.prototype.getDebugSettingsSync = function() {\n  var debugSettings;\n  try {\n    debugSettings = fs.readJsonSync(path.join(this.path, 'config', '.debug'));\n  } catch(e) {\n    if (e.message.indexOf('Unexpected end of input') >= 0) {\n      debugSettings = {};\n    } else {\n      throw e;\n    }\n  }\n  return debugSettings;\n};\n\nProject.prototype.setLightningIndex = function(index) {\n  var self = this;\n  return new Promise(function(resolve, reject) {\n    try {\n      fs.outputFileSync(path.join(self.path, 'config', '.lightning'), JSON.stringify(index, null, 4));\n      self.lightningIndex = index;\n      resolve();\n    } catch(err) {\n      logger.error('Could not write lightning index file -->'+err.message);\n      reject(err);\n    }\n  });\n};\n\nProject.prototype.getLightningIndexSync = function() {\n  var lightningIndex;\n  try {\n    lightningIndex = fs.readJsonSync(path.join(this.path, 'config', '.lightning'));\n  } catch(e) {\n    if (e.message.indexOf('Unexpected end of input') >= 0) {\n      lightningIndex = [];\n    } else {\n      throw e;\n    }\n  }\n  return lightningIndex;\n};\n\nProject.prototype.getLightningIndex = function() {\n  var self = this;\n  return new Promise(function(resolve, reject) {\n    try {\n      var lightningIndex = fs.readJsonSync(path.join(self.path, 'config', '.lightning'));\n      return resolve(lightningIndex);\n    } catch(err) {\n      logger.debug('could not get index the first time');\n      logger.debug(err);\n      // if err is empty/missing file, index it\n      self.indexLightning()\n        .then(function() {\n          logger.debug('done indexing lightning, now go get it');\n          var lightningIndex = fs.readJsonSync(path.join(self.path, 'config', '.lightning'));\n          return resolve(lightningIndex);\n        })\n        .catch(function(err) {\n          logger.error('Could not get lightning index -->'+err.message);\n          reject(err);\n        });\n    }\n  });\n};\n\n// retrieves describe from config/.describe\nProject.prototype.getDescribe = function() {\n  return this._describe;\n};\n\nProject.prototype.setDescribe = function(describe) {\n  var self = this;\n  return new Promise(function(resolve, reject) {\n    var describePath = path.join(self.path, 'config', '.describe');\n    if (fs.existsSync(path.join(self.path, 'config'))) {\n      fs.outputFile(describePath, JSON.stringify(describe, null, 4), function(err) {\n        if (err) {\n          return reject(err);\n        } else {\n          self._describe = describe;\n          resolve();\n        }\n      });\n    } else {\n      self._describe = describe;\n      resolve();\n    }\n  });\n};\n\nProject.prototype._refreshDescribeFromServer = function() {\n  var self = this;\n  return new Promise(function(resolve, reject) {\n    self.sfdcClient.describe()\n      .then(function(res) {\n        return self.setDescribe(res);\n      })\n      .then(function() {\n        resolve();\n      })\n      .catch(function(error) {\n        reject(error);\n      })\n      .done();\n  });\n};\n\nProject.prototype.indexLightning = function() {\n  var self = this;\n  logger.debug('indexing lightning to config/.lightning');\n  return new Promise(function(resolve, reject) {\n    self.lightningService.getAll()\n      .then(function(res) {\n        return self.setLightningIndex(res);\n      })\n      .then(function() {\n        return resolve();\n      })\n      .catch(function(err) {\n        if (err.message.indexOf('sObject type \\'AuraDefinition\\' is not supported') >= 0 || err.message.indexOf('requested resource does not exist') >= 0) {\n          resolve();\n        } else {\n          logger.error('Could not index lightning -->'+err.message);\n          reject(err);\n        }\n      })\n      .done();\n  });\n};\n\n/**\n * Indexes Apex symbols\n * @return {Promise}\n */\nProject.prototype.indexSymbols = function(apexClassName) {\n  var self = this;\n  return new Promise(function(resolve, reject) {\n    if (!fs.existsSync(path.join(self.path, 'config', '.symbols'))) {\n      fs.mkdirpSync(path.join(self.path, 'config', '.symbols'));\n    }\n\n    // todo: stash existing\n    var symbolPromise = apexClassName ? self.symbolService.indexApexClass(apexClassName) : self.symbolService.index();\n    symbolPromise\n      .then(function() {\n        logger.debug('done indexing symbols!');\n        resolve();\n      })\n      .catch(function(err) {\n        logger.error('Could not index apex symbols: '+err.message);\n        reject(err);\n      })\n      .done();\n  });\n};\n\n/**\n * Populates project's config/.org_metadata with server metadata based on the projects subscription\n * @return {Promise}\n */\nProject.prototype.indexMetadata = function() {\n  var self = this;\n  return new Promise(function(resolve, reject) {\n    // todo: stash existing\n    if (!self.indexService) {\n      self.indexService = new IndexService({ project: self });\n    }\n    self.indexService.indexServerProperties(self.settings.subscription)\n      .then(function(res) {\n        fs.outputFile(path.join(self.path, 'config', '.org_metadata'), JSON.stringify(res, null, 4), function(err) {\n          if (err) {\n            reject(err);\n          } else {\n            resolve();\n          }\n        });\n      })\n      .catch(function(err) {\n        logger.error('Could not index metadataHelper: '+err.message);\n        reject(err);\n      })\n      .done();\n  });\n};\n\nProject.prototype.getOrgMetadataIndex = function() {\n  var self = this;\n  return new Promise(function(resolve, reject) {\n    fs.readJson(path.join(self.path, 'config', '.org_metadata'), function(err, orgMetadata) {\n      if (err) {\n        logger.debug('Could not return org metadata: '+err.message);\n        resolve([]);\n      } else {\n        resolve(orgMetadata);\n      }\n    });\n  });\n};\n\nProject.prototype.getOrgMetadataIndexWithSelections = function(keyword, ids, packageXmlPath) {\n  var self = this;\n  return new Promise(function(resolve, reject) {\n    logger.debug('getOrgMetadataIndexWithSelections, package location: ', packageXmlPath);\n    if (fs.existsSync(path.join(self.path, 'config', '.org_metadata'))) {\n      try {\n        fs.readJson(path.join(self.path, 'config', '.org_metadata'), function(err, orgMetadata) {\n          if (err) {\n            reject(err);\n          } else {\n            self.orgMetadata = orgMetadata;\n            var promise;\n            var customPackage;\n            if (packageXmlPath) {\n              customPackage = new Package({ path: packageXmlPath });\n              promise = customPackage.init();\n            } else {\n              promise = Promise.resolve();\n            }\n\n            promise\n              .then(function() {\n                if (!ids) {\n                  ids = [];\n                  var pkg = packageXmlPath ? customPackage : self.packageXml;\n                  _.forOwn(pkg.subscription, function(packageMembers, metadataTypeXmlName) {\n                    var metadataType = self.metadataHelper.getTypeByXmlName(metadataTypeXmlName); //inFolder, childXmlNames\n                    if (!metadataType) {\n                      return reject(new Error('Unrecognized package.xml metadata type: '+metadataTypeXmlName));\n                    }\n                    if (_.has(metadataType, 'parentXmlName')) {\n                      var parentMetadataType = self.metadataHelper.getTypeByXmlName(metadataType.parentXmlName);\n                    }\n                    if (packageMembers === '*') {\n                      ids.push(metadataTypeXmlName);\n                      var indexedType = _.find(orgMetadata, { 'xmlName': metadataTypeXmlName });\n                      if (_.has(indexedType, 'children')) {\n                        _.each(indexedType.children, function(child) {\n                          child.select = true;\n                        });\n                      }\n                    } else {\n                      _.each(packageMembers, function(member) {\n                        if (metadataType.inFolder) {\n                          // id : Document.FolderName.FileName.txt\n                          ids.push([metadataTypeXmlName, member.replace(/\\//, '.')].join('.'));\n                        } else if (parentMetadataType) {\n                          // id : CustomObject.Object_Name__c.fields.Field_Name__c\n                          var id = [ parentMetadataType.xmlName, member.split('.')[0], metadataType.tagName, member.split('.')[1] ].join('.');\n                          ids.push(id);\n                        } else if (_.has(metadataType, 'childXmlNames')) {\n                          var indexedType = _.find(orgMetadata, { 'xmlName': metadataTypeXmlName });\n                          if (indexedType) {\n                            var indexedNode = _.find(indexedType.children, { 'id': [metadataTypeXmlName, member].join('.')});\n                            if (_.has(indexedNode, 'children')) {\n                              _.each(indexedNode.children, function(child) {\n                                child.select = true;\n                                if (_.has(child, 'children')) {\n                                  _.each(child.children, function(grandChild) {\n                                    grandChild.select = true;\n                                  });\n                                }\n                              });\n                            }\n                            ids.push([metadataTypeXmlName, member].join('.'));\n                          }\n                        } else {\n                          // id: ApexClass.MyClassName\n                          ids.push([metadataTypeXmlName, member].join('.'));\n                        }\n                      });\n                    }\n                  });\n                }\n                if (!self.indexService) {\n                  self.indexService = new IndexService({ project: self });\n                }\n                self.indexService.setChecked(orgMetadata, ids);\n                self.indexService.ensureParentsAreCheckedIfNecessary(orgMetadata);\n                if (keyword) {\n                  self.indexService.setVisibility(orgMetadata, keyword);\n                }\n                resolve(orgMetadata);\n              });\n          }\n        });\n      } catch(err) {\n        logger.debug('Could not getOrgMetadataIndexWithSelections: '+err.message);\n        resolve([]);\n      }\n    } else {\n      logger.debug('org_metadata not found, returning empty array');\n      resolve([]);\n    }\n  });\n};\n\nProject.prototype.hasIndexedMetadata = function() {\n  return _.isArray(this.orgMetadata) && this.orgMetadata.length > 0;\n};\n\nProject.prototype.updateLocalStore = function(fileProperties) {\n  var self = this;\n  return new Promise(function(resolve, reject) {\n    Promise.resolve(fileProperties).then(function (properties) {\n      if (!_.isArray(properties)) {\n        properties = [properties];\n      }\n      try {\n        var store = self.getLocalStore();\n        _.each(properties, function(fp) {\n          if (fp.attributes) {\n            fp = normalize(fp);\n          }\n          var metadataType;\n          if (fp.type) {\n            metadataType = self.metadataHelper.getTypeByXmlName(fp.type);\n          } else if (fp.attributes && fp.attributes.type) {\n            metadataType = self.metadataHelper.getTypeByXmlName(fp.attributes.type);\n            fp.fullName = fp.name;\n            fp.fileName = ['unpackaged', metadataType.directoryName, fp.name +'.'+metadataType.suffix].join('/');\n            fp.createdByName = fp.createdBy.name;\n            fp.lastModifiedByName = fp.lastModifiedBy.name;\n            fp.manageableState = !fp.namespacePrefix ? 'unmanaged' : 'managed';\n            fp.namespacePrefix = fp.namespacePrefix;\n            fp.type = metadataType.xmlName;\n            delete fp.createdBy;\n            delete fp.lastModifiedBy;\n            delete fp.attributes;\n          } else {\n            metadataType = self.metadataHelper.getTypeByPath(fp.fileName.split('.')[1]);\n          }\n          logger.debug(metadataType);\n          if (metadataType && fp.attributes) {\n            var key = fp.name+'.'+metadataType.suffix;\n            var value = fp;\n            value.mmState = 'clean';\n            store[key] = value;\n          } else if (metadataType && fp.fullName.indexOf('package.xml') === -1) {\n            var key = fp.fullName+'.'+metadataType.suffix;\n            var value = fp;\n            value.mmState = 'clean';\n            store[key] = value;\n          } else {\n            if (fp.fullName.indexOf('package.xml') === -1) {\n              logger.debug('Could not determine metadata type for: '+JSON.stringify(fp));\n            }\n          }\n        });\n\n        var filePath = path.join(self.path, 'config', '.local_store');\n        fs.outputFile(filePath, JSON.stringify(store, null, 4), function(err) {\n          if (err) {\n            logger.error('Could not write local store: '+err.message);\n            reject(err);\n          } else {\n            resolve();\n          }\n        });\n      } catch(err) {\n        logger.error('Could not update local store -->'+err.message);\n        reject(err);\n      }\n    });\n  });\n};\n\nProject.prototype._writeLocalStore = function(fileProperties) {\n  var self = this;\n  return new Promise(function(resolve, reject) {\n    logger.debug('writing to local store');\n    Promise.resolve(fileProperties)\n      .then(function (properties) {\n        try {\n          if (!_.isArray(properties)) {\n            properties = [properties];\n          }\n          logger.debug('writing local store...');\n          logger.silly(properties);\n          var store = {};\n          _.each(properties, function(fp) {\n            if (!self.metadataHelper) {\n              self.metadataHelper = new MetadataHelper({ sfdcClient: self.sfdcClient });\n            }\n            var metadataType = self.metadataHelper.getTypeByPath(fp.fileName);\n            logger.silly(metadataType);\n            if (metadataType !== undefined && fp.fullName.indexOf('package.xml') === -1) {\n              var key = fp.fullName+'.'+metadataType.suffix;\n              var value = fp;\n              value.mmState = 'clean';\n              store[key] = value;\n            } else {\n              if (fp.fullName.indexOf('package.xml') === -1) {\n                logger.warn('Could not determine metadata type for: '+JSON.stringify(fp));\n              }\n            }\n          });\n          var filePath = path.join(self.path, 'config', '.local_store');\n          fs.outputFile(filePath, JSON.stringify(store, null, 4), function(err) {\n            if (err) {\n              reject(new Error('Could not write local store: '+err.message));\n            } else {\n              resolve();\n            }\n          });\n        } catch(err) {\n          logger.error('Could not initiate local store', err);\n          reject(err);\n        }\n      })\n      .catch(function(err) {\n        logger.error('fileproperties promise rejected', err);\n        reject(err);\n      });\n  });\n};\n\n/**\n * Updates project debug settings\n * @param {String} key - setting key you'd like to override\n * @param  {Object} value - value to override\n * @return {Promise}                 [description]\n */\nProject.prototype._updateDebug = function(key, value) {\n  var self = this;\n  return new Promise(function(resolve, reject) {\n    logger.debug('updating debug setting ['+key+']');\n    logger.debug(value);\n\n    var debug;\n    try {\n      debug = fs.readJsonSync(path.join(self.path, 'config', '.debug'));\n    } catch(err) {\n      reject(new Error('Could not read project .debug file: '+err.message));\n    }\n\n    debug[key] = value;\n\n    logger.debug('Updating project debug: ');\n    logger.debug(debug);\n\n    try {\n      fs.writeFileSync(path.join(self.path, 'config', '.debug'), JSON.stringify(debug, null, 4));\n      resolve();\n    } catch(err) {\n      logger.error('Could not write project .debug file -->'+err.message);\n      reject(err);\n    }\n  });\n};\n\n/**\n * Writes config/.debug to the project on creation\n * @return {Promise}\n */\nProject.prototype._writeDebug = function() {\n  var self = this;\n  return new Promise(function(resolve, reject) {\n    var debug = {\n      users: [self.sfdcClient.conn.userInfo.user_id],\n      logType: 'USER_DEBUG',\n      debugLevelName: 'MAVENSMATE',\n      levels: {\n        Workflow: 'INFO',\n        Callout: 'INFO',\n        System: 'DEBUG',\n        Database: 'INFO',\n        ApexCode: 'DEBUG',\n        ApexProfiling: 'INFO',\n        Validation: 'INFO',\n        Visualforce: 'DEBUG'\n      },\n      expiration: 480\n    };\n\n    var filePath = path.join(self.path, 'config', '.debug');\n    fs.outputFile(filePath, JSON.stringify(debug, null, 4), function(err) {\n      if (err) {\n        reject(err);\n      } else {\n        resolve();\n      }\n    });\n  });\n};\n\n/**\n * Writes editor-specific config to the project root\n * @return {Promise}\n */\nProject.prototype._writeEditorSettings = function() {\n  var self = this;\n  return new Promise(function(resolve, reject) {\n    // TODO: right now these are written to every project root, regardless of editor\n\n    /*jshint camelcase: false */\n    var sublimeSettings = {\n      folders : [\n        {\n          \"folder_exclude_patterns\": [\n              \"config/.symbols\"\n          ],\n          path : '.'\n        }\n      ],\n      settings : {\n        auto_complete_triggers : [\n          {\n              characters: '.',\n              selector: 'source - comment'\n          },\n          {\n              characters: ':',\n              selector: 'text.html - comment'\n          },\n          {\n              characters: '<',\n              selector: 'text.html - comment'\n          },\n          {\n              characters: ' ',\n              selector: 'text.html - comment'\n          }\n        ]\n      }\n    };\n    /*jshint camelcase: true */\n    var filePath = path.join( self.path, [ self.name, 'sublime-project' ].join('.') );\n    fs.outputFile(filePath, JSON.stringify(sublimeSettings, null, 4), function(err) {\n      if (err) {\n        reject(err);\n      } else {\n        resolve();\n      }\n    });\n\n  });\n};\n\n/**\n * Attaches listener to sfdcClient that updates the local token store on refresh\n * @return {Nothing}\n */\nProject.prototype._listenForTokenUpdates = function() {\n  var self = this;\n  if (self.sfdcClient.listeners('token-refresh').length === 0) {\n    self.sfdcClient.on('token-refresh', function() {\n      logger.debug('handling sfdcClient:token-refresh');\n      try {\n        self._writeCredentials(true);\n      } catch(err) {\n        logger.error('Could not store updated credentials', err);\n        throw err;\n      }\n    });\n  }\n};\n\n/**\n * Updates local credentials (in .settings and .credentials)\n * @param  {Object} creds\n * @return {Promise}\n */\nProject.prototype.updateCredentials = function(creds) {\n  var self = this;\n  logger.debug('updating project creds', creds);\n  return new Promise(function(resolve, reject) {\n    var username = creds.username || self.settings.username;\n    var password = creds.password;\n    var accessToken = creds.accessToken;\n    var refreshToken = creds.refreshToken;\n    var orgType = creds.orgType || self.settings.environment || self.settings.orgType;\n    var loginUrl = creds.loginUrl || self.settings.loginUrl;\n    var instanceUrl = creds.instanceUrl;\n    if (username && password) {\n      self.sfdcClient = new SalesforceClient({\n        username: username,\n        password: password,\n        orgType: orgType,\n        loginUrl: loginUrl,\n        instanceUrl: instanceUrl\n      });\n    } else {\n      self.sfdcClient = new SalesforceClient({\n        username: username,\n        accessToken: accessToken,\n        refreshToken: refreshToken,\n        orgType: orgType,\n        loginUrl: loginUrl,\n        instanceUrl: instanceUrl\n      });\n    }\n    self.sfdcClient.initialize()\n      .then(function() {\n        self._writeCredentials(true);\n        self.writeSettings({\n          username: username,\n          orgType: orgType,\n          loginUrl: loginUrl,\n          instanceUrl: instanceUrl\n        });\n        return self._updateDebug('users', [self.sfdcClient.getUserId()])\n      })\n      .then(function() {\n        if (self.requiresAuthentication) {\n          logger.debug('project required authentication, running init again');\n          return self._initExisting();\n        } else {\n          return new Promise(function(res) { res(); });\n        }\n      })\n      .then(function() {\n        self._listenForTokenUpdates();\n        resolve();\n      })\n      .catch(function(err) {\n        logger.error('Could not update credentials -->'+err.message);\n        reject(err);\n      })\n      .done();\n  });\n};\n\n/**\n * Writes accessToken/refreshToken to either the disk or the project's config/.credentials file\n * @param  {[type]} pw      [description]\n * @param  {[type]} replace [description]\n * @return {[type]}         [description]\n */\nProject.prototype._writeCredentials = function(replace) {\n  var self = this;\n  try {\n    logger.debug('_writeCredentials');\n    if (self.keychainService.useSystemKeychain()) {\n      logger.debug('storing credentials in system keychain');\n      var keychainAction = replace ? 'replacePassword' : 'storePassword';\n      if (self.sfdcClient.password) {\n        self.keychainService[keychainAction](self.id || self.settings.id, self.sfdcClient.password, 'password');\n      } else {\n        self.keychainService[keychainAction](self.id || self.settings.id, self.sfdcClient.accessToken, 'accessToken');\n        self.keychainService[keychainAction](self.id || self.settings.id, self.sfdcClient.refreshToken, 'refreshToken');\n      }\n      logger.debug('removing local .credentials store if it exists');\n      if (fs.existsSync(path.join(self.path, 'config', '.credentials'))) {\n        fs.removeSync(path.join(self.path, 'config', '.credentials'));\n      }\n    } else {\n      logger.debug('storing credentials in config/.credentials');\n      if (self.sfdcClient.password) {\n        fs.writeFileSync(path.join(self.path, 'config', '.credentials'), JSON.stringify({\n          password: self.sfdcClient.password\n        }, null, 4));\n      } else {\n        fs.writeFileSync(path.join(self.path, 'config', '.credentials'), JSON.stringify({\n          accessToken: self.sfdcClient.accessToken,\n          refreshToken: self.sfdcClient.refreshToken\n        }, null, 4));\n      }\n    }\n  } catch(err) {\n    logger.error('Error writing credentials -->', err);\n    throw new Error('Could not write credentials: '+err.message);\n  }\n};\n\n/**\n * Retrieves access/refresh credentials from config/.credentials or the keychain\n * @return {Promise}\n */\nProject.prototype._readCredentials = function() {\n  try {\n    if (fs.existsSync(path.join(this.path, 'config', '.credentials'))) {\n      return fs.readJsonSync(path.join(this.path, 'config', '.credentials'));\n    } else {\n      return {\n        accessToken: this.keychainService.getPassword(this.settings.id, 'accessToken', true),\n        refreshToken: this.keychainService.getPassword(this.settings.id, 'refreshToken', true),\n        password: this.keychainService.getPassword(this.settings.id, 'password', true)\n      }\n    }\n  } catch(err) {\n    logger.error('Error reading credentials -->', err);\n    throw new Error('Could not read credentials for project '+this.name+': '+err.message);\n  }\n};\n\nmodule.exports = Project;\n\n\n\n/** WEBPACK FOOTER **\n ** ../mavensmate/app/lib/project.js\n **/","module.exports = require(\"fs\");\n\n\n/*****************\n ** WEBPACK FOOTER\n ** external \"fs\"\n ** module id = 31\n ** module chunks = 0\n **/","/**\n * @file Service responsible for managing checkpoints in an org\n * @author Joseph Ferraro <@joeferraro>\n */\n\n'use strict';\n\nvar Promise         = require('bluebird');\nvar mavensMateFile  = require('../file');\nvar logger          = require('winston');\nvar _               = require('lodash');\n\nvar CheckpointService = function(project) {\n  this.project = project;\n};\n\n/**\n * Create checkpoint at the provided line for the provided file path\n * @param {String} filePath\n * @param {Integer} lineNumber\n * @return {Promise}\n */\nCheckpointService.prototype.createCheckpoint = function(filePath, lineNumber) {\n  var self = this;\n  return new Promise(function(resolve, reject) {\n    logger.debug('creating checkpoint for filepath: '+filePath);\n    logger.debug(lineNumber);\n    var mmf = new mavensMateFile.MavensMateFile({ project: self.project, path: filePath });\n    self.project.sfdcClient.conn.tooling.sobject('ApexExecutionOverlayAction').create({\n      ActionScriptType : 'None',\n      ExecutableEntityId : mmf.id,\n      IsDumpingHeap : true,\n      Iteration : 1,\n      Line : lineNumber,\n      ScopeId : self.project.sfdcClient.getUserId()\n    }, function(err, res) {\n      if (err) {\n        reject(err);\n      } else {\n        resolve(res);\n      }\n    });\n  });\n};\n\n/**\n * Delete checkpoint at the provided line for the provided file path\n * @param {String} filePath\n * @param {Integer} lineNumber\n * @return {Promise}\n */\nCheckpointService.prototype.deleteCheckpointsForCurrentUser = function() {\n  var self = this;\n  return new Promise(function(resolve, reject) {\n    logger.debug('deleting checkpoints for current user');\n    self.project.sfdcClient.conn.tooling.query('Select Id From ApexExecutionOverlayAction Where ScopeId = \\''+self.project.sfdcClient.getUserId()+'\\'', function(err, res) {\n      if (err) {\n        return reject(err);\n      } else {\n        if (res.size > 0) {\n          var ids = [];\n          _.each(res.records, function(r) {\n            ids.push(r.Id);\n          });\n          self.project.sfdcClient.conn.tooling.sobject('ApexExecutionOverlayAction').destroy( ids )\n            .then(function(deleteResult) {\n              return resolve(deleteResult);\n            })\n            .catch(function(err) {\n              reject(err);\n            });\n        } else {\n          resolve();\n        }\n      }\n    });\n\n  });\n};\n\n/**\n * Delete checkpoint at the provided line for the provided file path\n * @param {String} filePath\n * @param {Integer} lineNumber\n * @return {Promise}\n */\nCheckpointService.prototype.deleteCheckpoint = function(filePath, lineNumber) {\n  var self = this;\n  return new Promise(function(resolve, reject) {\n    logger.debug('deleting checkpoint');\n    var mmf = new mavensMateFile.MavensMateFile({ project: self.project, path: filePath });\n    self.project.sfdcClient.conn.tooling.query('Select Id From ApexExecutionOverlayAction Where ExecutableEntityId = \\''+mmf.id+'\\' AND ScopeId = \\''+self.project.sfdcClient.getUserId()+'\\' AND Line = '+lineNumber+'', function(err, res) {\n      logger.debug(err);\n      logger.debug(res);\n      if (err) {\n        return reject(err);\n      } else {\n        if (res.size > 0) {\n          self.project.sfdcClient.conn.tooling.sobject('ApexExecutionOverlayAction').destroy( res.records[0].Id )\n            .then(function(deleteResult) {\n              return resolve(deleteResult);\n            })\n            .catch(function(err) {\n              reject(err);\n            });\n        } else {\n          resolve();\n        }\n      }\n    });\n\n  });\n};\n\n/**\n * List checkpoints for the provided filepath\n * @return {Promise}\n */\nCheckpointService.prototype.listCheckpoints = function(filePath) {\n  var self = this;\n  return new Promise(function(resolve, reject) {\n    logger.debug('listing checkpoints for filePath: '+filePath);\n    var mmf = new mavensMateFile.MavensMateFile({ project: self.project, path: filePath });\n    self.project.sfdcClient.conn.tooling.query('Select Id From ApexExecutionOverlayAction Where ExecutableEntityId = \\''+mmf.id+'\\' AND ScopeId = \\''+self.project.sfdcClient.getUserId()+'\\'', function(err, res) {\n      if (err) {\n        reject(err);\n      } else {\n        resolve(res);\n      }\n    });\n  });\n};\n\n\nmodule.exports = CheckpointService;\n\n\n/** WEBPACK FOOTER **\n ** ../mavensmate/app/lib/services/checkpoint.js\n **/","/**\n * @file Responsible for locally indexing Salesforce metadata (Custom Objects, Apex Classes, Lightning files, etc.)\n * @author Joseph Ferraro <@joeferraro>\n */\n\n'use strict';\nvar _               = require('lodash');\nvar Promise         = require('bluebird');\nvar temp            = require('temp');\nvar config          = require('../../config');\nvar path            = require('path');\nvar util            = require('../util');\nvar find            = require('findit');\nvar logger          = require('winston');\nvar parseXml        = require('xml2js').parseString;\nvar MetadataHelper  = require('../metadata').MetadataHelper;\nvar pkg             = require('../package');\nvar MavensMateFile  = require('../file').MavensMateFile;\n\n/**\n * Service to get an index of an org's metadata\n * @param {Object} project - project instance (optional)\n * @param {Object} sfdcClient - client instance (optional)\n */\nfunction IndexService(opts) {\n  util.applyProperties(this, opts);\n  if (this.project) {\n    this.metadataHelper = new MetadataHelper({ sfdcClient : this.project.sfdcClient });\n    this.sfdcClient = this.project.sfdcClient;\n  } else if (this.sfdcClient) {\n    this.metadataHelper = new MetadataHelper({ sfdcClient : this.sfdcClient });\n  }\n}\n\n/**\n * Indexes children Metadata by preparing and submitting retrieve requests\n * @param  {Object} indexedType\n * @param  {Object} typeMap\n * @param  {String} xmlName\n * @param  {Array} childNames\n * @return {Promise}\n */\nIndexService.prototype._indexChildren = function(indexedType, typeMap, xmlName, childNames) {\n  var self = this;\n  return new Promise(function(resolve, reject) {\n    try {\n      logger.debug('_indexChildren -->'+xmlName);\n      logger.debug(childNames);\n\n      var childRetrievePackage = {};\n\n      if (childNames && childNames.length > 0) {\n        childRetrievePackage[xmlName] = childNames;\n      }\n\n      logger.debug('child retrieve package is: ');\n      logger.debug(childRetrievePackage);\n\n      var retrievePath = temp.mkdirSync({ prefix: 'mm_' });\n      self.sfdcClient.retrieveUnpackaged(childRetrievePackage, true, retrievePath)\n        .then(function(retrieveResult) {\n          var finder = find(path.join(retrievePath, 'unpackaged', typeMap[xmlName].directoryName));\n          finder.on('file', function (file) {\n\n            var fileBasename = path.basename(file);\n            var fileBasenameNoExtension = fileBasename.split('.')[0];\n            var fileBody = util.getFileBody(file);\n\n            logger.silly(fileBasename);\n            logger.silly(fileBasenameNoExtension);\n            logger.silly(fileBody);\n\n            var indexedChildType = _.find(indexedType.children, { 'id': [xmlName,fileBasenameNoExtension].join('.') });\n\n            logger.silly('indexedChildType -->');\n            logger.silly(indexedChildType);\n            logger.silly('\\n\\n');\n\n            parseXml(fileBody, function (err, xmlObject) {\n\n              _.forOwn(xmlObject[xmlName], function(value, tagName) {\n\n                // we're tracking this child type, now we need to add as a level 3 child\n                var matchingChildType = _.find(self.metadataHelper.childTypes, { 'tagName': tagName });\n                if (matchingChildType) {\n\n                  var leaves = [];\n\n                  //now add level leaves (lowest level is 4 at the moment)\n                  if (!_.isArray(value)) {\n                    value = [value];\n                  }\n                  _.each(value, function(item) {\n                    var key;\n                    if (item.fullName) {\n                      key = item.fullName[0];\n                    } else if (item.actionName) {\n                      key = item.actionName[0];\n                    } else {\n                      logger.error('Unrecognized child metadata type ', matchingChildType, item);\n                    }\n                    if (key) {\n                      leaves.push({\n                        leaf: true,\n                        checked: false,\n                        level: 4,\n                        text: key,\n                        title: key,\n                        isFolder: false,\n                        id: [xmlName, fileBasenameNoExtension, tagName, key].join('.'),\n                        select: false\n                      });\n                    }\n                  });\n\n                  if ( !_.find(indexedChildType, { 'text' : tagName }) ) {\n                    indexedChildType.children.push({\n                      checked: false,\n                      level: 3,\n                      id: [xmlName, fileBasenameNoExtension, tagName].join('.'),\n                      text: tagName,\n                      title: tagName,\n                      isFolder: true,\n                      children: leaves,\n                      select: false,\n                      cls: 'folder'\n                    });\n                  }\n                }\n              });\n            });\n          });\n          finder.on('end', function () {\n            // todo: delete tmp directory?\n            resolve(indexedType);\n          });\n          finder.on('error', function (err) {\n            logger.error('Could not crawl retrieved metadata: '+err.message);\n            reject(err);\n          });\n        })\n        .catch(function(err) {\n          logger.error('Could not index metadata type '+xmlName+': ' +err.message);\n          logger.error(err.stack);\n          reject(err);\n        })\n        .done();\n    } catch(err) {\n      logger.error('Could not index metadata type '+xmlName+': ' +err.message);\n      reject(err);\n    }\n  });\n};\n\n/**\n * Indexes folder-based Metadata by preparing and submitting folder-based retrieve requests\n * @param  {Object} indexedType\n * @param  {Object} typeMap\n * @param  {String} xmlName\n * @return {Promise}\n */\nIndexService.prototype._indexFolders = function(indexedType, typeMap, xmlName) {\n  var self = this;\n  return new Promise(function(resolve, reject) {\n    var listFolderRequests = [];\n    _.each(indexedType.children, function(folder) {\n      listFolderRequests.push(self.sfdcClient.listFolder(xmlName, folder.fullName));\n    });\n\n    Promise.all(listFolderRequests)\n      .then(function(results) {\n\n        // console.log(results);\n        // console.log('---')\n\n        _.each(results, function(r) {\n\n          var folderName = Object.keys(r)[0];\n          var folderContents = r[folderName];\n\n          var indexedFolder = _.find(indexedType.children, { 'text' : folderName });\n\n          _.each(folderContents, function(item) {\n            indexedFolder.children.push({\n              leaf: true,\n              title: item.fullName.split('/')[1],\n              checked: false,\n              text: item.fullName.split('/')[1],\n              level: 3,\n              isFolder: false,\n              id: [xmlName, item.fullName.split('/')[0], item.fullName.split('/')[1]].join('.'),\n              select: false\n            });\n          });\n\n        });\n\n        resolve(indexedType);\n      })\n      .catch(function(error) {\n        logger.error('Could not finish indexing server properties: '+error.message);\n        reject(error);\n      })\n      .done();\n  });\n};\n\n/**\n * TODO: handle managed/unmanaged metadata\n *\n * Builds a 4-level hierarchy index for the specified type\n * @param  {Object} typeListResult\n * @param  {Object} typeMap\n * @return {Promise}\n */\nIndexService.prototype._indexType = function(typeListResult, typeMap) {\n  var self = this;\n  return new Promise(function(resolve, reject) {\n    // typeListResult will be an object with an xmlName key, array of results\n    // { \"ApexClass\" : [ { \"fullName\" : \"MyApexClass\" }, { \"fullName\" : \"MyOtherApexClass\" } ] }\n\n    logger.debug('indexing type ');\n    logger.silly(typeListResult);\n\n    var indexedType = {};\n    var childNames = [];\n    var hasChildTypes;\n    var isFolderType;\n    var xmlName;\n\n    // process the type returned (ApexClass, ApexPage, CustomObject, etc.)\n    _.forOwn(typeListResult, function(items, key) {\n      if (util.endsWith(key,'Folder')) {\n        key = self._transformFolderNameToBaseName(key);\n      }\n\n      logger.silly('key: '+key);\n      logger.silly('items: ');\n      logger.silly(items);\n\n      xmlName = key;\n      hasChildTypes = _.has(typeMap[key], 'childXmlNames');\n      isFolderType = typeMap[key].inFolder;\n\n      // top level (1)\n      var metadataTypeDef = typeMap[key];\n      indexedType.id = key;\n      indexedType.type = metadataTypeDef;\n      indexedType.title = key;\n      indexedType.xmlName = key;\n      indexedType.text = key;\n      indexedType.key = key;\n      indexedType.level = 1; //todo\n      indexedType.hasChildTypes = hasChildTypes;\n      indexedType.isFolder = true;\n      indexedType.inFolder = isFolderType;\n      indexedType.cls = 'folder';\n      indexedType.select = false;\n      indexedType.expanded = false;\n\n      // children (2)\n      _.each(items, function(item) {\n        logger.silly('---->');\n        logger.silly(item);\n        item.fullName = item.fullName || new MavensMateFile({ path : item.fileName }).name;\n        item.leaf = (hasChildTypes || isFolderType) ? false : true;\n        item.title = item.fullName;\n        item.checked = false;\n        item.id = [key, item.fullName].join('.');\n        item.text = item.fullName;\n        item.cls = (hasChildTypes || isFolderType) ? 'folder' : '';\n        item.level = 2;\n        item.isFolder = hasChildTypes || isFolderType;\n        item.children = [];\n        item.select = false;\n\n        if (hasChildTypes) {\n          childNames.push(item.fullName);\n        }\n      });\n\n      items = _.sortBy(items, 'title');\n      indexedType.children = items;\n    });\n\n    var indexPromise;\n    // we need to retrieve child metadata, crawl the result and insert levels 3 and 4 of metadata\n    // examples of metadata types with child types: CustomObject or Workflow\n    // examples of metadata types with folders: Document or Dashboard (folders go 1-level deep currently)\n    if (hasChildTypes) {\n      indexPromise = self._indexChildren(indexedType, typeMap, xmlName, childNames);\n    } else if (isFolderType) {\n      indexPromise = self._indexFolders(indexedType, typeMap, xmlName);\n    }\n\n    if (indexPromise !== undefined) {\n      indexPromise\n        .then(function(result) {\n          resolve(result);\n        })\n        .catch(function(err) {\n          logger.error('Could not index children/folders for '+xmlName+': '+err.message);\n          reject(err);\n        })\n        .done();\n    } else {\n      resolve(indexedType);\n    }\n  });\n};\n\n/**\n * Indexes Salesforce.com org (writes to .org_metadata) based on project subscription\n * @return {Promise}\n */\nIndexService.prototype.indexServerProperties = function(typeXmlNames) {\n  var self = this;\n  return new Promise(function(resolve, reject) {\n    if (!typeXmlNames) {\n      typeXmlNames = config.get('mm_default_subscription');\n    }\n\n    logger.debug('indexing typeXmlNames: ');\n    logger.debug(typeXmlNames);\n\n    var typeMap = {};\n\n    var listRequests = [];\n\n    _.each(typeXmlNames, function(typeXmlName) {\n      logger.debug('adding type to map: ');\n      logger.debug(typeXmlName);\n\n      var mType = self.metadataHelper.getTypeByXmlName(typeXmlName);\n\n      if (!mType) {\n        throw new Error('Unknown metadata type: '+typeXmlName);\n      }\n\n      typeMap[typeXmlName] = mType;\n\n      var typeRequestName; // name to submit to list query\n\n      // prepare folder-based metadata for query\n      var isFolderMetadata = typeMap[typeXmlName].inFolder;\n      if (isFolderMetadata) {\n        typeRequestName = self._transformFolderNameForListRequest(typeXmlName);\n      } else {\n        typeRequestName = typeXmlName;\n      }\n\n      logger.silly(pkg);\n      if (_.has(pkg, typeXmlName+'ListProvider')) {\n        var listProvider = new pkg[typeXmlName+'ListProvider'](self.sfdcClient);\n        listRequests.push(listProvider.getList());\n      } else {\n        listRequests.push(self.sfdcClient.list(typeRequestName));\n      }\n    });\n\n    Promise.all(listRequests)\n      .then(function(results) {\n        var typePromises = [];\n        _.each(results, function(metadataListResult) {\n          logger.silly('indexing type promise: ');\n          logger.silly(metadataListResult);\n          logger.silly(JSON.stringify(typeMap));\n          typePromises.push(self._indexType(metadataListResult, typeMap));\n        });\n        return Promise.all(typePromises);\n      })\n      .then(function(results) {\n        resolve(results);\n      })\n      .catch(function(error) {\n        logger.error('An error occurred indexing server properties');\n        logger.error(error.message);\n        logger.error(error.stack);\n        reject(error);\n      });\n    });\n};\n\n/**\n * The Salesforce.com metadata api can be wonky, this transforms a folder type name to a list-friendly name\n * @param  {String} typeName\n * @return {String}\n */\nIndexService.prototype._transformFolderNameForListRequest = function(typeName) {\n  var metadataRequestType = typeName+'Folder';\n  if (metadataRequestType === 'EmailTemplateFolder') {\n    metadataRequestType = 'EmailFolder';\n  }\n  return metadataRequestType;\n};\n\nIndexService.prototype._transformFolderNameToBaseName = function(typeName) {\n  if (typeName === 'EmailFolder') {\n    return 'EmailTemplate';\n  } else {\n    return typeName.replace('Folder', '');\n  }\n};\n\n/**\n * a number of protoype methods to crawl the org metadata index and select/deselect nodes\n */\nIndexService.prototype.crawlDict = function(jsonData, depth, query, parentVisiblity) {\n  var self = this;\n  depth += 1;\n  var visibility = 0;\n  var childVisibility = 0;\n\n  // if (!parentVisiblity) {\n  //   parentVisiblity = 0;\n  // }\n  // console.log('crawling dict: ', jsonData);\n  // console.log('parentVisiblity: ', parentVisiblity);\n\n  _.forOwn(jsonData, function(value, key) {\n    if (key === 'title') {\n      // console.log('VALUE IS ---> ', value);\n      // console.log('KEY IS ---> ', key);\n      if (_.isString(value) && value.toLowerCase().indexOf(query) >= 0) {\n        visibility = 1;\n      } else if (!_.isObject(value) && !_.isArray(value) && value.toLowerCase().indexOf(query) >= 0) {\n        visibility = 1;\n      }\n      // console.log(visibility);\n    }\n  });\n\n  _.forOwn(jsonData, function(value, key) {\n    if (self.crawl(value, depth, query, visibility) > 0) {\n      childVisibility = 1;\n    }\n    if (visibility > childVisibility) {\n      visibility = visibility;\n    } else {\n      visibility = childVisibility;\n    }\n  });\n\n  jsonData.visibility = visibility;\n\n  if (visibility === 0) {\n    jsonData.cls = 'hidden';\n    jsonData.addClass = 'dynatree-hidden';\n  }\n\n  return visibility;\n};\n\nIndexService.prototype.crawlArray = function(jsonData, depth, query, parentVisiblity) {\n  var self = this;\n  depth += 1;\n  var elementsToRemove = [];\n  var index = 0;\n  var childVisibility;\n\n  _.each(jsonData, function(value) {\n    if (_.isString(value)) {\n      childVisibility = value.toLowerCase().indexOf(query) >= 0;\n    } else if (_.isObject(value)) {\n      childVisibility = self.crawl(value, depth, query, parentVisiblity);\n      value.index = index;\n    } else {\n      childVisibility = value.toLowerCase().indexOf(query) >= 0;\n    }\n\n    if (childVisibility === 0 && parentVisiblity === 0) {\n      elementsToRemove.push(value);\n      value.cls = 'hidden';\n      value.addClass = 'dynatree-hidden';\n    } else {\n      if (value.isFolder) {\n        value.expanded = true;\n      }\n    }\n\n    index += 1;\n  });\n};\n\nIndexService.prototype.crawl = function(jsonData, depth, query, parentVisiblity) {\n  var self = this;\n  if (_.isArray(jsonData)) {\n    self.crawlArray(jsonData, depth, query, parentVisiblity);\n    var hv = false;\n    _.each(jsonData, function(jd) {\n      if (_.has(jd, 'visibility') && jd.visibility === 1) {\n        hv = true;\n        return false;\n      }\n    });\n    return hv;\n  } else if (_.isObject(jsonData)) {\n    return self.crawlDict(jsonData, depth, query, parentVisiblity);\n  } else {\n    return 0;\n  }\n};\n\nIndexService.prototype.setVisibility = function(jsonData, query) {\n  this.crawl(jsonData, 0, query.toLowerCase(), 0);\n};\n\nIndexService.prototype.ensureParentsAreCheckedIfNecessary = function(orgMetadata) {\n  _.each(orgMetadata, function(metadataType) {\n    if (metadataType.children && _.isArray(metadataType.children)) {\n      var numberOfChildrenSelected = 0;\n      _.each(metadataType.children, function(c) {\n        if (c.select) {\n          numberOfChildrenSelected++;\n        }\n      });\n      if (metadataType.children.length === numberOfChildrenSelected && metadataType.children > 0) {\n        metadataType.checked = true;\n        metadataType.select = true;\n      }\n    }\n  });\n};\n\nIndexService.prototype.setChecked = function(src, ids, dpth, key) {\n  // Recursively find checked item\n  if (!key) {\n    key = '';\n  }\n  if (!ids) {\n    ids = [];\n  }\n  if (!dpth) {\n    dpth = 0;\n  }\n  var self = this;\n  if (_.isArray(src)) {\n    _.each(src, function(litem) {\n      if (_.isObject(litem)) {\n        if (_.has(litem, 'id') && ids.indexOf(litem.id) >= 0) {\n          litem.checked = true;\n          litem.select = true;\n        }\n      }\n      self.setChecked(litem, ids, dpth + 2);\n    });\n  } else if (_.isObject(src)) {\n    _.forOwn(src, function(value, key) {\n      self.setChecked(value, ids, dpth + 1, key);\n    });\n  }\n};\n\nIndexService.prototype.setThirdStateChecked = function(src, ids, dpth, key) {\n  // Recursively find checked item\n  var self = this;\n  if (!key) {\n    key = '';\n  }\n  if (!ids) {\n    ids = [];\n  }\n  if (!dpth) {\n    dpth = 0;\n  }\n  if (_.isArray(src)) {\n    _.each(src, function(litem) {\n      if (_.isObject(litem)) {\n        return false;\n      }\n      self.setThirdStateChecked(litem, ids, dpth + 2);\n    });\n  } else if (_.isObject(src)) {\n    if (_.has(src, 'children') && _.isArray(src.children) && src.children.length > 0) {\n      var children = src.children;\n      var numberOfPossibleChecked = children.length;\n      var numberOfChecked = 0;\n      _.each(children, function(c) {\n        if (_.has(c, 'checked') && c.checked) {\n          numberOfChecked += 1;\n        }\n      });\n      if (numberOfPossibleChecked === numberOfChecked) {\n        src.checked = true;\n      } else if (numberOfChecked > 0) {\n        src.cls = 'x-tree-checkbox-checked-disabled';\n      }\n    }\n\n    _.forOwn(src, function(value, key) {\n      self.setThirdStateChecked(value, ids, dpth + 1, key);\n    });\n  }\n};\n\nmodule.exports = IndexService;\n\n\n\n/** WEBPACK FOOTER **\n ** ../mavensmate/app/lib/services/index.js\n **/","/**\n * @file Service responsible for running tests and parsing results\n * @author Joseph Ferraro <@joeferraro>\n */\n\n'use strict';\nvar Promise   = require('bluebird');\nvar _         = require('lodash');\nvar path      = require('path');\nvar util      = require('../util');\nvar fs        = require('fs-extra');\nvar logger    = require('winston');\nvar moment    = require('moment');\nvar config    = require('../../config');\nvar swig      = require('swig');\n\n/**\n * Represents an apex test execution\n * @param {Object} opts\n * @param {Array} opts.project - instance of Project\n * @param {Array} opts.tests - array of test names, either an array of paths ['/path/to/test1.cls'] or ['test1.cls']\n * @param {Boolean} opts.skipCoverage - set to true to ignore coverage results\n */\nfunction ApexTest(opts) {\n  opts.tests = opts.tests || opts.classes || opts.paths || [];\n  util.applyProperties(this, opts);\n  this._initialize();\n}\n\nApexTest.prototype._initialize = function() {\n  var self = this;\n  self.apexClassOrTriggerIdToName = {};\n  self.testClassNames = [];\n  _.each(this.tests, function(t) {\n    var testNameOrPath = _.isString(t) ? t : t.testNameOrPath;\n    if (testNameOrPath.indexOf(path.sep) !== -1) {\n      if (testNameOrPath.indexOf(self.project.path) === -1) {\n        throw new Error('Test does not exist in this project: '+testNameOrPath);\n      }\n    } else {\n      if (testNameOrPath.indexOf('.') === -1) {\n        testNameOrPath = testNameOrPath+'.cls';\n      }\n      var fullPath = path.join(self.project.path, 'src', 'classes', testNameOrPath);\n      if (fullPath.indexOf(self.project.path) === -1 || !fs.existsSync(fullPath)) {\n        throw new Error('Test does not exist in this project: '+testNameOrPath);\n      }\n    }\n    self.testClassNames.push(testNameOrPath.indexOf(path.sep) !== -1 ? path.basename(testNameOrPath) : testNameOrPath);\n  });\n};\n\nApexTest.prototype.getResultHtml = function(result) {\n  result.project = this.project;\n  return swig.renderFile('views/unit_test/result.html', result);\n};\n\n/**\n * Executes requested tests\n * @return {Promise} resolves with {Object}\n */\nApexTest.prototype.execute = function() {\n  var self = this;\n  return new Promise(function(resolve, reject) {\n    var localStore = self.project.getLocalStore();\n    logger.silly(localStore);\n\n    var testsPayload = []; // this will either be an array of class ids or an array of objects containing class names and methods\n    var testClassIds = [];\n\n    if (_.isString(self.tests[0])) { // an array of class ids\n      testsPayload = [];\n      _.each(self.testClassNames, function(testClassName) {\n        logger.debug('adding test to job', testClassName);\n        if (!localStore[testClassName]) {\n          return reject(new Error('Invalid project metadata cache. Run Index Metadata command to reset the cache.'));\n        }\n        var apexClassId = localStore[testClassName].id;\n        testsPayload.push(apexClassId);\n        testClassIds.push(apexClassId);\n      });\n    } else {\n      _.each(self.tests, function(test) {\n        logger.debug('adding test to job', test);\n        if (!localStore[path.basename(test.testNameOrPath)]) {\n          return reject(new Error('Invalid project metadata cache. Run Index Metadata command to reset the cache.'));\n        }\n        var apexClassId = localStore[path.basename(test.testNameOrPath)].id;\n        testsPayload.push({\n          classId: apexClassId,\n          testMethods: test.methodNames\n        });\n        testClassIds.push(apexClassId);\n      });\n    }\n\n    logger.debug('running the following tests: ');\n    logger.debug(testsPayload);\n\n    var classResults;\n    var methodResults;\n    var projectClassIds = [];\n    var projectTriggerIds = [];\n    var coverageResults = {};\n    var testResults = {};\n\n    self.project.sfdcClient.runTests(testsPayload)\n      .then(function(results) {\n        classResults = results.classResults;\n        methodResults = results.methodResults;\n        _.forOwn(self.project.getLocalStore(), function(value, key) {\n          if (util.endsWith(key, '.cls')) {\n            projectClassIds.push(value.id);\n            self.apexClassOrTriggerIdToName[value.id] = value.fullName;\n          } else if (util.endsWith(key, '.trigger')) {\n            projectTriggerIds.push(value.id);\n            self.apexClassOrTriggerIdToName[value.id] = value.fullName;\n          }\n        });\n\n        var logDownloadPromises = [];\n        var logIdsToDownload = [];\n\n        if (config.get('mm_download_categorized_test_logs')) {\n          _.each(methodResults.records, function(r) {\n            if (r.ApexLogId && logIdsToDownload.indexOf(r.ApexLogId) === -1) {\n              logIdsToDownload.push(r.ApexLogId);\n              logDownloadPromises.push(self._downloadLog(r.ApexClass.Name, r.ApexLogId));\n            }\n          });\n        }\n\n        return Promise.all(logDownloadPromises);\n      })\n      .then(function() {\n        _.each(classResults.records, function(classResult) {\n          var key = classResult.ApexClass.Name;\n          testResults[key] = classResult;\n          testResults[key].results = _.where(methodResults.records, { ApexClassId : classResult.ApexClassId });\n        });\n\n        if (self.skipCoverage) {\n          logger.info('skipping test coverage...');\n          resolve({ testResults: testResults });\n        } else {\n          logger.info('getting test coverage...');\n          self.getCoverage(projectClassIds, testClassIds)\n            .then(function(classCoverageResults) {\n              coverageResults.classes = classCoverageResults;\n              return self.getCoverage(projectTriggerIds, testClassIds);\n            })\n            .then(function(triggerCoverageResults) {\n              coverageResults.triggers = triggerCoverageResults;\n              resolve({ testResults: testResults, coverageResults: coverageResults });\n            })\n            .catch(function(err) {\n              logger.error('Failed to get coverage');\n              logger.error(err);\n              reject(err);\n            })\n            .done();\n        }\n      })\n      .catch(function(err) {\n        logger.error('Could not run tests');\n        logger.error(err);\n        reject(err);\n      })\n      .done();\n  });\n};\n\nApexTest.prototype.getOrgWideCoverage = function() {\n  var self = this;\n  return new Promise(function(resolve, reject) {\n    var query = 'SELECT PercentCovered FROM ApexOrgWideCoverage';\n    self.project.sfdcClient.conn.tooling.query(query, function(err, res) {\n      if (err) {\n        reject(err);\n      } else {\n        resolve(res.records[0].PercentCovered);\n      }\n    });\n  });\n};\n\nApexTest.prototype.getCoverage = function(classOrTriggerIds, testClassIds) {\n  var self = this;\n  return new Promise(function(resolve, reject) {\n    var coverageObject = 'ApexCodeCoverage';\n    if (testClassIds === undefined) {\n      coverageObject = 'ApexCodeCoverageAggregate';\n    }\n\n    var fields = ['NumLinesCovered', 'NumLinesUncovered', 'Coverage', 'ApexClassOrTriggerId'].join(',');\n    var andTestClassIdQualifier;\n    if (testClassIds && testClassIds.length > 0) {\n      andTestClassIdQualifier = ' AND ApexTestClassId IN ('+util.joinForQuery(testClassIds)+')';\n    }\n\n    function queryForCoverage(classOrTriggerIdChunk) {\n      return new Promise(function(rresolve, rreject) {\n        var query = 'SELECT '+fields+' FROM '+coverageObject+' WHERE ApexClassOrTriggerId IN ('+util.joinForQuery(classOrTriggerIdChunk)+')';\n\n        if (andTestClassIdQualifier) {\n          query += andTestClassIdQualifier;\n        }\n\n        logger.debug('coverage query: ', query);\n\n        self.project.sfdcClient.conn.tooling.query(query, function(err, res) {\n          if (err) {\n            rreject(err);\n          } else {\n            rresolve(res);\n          }\n        });\n      });\n    }\n\n    // 21 = 18 char id plus single quote plus comma, e.g. 'dsfklfdsjksdf',\n    // leave 6300 for AND ApexTestClassId IN statement (300 test classes run at the same time) (this is just a shot in the dark)\n    // max length of an individual classOrTriggerIds chunk = 13550/21 = ~600\n\n    var classOrTriggerIdsChunks = _.chunk(classOrTriggerIds, 250);\n    var coveragePromises = [];\n    _.each(classOrTriggerIdsChunks, function(chunk) {\n      coveragePromises.push(queryForCoverage(chunk));\n    });\n\n    Promise.all(coveragePromises)\n      .then(function(coveragePromiseResults) {\n        return self._aggregateCoverage(coveragePromiseResults);\n      })\n      .then(function(res) {\n        resolve(res);\n      })\n      .catch(function(err) {\n        logger.error('Could not get coverage: '+err.message);\n        reject(err);\n      });\n  });\n};\n\nApexTest.prototype._downloadLog = function(testName, logId) {\n  var self = this;\n  return new Promise(function(resolve, reject) {\n    // create test name directory in debug/tests\n    if (!fs.existsSync(path.join(self.project.path, 'debug', 'tests', testName))) {\n      fs.mkdirpSync(path.join(self.project.path, 'debug', 'tests', testName));\n    }\n\n    var url = self.project.sfdcClient.conn.tooling._baseUrl() + '/sobjects/ApexLog/'+logId+'/Body';\n    self.project.sfdcClient.conn.tooling.request(url, function(err, res) {\n      if (err) {\n        reject(new Error('Could not download log: '+err.message));\n      } else {\n        var logFileName = [moment().format('YYYY-MM-DD HH-mm-ss'), 'log'].join('.');\n        var filePath = path.join(self.project.path, 'debug', 'tests', testName, logFileName);\n        fs.outputFile(filePath, res, function(e) {\n          if (e) {\n            reject(new Error('Could not write log file: '+e.message));\n          } else {\n            resolve();\n          }\n        });\n      }\n    });\n  });\n};\n\n/**\n * Transforms a CodeCoverage result into a dictionary of aggregate coverage results, keyed by the class name\n * @return {Promise}\n */\nApexTest.prototype._aggregateCoverage = function(coverageResultRecordSets) {\n  var self = this;\n  return new Promise(function(resolve, reject) {\n    try {\n      var result = {}; // { \"MyClass.cls\" : { \"coveredLines\" : 5, \"uncoveredLines\" : 10 } }\n      _.each(coverageResultRecordSets, function(coverageResultRecordSet) {\n        _.each(coverageResultRecordSet.records, function(coverageResult) {\n\n          logger.silly('coverage result : -->');\n          logger.silly(coverageResult);\n\n          var classOrTriggerName = self.apexClassOrTriggerIdToName[coverageResult.ApexClassOrTriggerId];\n\n          logger.silly(classOrTriggerName);\n\n          if (!_.has(result, classOrTriggerName)) {\n            logger.silly('adding coverage result for ', classOrTriggerName);\n            result[classOrTriggerName] = {};\n            result[classOrTriggerName].coveredLines = coverageResult.Coverage.coveredLines;\n            result[classOrTriggerName].uncoveredLines = coverageResult.Coverage.uncoveredLines;\n            logger.silly(result[classOrTriggerName]);\n          } else {\n            var currentValue = result[classOrTriggerName];\n            logger.silly('have coverage result for ', classOrTriggerName);\n            logger.silly('adding coverage');\n            currentValue.coveredLines = _.union(currentValue.coveredLines, coverageResult.Coverage.coveredLines);\n            currentValue.uncoveredLines = _.union(currentValue.uncoveredLines, coverageResult.Coverage.uncoveredLines);\n            logger.silly(currentValue);\n          }\n        });\n      });\n\n      logger.silly('coverage results: ', result);\n\n      // coveredLines: [\n      //   3, 4, 5\n      // ]\n\n      // uncoveredLines: [\n      //   1, 2, 3\n      // ]\n      //\n      // => [1, 2]\n\n      _.forOwn(result, function(coverageResult, apexClassOrTriggerId) {\n        // console.log('for apexClassOrTriggerId: '+apexClassOrTriggerId);\n        coverageResult.uncoveredLines = _.difference(coverageResult.uncoveredLines, coverageResult.coveredLines);\n        coverageResult.totalLines = coverageResult.coveredLines.length + coverageResult.uncoveredLines.length;\n        if (coverageResult.totalLines === 0) {\n          coverageResult.percentCovered = 0;\n        } else {\n          coverageResult.percentCovered = Math.round(parseFloat(coverageResult.coveredLines.length / coverageResult.totalLines * 100));\n        }\n      });\n\n      resolve(result);\n    } catch(e) {\n      reject(new Error('Could not aggregate coverage: '+e.message));\n    }\n  });\n};\n\nmodule.exports = ApexTest;\n\n\n/** WEBPACK FOOTER **\n ** ../mavensmate/app/lib/services/test.js\n **/","module.exports = require(\"node-uuid\");\n\n\n/*****************\n ** WEBPACK FOOTER\n ** external \"node-uuid\"\n ** module id = 35\n ** module chunks = 0\n **/","module.exports = {\n  mm_workspace: {\n    title: 'Workspaces',\n    description: 'Array of local workspaces. These should be absolute, valid paths.',\n    example: '*nix paths should include a leading slash. Windows paths should include the drive and escaped back slashes.<br/><br/>*nix Example: [ \"/path/to/workspace\", \"/path/to/another/workspace\" ]<br/>Windows Example: [ \"C:\\\\\\\\some\\\\\\\\path\", \"C:\\\\\\\\another\\\\\\\\path\" ]',\n    type: 'array',\n    default: [],\n    order: 10\n  },\n  mm_api_version: {\n    title: 'Salesforce API Version',\n    description: 'The API version you would like to use when accessing the Salesforce APIs.',\n    type: 'string',\n    default: '36.0',\n    order: 20\n  },\n  mm_compile_check_conflicts: {\n    title: 'Check conflicts before compile',\n    description: 'Set to true to check for conflicts when compiling Apex/Visualforce metadata.',\n    type: 'boolean',\n    default: true,\n    order: 35\n  },\n  mm_download_categorized_test_logs: {\n    title: 'Download categorized Apex unit test logs',\n    description: 'Set to true to download Apex unit test logs to your project\\'s debug/<test-name>/ directory',\n    type: 'boolean',\n    default: false,\n    order: 36\n  },\n  mm_timeout: {\n    title: 'Timeout, in seconds',\n    description: 'Timeout (in seconds) for MavensMate commands.',\n    type: 'integer',\n    default: 600,\n    order: 40\n  },\n  mm_default_subscription: {\n    title: 'Default metadata subscription',\n    description: 'Array of metadata types that should be included in every new MavensMate project, e.g. ApexClass, ApexPage, CustomObject, StaticResource',\n    type: 'array',\n    default: ['ApexClass', 'ApexComponent', 'ApexPage', 'ApexTrigger', 'StaticResource'],\n    order: 50\n  },\n  mm_ignore_managed_metadata: {\n    title: 'Ignore managed metadata',\n    description: 'Set to true to prevent managed metadata from being downloaded to your MavensMate projects',\n    type: 'boolean',\n    default: true,\n    order: 160\n  },\n  mm_use_keyring: {\n    title: 'Use keyring',\n    description: 'Set to true if you would like MavensMate to use your machine\\'s keychain support to store/retrieve Salesforce.com credentials. If set to false, MavensMate will store passwords in plain text in your project\\'s config/.settings and config/.org_connections files.',\n    type: 'boolean',\n    default: true,\n    order: 60\n  },\n  mm_compile_with_tooling_api: {\n    title: 'Compile Apex/Visualforce metadata with Tooling API',\n    description: 'Set to true to use the tooling api to compile apex metadata (if you\\'re experiencing compile issues, set this to false to use the metadata api)',\n    type: 'boolean',\n    default: true,\n    order: 30\n  },\n  mm_subl_location : {\n    title: 'Sublime Text location',\n    description: 'The full path of your Sublime Text executable (Sublime Text users only).',\n    type: 'object',\n    order: 11,\n    default: {\n      \"windows\": \"C:\\\\Program Files\\\\Sublime Text 3\\\\sublime_text.exe\",\n      \"linux\": \"/usr/bin/subl\",\n      \"osx\": \"/Applications/Sublime Text.app/Contents/SharedSupport/bin/subl\"\n    }\n  },\n  mm_atom_exec_path: {\n    title: 'Atom executable location',\n    description: 'The full path to atom executable (Atom users only).',\n    type: 'object',\n    default: {\n      \"windows\": \"C:\\\\Program Files\\\\Atom\\\\Atom.exe\",\n      \"linux\": \"/usr/bin/atom\",\n      \"osx\": \"/usr/local/bin/atom\"\n    },\n    order: 150\n  },\n  mm_vscode_exec_path: {\n    title: 'Visual Studio Code executable location',\n    description: 'The full path to Visual Studio \"code\" executable (Visual Studio Code users only).',\n    type: 'object',\n    default: {\n      \"windows\": \"C:\\\\Program Files\\\\Code\\\\Code.exe\",\n      \"linux\": \"/usr/bin/code\",\n      \"osx\": \"/usr/local/bin/code\"\n    },\n    order: 150\n  },\n  mm_log_location: {\n    title: 'MavensMate logs location',\n    description: 'Full path to the location where you would like MavensMate to store its logs. When this and mm_log_level are set, MavensMate will write logs to this path with the file name mavensmate.log. Relevant logs should be included with any bug reports.',\n    type: 'string',\n    default: '',\n    order: 70\n  },\n  mm_log_level: {\n    title: 'Plugin log level',\n    description: 'Possible values: INFO, WARN, DEBUG, VERBOSE, SILLY',\n    type: 'string',\n    default: 'DEBUG',\n    order: 80\n  },\n  mm_play_sounds: {\n    title: 'Play sounds',\n    description: 'Set to true if you would like MavensMate to play notification sounds on events like deployments, unit tests, etc.',\n    type: 'boolean',\n    default: true,\n    order: 90\n  },\n  mm_template_location: {\n    title: 'MavensMate templates location',\n    description: 'Possible values: remote or local. Set to \"remote\" when templates should be sourced from GitHub. Set to \"local\" if you have cloned MavensMate-Templates locally and wish to source templates from your local file system.',\n    type: 'string',\n    default: 'remote',\n    order: 130\n  },\n  mm_template_source: {\n    title: 'MavensMate template source',\n    description: 'If \"mm_template_location\" is set to \"local\", set this to the absolute location of the directory where you\\'ve forked the MavensMate-Templates project.',\n    example: '\"/path/on/your/machine/to/templates\"<br/>If \"mm_template_location\" is set to \"remote\", set to github location (\"username/reponame/branchname\"). Project structure must be in the format found here: https://github.com/joeferraro/MavensMate-Templates',\n    type: 'string',\n    default: 'joeferraro/MavensMate-Templates/master',\n    order: 140\n  },\n  mm_apex_file_extensions: {\n    title: 'Salesforce file extensions',\n    description: 'Array of file extensions that should be considered \"Salesforce\" file extensions.',\n    type: 'array',\n    default: [\".page\", \".component\", \".cls\", \".object\", \".trigger\", \".layout\", \".resource\", \".remoteSite\", \".labels\", \".app\", \".dashboard\", \".permissionset\", \".workflow\", \".email\", \".profile\", \".scf\", \".queue\", \".reportType\", \".report\", \".weblink\", \".tab\", \".letter\", \".role\", \".homePageComponent\", \".homePageLayout\", \".objectTranslation\", \".flow\", \".datacategorygroup\", \".snapshot\", \".site\", \".sharingRules\", \".settings\", \".callCenter\", \".community\", \".authProvider\", \".customApplicationComponent\", \".quickAction\", \".approvalProcess\", \".html\"],\n    order: 170\n  },\n  mm_http_proxy: {\n    title: 'HTTP Proxy',\n    description: 'Set if you are behind a proxy (you can also set via export HTTP_PROXY, export HTTPS_PROXY). Example: http:\\/\\/10.10.1.10:3128 or http:\\/\\/user:pass@10.10.1.10:3128/',\n    type: 'string',\n    default: '',\n    order: 190\n  },\n  mm_https_proxy: {\n    title: 'HTTPS Proxy',\n    description: 'Set if you are behind a proxy (you can also set via export HTTP_PROXY, export HTTPS_PROXY). Example: http:\\/\\/10.10.1.10:3128 or http:\\/\\/user:pass@10.10.1.10:3128/',\n    type: 'string',\n    default: '',\n    order: 200\n  },\n  mm_purge_on_delete: {\n    title: 'Purge on delete',\n    description: 'Set to true to perform a hard delete when deleting metadata.',\n    type: 'boolean',\n    default: true,\n    order: 200\n  },\n  mm_legacy_compile: {\n    title: 'Use legacy compile method',\n    description: 'Set to true to perform a retrieve via the metadata API after Apex/VF compilation. Only set to true if you are having trouble compiling.',\n    type: 'boolean',\n    default: false,\n    order: 210\n  }\n};\n\n\n/** WEBPACK FOOTER **\n ** ../mavensmate/app/config/default.js\n **/","/**\n * @file Collection of helper functions for the swig renderer\n * @author Joseph Ferraro <@joeferraro>\n */\n\n'use strict';\n\nvar path    = require('path');\nvar fs      = require('fs-extra');\nvar util    = require('./lib/util');\nvar _       = require('lodash');\nvar config  = require('./config');\nvar logger  = require('winston');\nvar querystring = require('querystring');\n\nvar ViewHelper = function(opts) {\n  util.applyProperties(this, opts);\n};\n\nViewHelper.prototype.util = util;\nViewHelper.prototype.config = config;\n\nViewHelper.prototype.getSupportedEditors = function() {\n  return this.supportedEditors;\n};\n\nViewHelper.prototype.isMenuItemActive = function(url, resource) {\n  if (_.isString(resource)) {\n    return url.indexOf('/app/'+resource) === 0;\n  } else if (_.isArray(resource)) {\n    for (var r in resource) {\n      if (url.indexOf('/app/'+resource[r]) === 0)\n        return true;\n    }\n    return false;\n  } else {\n    return false;\n  }\n};\n\nViewHelper.prototype.getPhotoUrl = function(project) {\n  try {\n    return project.sfdcClient.conn.userInfo.photos.thumbnail + '?oauth_token=' + project.sfdcClient.accessToken;\n  } catch(e) {\n    return null;\n  }\n};\n\nViewHelper.prototype.getPathBaseName = function(p) {\n  return path.basename(p);\n};\n\nViewHelper.prototype.getRobotPath = function() {\n  return this.getBaseUrl() + '/app/static/images/robots/'+(Math.floor(Math.random() * 5) + 1).toString()+'.png';\n};\n\nViewHelper.prototype.getRobotNoise = function() {\n  var noises = [\n    'blerg', 'bloop', 'beep boop boop', 'beep boop beep', 'morp', 'jonk', 'ping', 'zonk', 'xonx', 'morple', 'fwat', 'turple'\n  ];\n  var index = Math.floor(Math.random() * noises.length) + 0;\n  return noises[index];\n};\n\nViewHelper.prototype.listProjects = function() {\n  var workspaces = config.get('mm_workspace');\n  var projects = [];\n  if (_.isString(workspaces) && workspaces === '') {\n    workspaces = [];\n  }\n  if (!_.isArray(workspaces)) {\n    workspaces = [workspaces];\n  }\n  _.each(workspaces, function(workspacePath) {\n    try {\n      var projectPaths = util.listDirectories(workspacePath);\n      _.each(projectPaths, function(projectPath) {\n        var settingsPath = path.join(projectPath, 'config', '.settings');\n        if (fs.existsSync(settingsPath)) {\n          var settings = util.getFileBody(settingsPath, true);\n          projects.push({\n            id: settings.id,\n            path: projectPath\n          });\n        }\n      });\n    } catch(e) {\n      logger.error('Could not list projects: '+e.message);\n    }\n  });\n  return projects;\n};\n\nViewHelper.prototype.getStaticResourcePath = function() {\n  return this.getBaseUrl() + '/app/static';\n};\n\nViewHelper.prototype.getBaseUrl = function() {\n  return 'http://localhost:'+this.port;\n};\n\nViewHelper.prototype.getDefaultSubscription = function() {\n  return config.get('mm_default_subscription');\n};\n\nViewHelper.prototype.getWorkspaces = function() {\n  var workspaces = config.get('mm_workspace');\n  if (!_.isArray(workspaces)) {\n    workspaces = [workspaces];\n  }\n  return workspaces;\n};\n\nViewHelper.prototype.getMetadataObjects = function(project) {\n  return _.sortBy(project.getDescribe().metadataObjects, 'xmlName');\n};\n\nViewHelper.prototype.doesClassOrTriggerExist = function(project, classOrTriggerName, type) {\n  var self = this;\n  if (type === 'ApexClass') {\n    return fs.existsSync(path.join(project.path), 'src', 'classes', classOrTriggerName+'.cls');\n  } else if (type === 'ApexTrigger') {\n    return fs.existsSync(path.join(project.path), 'src', 'triggers', classOrTriggerName+'.trigger');\n  }\n};\n\nViewHelper.prototype.getFileLines = function(project, classOrTriggerName, type) {\n  var self = this;\n  if (type === 'ApexClass') {\n    return fs.readFileSync(path.join(project.path, 'src', 'classes', classOrTriggerName+'.cls'), 'utf8').toString().split(/\\r?\\n/);\n  } else if (type === 'ApexTrigger') {\n    return fs.readFileSync(path.join(project.path, 'src', 'triggers', classOrTriggerName+'.trigger'), 'utf8').toString().split(/\\r?\\n/);\n  }\n};\n\nViewHelper.prototype.getCoverageCssClass = function(percentCovered) {\n  if (percentCovered <= 40) {\n    return 'error';\n  } else if (percentCovered < 75) {\n    return 'warning';\n  } else {\n    return 'success';\n  }\n};\n\nViewHelper.prototype.htmlize = function(str) {\n  try {\n    str = str.replace(/&/g, '&amp;');\n    str = str.replace(/\"/g, '&quot;');\n    str = str.replace(/</g, '&lt;');\n    str = str.replace(/>/g, '&gt;');\n    str = str.replace(/\\n/g, '<br/>');\n    str = str.replace(/\\t/g, '&nbsp;&nbsp;&nbsp;&nbsp;');\n    str = str.replace(/\\s/g, '&nbsp;');\n    return str;\n  } catch(e) {\n    return str;\n  }\n};\n\nViewHelper.prototype.getDeployMessageFileNameBaseName = function(str) {\n  return str.split('/').pop();\n};\n\nViewHelper.prototype.isFalse = function(input) {\n  return input === false || input === 'false' || input === 0;\n};\n\nViewHelper.prototype.isTrue = function(input) {\n  return input === true || input === 'true' || input === 1;\n};\n\n\nmodule.exports = ViewHelper;\n\n\n/** WEBPACK FOOTER **\n ** ../mavensmate/app/helper.js\n **/","/**\n * @file Creates a new apex script and places in the project's apex-scripts directory\n * @author Joseph Ferraro <@joeferraro>\n */\n\n'use strict';\n\nvar Promise           = require('bluebird');\nvar BaseCommand       = require('../../command');\nvar inherits          = require('inherits');\nvar ApexScriptService = require('../../services/apex-script');\n\nfunction Command() {\n  Command.super_.call(this, Array.prototype.slice.call(arguments, 0));\n}\n\ninherits(Command, BaseCommand);\n\nCommand.prototype.execute = function() {\n  var self = this;\n  return new Promise(function(resolve, reject) {\n    var apexScriptService = new ApexScriptService(self.getProject());\n    apexScriptService.create(self.payload.name)\n      .then(function(result) {\n        resolve(result);\n      })\n      .catch(function(error) {\n        reject(error);\n      })\n      .done();\n  });\n};\n\nexports.command = Command;\nexports.addSubCommand = function(program) {\n  program\n    .command('new-apex-script [scriptName]')\n    .description('Creates a new apex script')\n    .action(function(scriptName){\n      if (scriptName) {\n        program.commandExecutor.execute({\n          name: this._name,\n          body: { name: scriptName }\n        });\n      } else {\n        console.error('Please specify a script name');\n        process.exit(1);\n      }\n    });\n};\n\n\n/** WEBPACK FOOTER **\n ** ../mavensmate/app/lib/commands/apex-script/new-apex-script.js\n **/","/**\n * @file Executes an apex script anonymously\n * @author Joseph Ferraro <@joeferraro>\n */\n\n'use strict';\n\nvar Promise           = require('bluebird');\nvar BaseCommand       = require('../../command');\nvar inherits          = require('inherits');\nvar ApexScriptService = require('../../services/apex-script');\nvar util              = require('../../util');\n\nfunction Command() {\n  Command.super_.call(this, Array.prototype.slice.call(arguments, 0));\n}\n\ninherits(Command, BaseCommand);\n\nCommand.prototype.execute = function() {\n  var self = this;\n  return new Promise(function(resolve, reject) {\n    var apexScriptService = new ApexScriptService(self.getProject());\n    apexScriptService.execute(self.payload.paths)\n      .then(function(result) {\n        resolve(result);\n      })\n      .catch(function(error) {\n        reject(error);\n      })\n      .done();\n  });\n};\n\nexports.command = Command;\nexports.addSubCommand = function(program) {\n  program\n    .command('run-apex-script [scriptPath]')\n    .alias('execute-apex-script')\n    .description('Executes an apex script')\n    .action(function(scriptPath){\n      if (scriptPath) {\n        program.commandExecutor.execute({\n          name: this._name,\n          body: { paths: util.getAbsolutePaths( [ scriptPath ] ) }\n        });\n      } else {\n        console.error('Please specify a valid script path');\n        process.exit(1);\n      }\n    });\n};\n\n\n/** WEBPACK FOOTER **\n ** ../mavensmate/app/lib/commands/apex-script/run-apex-script.js\n **/","/**\n * @file Deletes a checkpoint\n * @author Joseph Ferraro <@joeferraro>\n */\n\n'use strict';\n\nvar Promise           = require('bluebird');\nvar inherits          = require('inherits');\nvar BaseCommand       = require('../../command');\nvar CheckpointService = require('../../services/checkpoint');\n\nfunction Command() {\n  Command.super_.call(this, Array.prototype.slice.call(arguments, 0));\n}\n\ninherits(Command, BaseCommand);\n\nCommand.prototype.execute = function() {\n  var self = this;\n  return new Promise(function(resolve, reject) {\n    var project = self.getProject();\n    var checkpointService = new CheckpointService(project);\n    checkpointService.deleteCheckpoint(self.payload.path, self.payload.lineNumber)\n      .then(function(res) {\n        resolve(res);\n      })\n      .catch(function(error) {\n        reject(error);\n      })\n      .done();\n  });\n};\n\nexports.command = Command;\nexports.addSubCommand = function(program) {\n  program\n    .command('delete-checkpoint [filePath] [lineNumber]')\n    .description('Creates Apex checkpoint')\n    .action(function(filePath, lineNumber){\n      program.commandExecutor.execute({\n        name: this._name,\n        body: {\n          path: filePath,\n          lineNumber: lineNumber\n        }\n      });\n    });\n};\n\n\n/** WEBPACK FOOTER **\n ** ../mavensmate/app/lib/commands/debug/delete-checkpoint.js\n **/","/**\n * @file Downloads a debug log by id\n * @author Joseph Ferraro <@joeferraro>\n */\n\n'use strict';\n\nvar Promise     = require('bluebird');\nvar inherits    = require('inherits');\nvar BaseCommand = require('../../command');\nvar LogService  = require('../../services/log');\n\nfunction Command() {\n  Command.super_.call(this, Array.prototype.slice.call(arguments, 0));\n}\n\ninherits(Command, BaseCommand);\n\nCommand.prototype.execute = function() {\n  var self = this;\n  return new Promise(function(resolve, reject) {\n    var project = self.getProject();\n    var logService = new LogService(project);\n    logService.downloadLog(self.payload.logId)\n      .then(function(result) {\n        resolve(result);\n      })\n      .catch(function(error) {\n        reject(error);\n      })\n      .done();\n  });\n};\n\nexports.command = Command;\nexports.addSubCommand = function(program) {\n  program\n    .command('download-log [logId]')\n    .description('Downloads a log to your project\\'s debug/logs directory')\n    .action(function(logId){\n      program.commandExecutor.execute({\n        name: this._name,\n        body: { logId: logId }\n      });\n    });\n};\n\n\n/** WEBPACK FOOTER **\n ** ../mavensmate/app/lib/commands/debug/download-log.js\n **/","/**\r\n * @file Executes anonymous Apex\r\n * @author Joseph Ferraro <@joeferraro>\r\n */\r\n\r\n'use strict';\r\n\r\nvar Promise           = require('bluebird');\r\nvar util              = require('../../util');\r\nvar BaseCommand       = require('../../command');\r\nvar inherits          = require('inherits');\r\nvar EditorService     = require('../../services/editor');\r\n\r\nfunction Command() {\r\n  Command.super_.call(this, Array.prototype.slice.call(arguments, 0));\r\n}\r\n\r\ninherits(Command, BaseCommand);\r\n\r\nCommand.prototype.execute = function() {\r\n  var self = this;\r\n  return new Promise(function(resolve, reject) {\r\n    if (self.isUICommand()) {\r\n      self.editorService.launchUI('apex/new', { pid: self.getProject().settings.id });\r\n      resolve('Success');\r\n    } else {\r\n      self.getProject().sfdcClient.executeApex(self.payload)\r\n        .then(function(result) {\r\n          resolve(result);\r\n        })\r\n        .catch(function(error) {\r\n          reject(error);\r\n        })\r\n        .done();\r\n    }\r\n  });\r\n};\r\n\r\nexports.command = Command;\r\nexports.addSubCommand = function(program) {\r\n  program\r\n    .command('execute-apex')\r\n    .option('--ui', 'Launches the Apex execute anonymous UI.')\r\n    .description('Execute Apex code anonymously')\r\n    .action(function(/* Args here */){\r\n      if (this.ui) {\r\n        program.commandExecutor.execute({\r\n          name: this._name,\r\n          body: { args: { ui: true } },\r\n          editor: this.parent.editor\r\n        });\r\n      } else {\r\n        var self = this;\r\n        util.getPayload()\r\n          .then(function(payload) {\r\n            program.commandExecutor.execute({\r\n              name: self._name,\r\n              body: payload,\r\n              editor: self.parent.editor\r\n            });\r\n          });\r\n      }\r\n    });\r\n};\n\n\n/** WEBPACK FOOTER **\n ** ../mavensmate/app/lib/commands/debug/execute-apex.js\n **/","/**\n * @file Flushes all local logs from a project\n * @author Joseph Ferraro <@joeferraro>\n */\n\n'use strict';\n\nvar Promise     = require('bluebird');\nvar inherits    = require('inherits');\nvar BaseCommand = require('../../command');\nvar path        = require('path');\nvar fs          = require('fs-extra-promise');\n\nfunction Command() {\n  Command.super_.call(this, Array.prototype.slice.call(arguments, 0));\n}\n\ninherits(Command, BaseCommand);\n\nCommand.prototype.execute = function() {\n  var self = this;\n  return new Promise(function(resolve, reject) {\n    var project = self.getProject();\n    var debugDirectory = path.join( project.path, 'debug' );\n    if (fs.existsSync( debugDirectory )) {\n      fs.removeAsync(debugDirectory)\n        .then(function() {\n          resolve('Successfully flushed debug logs');\n        })\n        .catch(function(error) {\n          reject(error);\n        });\n    } else {\n      resolve('No debug directory detected');\n    }\n  });\n};\n\nexports.command = Command;\nexports.addSubCommand = function(program) {\n  program\n    .command('flush-logs')\n    .alias('delete-logs')\n    .description('Deletes all log files in a project')\n    .action(function(/* Args here */){\n      program.commandExecutor.execute({\n        name: this._name\n      });\n    });\n};\n\n\n/** WEBPACK FOOTER **\n ** ../mavensmate/app/lib/commands/debug/flush-logs.js\n **/","/**\n * @file Lists checkpoints for a given file\n * @author Joseph Ferraro <@joeferraro>\n */\n\n'use strict';\n\nvar Promise           = require('bluebird');\nvar inherits          = require('inherits');\nvar BaseCommand       = require('../../command');\nvar CheckpointService = require('../../services/checkpoint');\n\nfunction Command() {\n  Command.super_.call(this, Array.prototype.slice.call(arguments, 0));\n}\n\ninherits(Command, BaseCommand);\n\nCommand.prototype.execute = function() {\n  var self = this;\n  return new Promise(function(resolve, reject) {\n    var project = self.getProject();\n    var checkpointService = new CheckpointService(project);\n    checkpointService.listCheckpoints(self.payload.path)\n      .then(function(res) {\n        resolve(res);\n      })\n      .catch(function(error) {\n        reject(error);\n      })\n      .done();\n  });\n};\n\nexports.command = Command;\nexports.addSubCommand = function(program) {\n  program\n    .command('new-checkpoint [filePath]')\n    .description('List Apex checkpoints for filepath')\n    .action(function(filePath){\n      program.commandExecutor.execute({\n        name: this._name,\n        body: {\n          path: filePath\n        }\n      });\n    });\n};\n\n\n/** WEBPACK FOOTER **\n ** ../mavensmate/app/lib/commands/debug/list-checkpoints.js\n **/","/**\n * @file Create a new checkpoint on a file given a line number\n * @author Joseph Ferraro <@joeferraro>\n */\n\n'use strict';\n\nvar Promise           = require('bluebird');\nvar inherits          = require('inherits');\nvar BaseCommand       = require('../../command');\nvar CheckpointService = require('../../services/checkpoint');\n\nfunction Command() {\n  Command.super_.call(this, Array.prototype.slice.call(arguments, 0));\n}\n\ninherits(Command, BaseCommand);\n\nCommand.prototype.execute = function() {\n  var self = this;\n  return new Promise(function(resolve, reject) {\n    var project = self.getProject();\n    var checkpointService = new CheckpointService(project);\n    checkpointService.createCheckpoint(self.payload.path, self.payload.lineNumber)\n      .then(function(res) {\n        resolve(res);\n      })\n      .catch(function(error) {\n        reject(error);\n      })\n      .done();\n  });\n};\n\nexports.command = Command;\nexports.addSubCommand = function(program) {\n  program\n    .command('new-checkpoint [filePath] [lineNumber]')\n    .description('Creates Apex checkpoint')\n    .action(function(filePath, lineNumber){\n      program.commandExecutor.execute({\n        name: this._name,\n        body: {\n          path: filePath,\n          lineNumber: lineNumber\n        }\n      });\n    });\n};\n\n\n/** WEBPACK FOOTER **\n ** ../mavensmate/app/lib/commands/debug/new-checkpoint.js\n **/","/**\n * @file Deletes existing trace flags and creates new trace flags for all user ids listed in a project's config/.debug file\n * @author Joseph Ferraro <@joeferraro>\n */\n\n'use strict';\n\nvar Promise     = require('bluebird');\nvar inherits    = require('inherits');\nvar BaseCommand = require('../../command');\nvar moment      = require('moment');\n\nfunction Command() {\n  Command.super_.call(this, Array.prototype.slice.call(arguments, 0));\n}\n\ninherits(Command, BaseCommand);\n\nCommand.prototype.execute = function() {\n  var self = this;\n  return new Promise(function(resolve, reject) {\n    var project = self.getProject();\n    var sfdcClient = project.sfdcClient;\n    var projectDebugSettings = project.getDebugSettingsSync();\n    var expirationDate = moment().add(projectDebugSettings.expiration, 'minutes');\n    sfdcClient.startLogging(projectDebugSettings, expirationDate)\n      .then(function() {\n        resolve('Started logging for debug users');\n      })\n      .catch(function(error) {\n        reject(error);\n      })\n      .done();\n  });\n};\n\nexports.command = Command;\nexports.addSubCommand = function(program) {\n  program\n    .command('start-logging')\n    .description('Starts logging Apex execution for all user ids listed in your project\\'s config/.debug file')\n    .action(function(/* Args here */){\n      program.commandExecutor.execute({\n        name: this._name\n      });\n    });\n};\n\n\n/** WEBPACK FOOTER **\n ** ../mavensmate/app/lib/commands/debug/start-logging.js\n **/","/**\n * @file Deletes trace flags for all user ids in the config/.debug file created by the running user\n * @author Joseph Ferraro <@joeferraro>\n */\n\n'use strict';\n\nvar Promise     = require('bluebird');\nvar inherits    = require('inherits');\nvar BaseCommand = require('../../command');\nvar moment      = require('moment');\n\nfunction Command() {\n  Command.super_.call(this, Array.prototype.slice.call(arguments, 0));\n}\n\ninherits(Command, BaseCommand);\n\nCommand.prototype.execute = function() {\n  var self = this;\n  return new Promise(function(resolve, reject) {\n    var project = self.getProject();\n    var sfdcClient = project.sfdcClient;\n    var projectDebugSettings = project.getDebugSettingsSync();\n    sfdcClient.stopLogging(projectDebugSettings.users)\n      .then(function() {\n        resolve('Stopped logging for debug users');\n      })\n      .catch(function(error) {\n        reject(error);\n      })\n      .done();\n  });\n};\n\nexports.command = Command;\nexports.addSubCommand = function(program) {\n  program\n    .command('stop-logging')\n    .description('Stops logging Apex execution for all user ids listed in your project\\'s config/.debug file')\n    .action(function(/* Args here */){\n      program.commandExecutor.execute({\n        name: this._name\n      });\n    });\n};\n\n\n/** WEBPACK FOOTER **\n ** ../mavensmate/app/lib/commands/debug/stop-logging.js\n **/","/**\n * @file Deletes an org connection locally\n * @author Joseph Ferraro <@joeferraro>\n */\n\n'use strict';\n\nvar Promise               = require('bluebird');\nvar util                  = require('../../util');\nvar OrgConnectionService  = require('../../services/org-connection');\nvar inherits              = require('inherits');\nvar BaseCommand           = require('../../command');\n\nfunction Command() {\n  Command.super_.call(this, Array.prototype.slice.call(arguments, 0));\n}\n\ninherits(Command, BaseCommand);\n\nCommand.prototype.execute = function() {\n  var self = this;\n  return new Promise(function(resolve, reject) {\n    var project = self.getProject();\n    var orgConnectionService = new OrgConnectionService(project);\n    orgConnectionService.remove(self.payload.id)\n      .then(function() {\n        resolve('Successfully deleted org connection');\n      })\n      .catch(function(error) {\n        reject(error);\n      })\n      .done();\n  });\n};\n\nexports.command = Command;\nexports.addSubCommand = function(program) {\n  program\n    .command('delete-connection [connectionId]')\n    .description('Removes a new deployment connection')\n    .action(function(connectionId){\n      program.commandExecutor.execute({\n        name: this._name,\n        body: { id: connectionId }\n      });\n    });\n};\n\n\n/** WEBPACK FOOTER **\n ** ../mavensmate/app/lib/commands/deploy/delete-connection.js\n **/","/**\n * @file Deploys to one or more remote targets\n * @author Joseph Ferraro <@joeferraro>\n */\n\n'use strict';\n\nvar Promise         = require('bluebird');\nvar util            = require('../../util');\nvar Deploy          = require('../../services/deploy');\nvar inherits        = require('inherits');\nvar BaseCommand     = require('../../command');\nvar logger          = require('winston');\nvar EditorService   = require('../../services/editor');\n\nfunction Command() {\n  Command.super_.call(this, Array.prototype.slice.call(arguments, 0));\n}\n\ninherits(Command, BaseCommand);\n\nCommand.prototype.execute = function() {\n  var self = this;\n  return new Promise(function(resolve, reject) {\n    if (self.isUICommand()) {\n\n      self.editorService.launchUI('deploy/new', { pid: self.getProject().settings.id })\n        .then(function() {\n          resolve('Success');\n        })\n        .catch(function(error) {\n          reject(error);\n        });\n    } else {\n      var deployPayload = self.payload;\n      deployPayload.project = self.getProject();\n      logger.debug('initiating deploy: ', deployPayload.targets, deployPayload.package);\n      var deploy = new Deploy(deployPayload);\n\n      var deployOptions = deployPayload.deployOptions || undefined;\n\n      logger.debug('deploying: ');\n      logger.debug('deployOptions: ', deployOptions);\n\n      deploy.executeRemote(deployOptions)\n        .then(function(result) {\n          if (self.payload.ui) {\n            resolve(deploy.getResultHtml(deployPayload.targets, deployPayload.deployOptions, result));\n          } else {\n            resolve(result);\n          }\n        })\n        .catch(function(error) {\n          reject(error);\n        })\n        .done();\n    }\n  });\n};\n\nexports.command = Command;\nexports.addSubCommand = function(program) {\n  program\n    .command('deploy')\n    .option('--ui', 'Launches the default UI for the selected command.')\n    .description('Deploys metadata to one or more remote Salesforce.com orgs')\n    .action(function(/* Args here */){\n      if (this.ui) {\n        program.commandExecutor.execute({\n          name: this._name,\n          body: { args: { ui: true } },\n          editor: this.parent.editor\n        });\n      } else {\n        var self = this;\n        util.getPayload()\n          .then(function(payload) {\n            program.commandExecutor.execute({\n              name: self._name,\n              body: payload,\n              editor: self.parent.editor\n            });\n          });\n      }\n    });\n};\n\n\n/** WEBPACK FOOTER **\n ** ../mavensmate/app/lib/commands/deploy/deploy.js\n **/","/**\n * @file Lists org connections for a project\n * @author Joseph Ferraro <@joeferraro>\n */\n\n'use strict';\n\nvar Promise               = require('bluebird');\nvar util                  = require('../../util');\nvar OrgConnectionService  = require('../../services/org-connection');\nvar inherits              = require('inherits');\nvar BaseCommand           = require('../../command');\n\nfunction Command() {\n  Command.super_.call(this, Array.prototype.slice.call(arguments, 0));\n}\n\ninherits(Command, BaseCommand);\n\nCommand.prototype.execute = function() {\n  var self = this;\n  return new Promise(function(resolve, reject) {\n    var project = self.getProject();\n    var orgConnectionService = new OrgConnectionService(project);\n    orgConnectionService.listAll()\n      .then(function(result) {\n        resolve(result);\n      })\n      .catch(function(error) {\n        reject(error);\n      })\n      .done();\n  });\n};\n\nexports.command = Command;\nexports.addSubCommand = function(program) {\n  program\n    .command('get-connections')\n    .alias('list-connections')\n    .description('Retrieves a list of deployment connections')\n    .action(function(/* Args here */){\n      program.commandExecutor.execute({\n        name: this._name\n      });\n    });\n};\n\n\n/** WEBPACK FOOTER **\n ** ../mavensmate/app/lib/commands/deploy/get-connections.js\n **/","/**\n * @file Creates a new org connection for the project\n * @author Joseph Ferraro <@joeferraro>\n */\n\n'use strict';\n\nvar Promise               = require('bluebird');\nvar util                  = require('../../util');\nvar OrgConnectionService  = require('../../services/org-connection');\nvar inherits              = require('inherits');\nvar BaseCommand           = require('../../command');\n\nfunction Command() {\n  Command.super_.call(this, Array.prototype.slice.call(arguments, 0));\n}\n\ninherits(Command, BaseCommand);\n\nCommand.prototype.execute = function() {\n  var self = this;\n  return new Promise(function(resolve, reject) {\n    var project = self.getProject();\n    var orgConnectionService = new OrgConnectionService(project);\n    orgConnectionService.add(self.payload)\n      .then(function() {\n        resolve('Org connection successfully created');\n      })\n      .catch(function(error) {\n        reject(error);\n      })\n      .done();\n  });\n};\n\nexports.command = Command;\nexports.addSubCommand = function(program) {\n  program\n    .command('new-connection [username] [password] [orgType]')\n    .description('Adds a new deployment connection')\n    .action(function(username, password, orgType){\n      program.commandExecutor.execute({\n        name: this._name,\n        body: {\n          username: username,\n          password: password,\n          orgType: orgType\n        }\n      });\n    });\n};\n\n\n/** WEBPACK FOOTER **\n ** ../mavensmate/app/lib/commands/deploy/new-connection.js\n **/","/**\n * @file Updates the creds for an existing org connection\n * @author Joseph Ferraro <@joeferraro>\n */\n\n'use strict';\n\nvar Promise               = require('bluebird');\nvar util                  = require('../../util');\nvar OrgConnectionService  = require('../../services/org-connection');\nvar inherits              = require('inherits');\nvar BaseCommand           = require('../../command');\n\nfunction Command() {\n  Command.super_.call(this, Array.prototype.slice.call(arguments, 0));\n}\n\ninherits(Command, BaseCommand);\n\nCommand.prototype.execute = function() {\n  var self = this;\n  return new Promise(function(resolve, reject) {\n    var project = self.getProject();\n    var orgConnectionService = new OrgConnectionService(project);\n    orgConnectionService.update(self.payload)\n      .then(function(result) {\n        resolve(result);\n      })\n      .catch(function(error) {\n        reject(error);\n      })\n      .done();\n  });\n};\n\nexports.command = Command;\nexports.addSubCommand = function(program) {\n  program\n    .command('update-connection [connectiondId] [username] [password] [orgType]')\n    .description('Updates a new deployment connection')\n    .action(function(connectiondId, username, password, orgType){\n      program.commandExecutor.execute({\n        name: this._name,\n        body: {\n          id: connectiondId,\n          username: username,\n          password: password,\n          orgType: orgType\n        }\n      });\n    });\n};\n\n\n/** WEBPACK FOOTER **\n ** ../mavensmate/app/lib/commands/deploy/update-connection.js\n **/","/**\n * @file Creates a new lightning app/opens the new lightning app ui\n * @author Joseph Ferraro <@joeferraro>\n */\n\n'use strict';\n\nvar Promise           = require('bluebird');\nvar _                 = require('lodash');\nvar util              = require('../../util');\nvar inherits          = require('inherits');\nvar BaseCommand       = require('../../command');\nvar EditorService     = require('../../services/editor');\nvar LightningService  = require('../../services/lightning');\nvar RefreshDelegate   = require('../../refresh');\nvar path              = require('path');\nvar MavensMateFile    = require('../../file').MavensMateFile;\n\nfunction Command() {\n  Command.super_.call(this, Array.prototype.slice.call(arguments, 0));\n}\n\ninherits(Command, BaseCommand);\n\nCommand.prototype.execute = function() {\n  var self = this;\n  return new Promise(function(resolve, reject) {\n    if (self.isUICommand()) {\n\n      self.editorService.launchUI('lightning/app/new', { pid: self.getProject().settings.id })\n        .then(function() {\n          resolve('Success');\n        })\n        .catch(function(error) {\n          reject(error);\n        });\n    } else {\n      var project = self.getProject();\n      var lightningService = new LightningService(project);\n      var apiName = self.payload.apiName;\n      var newAuraFile;\n      var newBundleId;\n      return lightningService.createBundle(apiName, self.payload.description)\n        .then(function(result) {\n          newBundleId = result.id;\n          var createPromises = [];\n          createPromises.push(lightningService.createApplication(newBundleId));\n          if (self.payload.createController) {\n            createPromises.push(lightningService.createController(newBundleId));\n          }\n          if (self.payload.createHelper) {\n            createPromises.push(lightningService.createHelper(newBundleId));\n          }\n          if (self.payload.createStyle) {\n            createPromises.push(lightningService.createStyle(newBundleId));\n          }\n          if (self.payload.createDocumentation) {\n            createPromises.push(lightningService.createDocumentation(newBundleId));\n          }\n          if (self.payload.createRenderer) {\n            createPromises.push(lightningService.createRenderer(newBundleId));\n          }\n          return Promise.all(createPromises);\n        })\n        .then(function(result) {\n          var failures = _.where(result, { 'success': false });\n          if (failures.length > 0) {\n            lightningService.deleteBundle(newBundleId)\n              .then(function() {\n                throw new Error(JSON.stringify(failures));\n              });\n          } else {\n            newAuraFile = new MavensMateFile({ project: project, path: path.join(project.path, 'src', 'aura', apiName) });\n            newAuraFile.writeToDiskSync();\n            project.packageXml.subscribe(newAuraFile);\n            return project.packageXml.writeFileSync();\n          }\n        })\n        .then(function() {\n          var refreshDelegate = new RefreshDelegate(project, [ newAuraFile.path ]);\n          return refreshDelegate.execute();\n        })\n        .then(function() {\n          return project.indexLightning();\n        })\n        .then(function() {\n          resolve('Lightning app created successfully');\n        })\n        .catch(function(error) {\n          reject(error);\n        })\n        .done();\n    }\n  });\n};\n\nexports.command = Command;\nexports.addSubCommand = function(program) {\n  program\n    .command('new-lightning-app')\n    .option('--ui', 'Launches the default UI for the selected command.')\n    .description('Creates new lightning application')\n    .action(function() {\n      if (this.ui) {\n        program.commandExecutor.execute({\n          name: this._name,\n          body: { args: { ui: true } },\n          editor: this.parent.editor\n        });\n      } else {\n        var self = this;\n        util.getPayload()\n          .then(function(payload) {\n            program.commandExecutor.execute({\n              name: self._name,\n              body: payload,\n              editor: self.parent.editor\n            });\n          });\n      }\n    });\n};\n\n\n/** WEBPACK FOOTER **\n ** ../mavensmate/app/lib/commands/lightning/new-lightning-app.js\n **/","/**\n * @file Creates a new lightning component/opens the new lightning component ui\n * @author Joseph Ferraro <@joeferraro>\n */\n\n'use strict';\n\nvar Promise           = require('bluebird');\nvar _                 = require('lodash');\nvar util              = require('../../util');\nvar inherits          = require('inherits');\nvar BaseCommand       = require('../../command');\nvar EditorService     = require('../../services/editor');\nvar LightningService  = require('../../services/lightning');\nvar RefreshDelegate   = require('../../refresh');\nvar path              = require('path');\nvar MavensMateFile    = require('../../file').MavensMateFile;\n\nfunction Command() {\n  Command.super_.call(this, Array.prototype.slice.call(arguments, 0));\n}\n\ninherits(Command, BaseCommand);\n\nCommand.prototype.execute = function() {\n  var self = this;\n  return new Promise(function(resolve, reject) {\n    if (self.isUICommand()) {\n      self.editorService.launchUI('lightning/component/new', { pid: self.getProject().settings.id })\n        .then(function() {\n          resolve('Success');\n        })\n        .catch(function(error) {\n          reject(error);\n        });\n    } else {\n      var project = self.getProject();\n      var lightningService = new LightningService(project);\n      var apiName = self.payload.apiName;\n      var newAuraFile;\n      var newBundleId;\n      return lightningService.createBundle(apiName, self.payload.description)\n        .then(function(result) {\n          newBundleId = result.id;\n          var createPromises = [];\n          createPromises.push(lightningService.createComponent(newBundleId));\n          if (self.payload.createController) {\n            createPromises.push(lightningService.createController(newBundleId));\n          }\n          if (self.payload.createHelper) {\n            createPromises.push(lightningService.createHelper(newBundleId));\n          }\n          if (self.payload.createStyle) {\n            createPromises.push(lightningService.createStyle(newBundleId));\n          }\n          if (self.payload.createDocumentation) {\n            createPromises.push(lightningService.createDocumentation(newBundleId));\n          }\n          if (self.payload.createRenderer) {\n            createPromises.push(lightningService.createRenderer(newBundleId));\n          }\n          return Promise.all(createPromises);\n        })\n        .then(function(result) {\n          var failures = _.where(result, { 'success': false });\n          if (failures.length > 0) {\n            lightningService.deleteBundle(newBundleId)\n              .then(function() {\n                throw new Error(JSON.stringify(failures));\n              });\n          } else {\n            newAuraFile = new MavensMateFile({ project: project, path: path.join(project.path, 'src', 'aura', apiName) });\n            newAuraFile.writeToDiskSync();\n            project.packageXml.subscribe(newAuraFile);\n            return project.packageXml.writeFileSync();\n          }\n        })\n        .then(function() {\n          var refreshDelegate = new RefreshDelegate(project, [ newAuraFile.path ]);\n          return refreshDelegate.execute();\n        })\n        .then(function() {\n          return project.indexLightning();\n        })\n        .then(function() {\n          resolve('Lightning component created successfully');\n        })\n        .catch(function(error) {\n          reject(error);\n        })\n        .done();\n    }\n  });\n};\n\nexports.command = Command;\nexports.addSubCommand = function(program) {\n  program\n    .command('new-lightning-component')\n    .option('--ui', 'Launches the default UI for the selected command.')\n    .description('Creates new lightning component')\n    .action(function() {\n      if (this.ui) {\n        program.commandExecutor.execute({\n          name: this._name,\n          body: { args: { ui: true } },\n          editor: this.parent.editor\n        });\n      } else {\n        var self = this;\n        util.getPayload()\n          .then(function(payload) {\n            program.commandExecutor.execute({\n              name: self._name,\n              body: payload,\n              editor: self.parent.editor\n            });\n          });\n      }\n    });\n};\n\n\n/** WEBPACK FOOTER **\n ** ../mavensmate/app/lib/commands/lightning/new-lightning-component.js\n **/","/**\n * @file Creates a new lightning event/opens the new lightning event ui\n * @author Joseph Ferraro <@joeferraro>\n */\n\n\n'use strict';\n\nvar Promise           = require('bluebird');\nvar _                 = require('lodash');\nvar util              = require('../../util');\nvar inherits          = require('inherits');\nvar BaseCommand       = require('../../command');\nvar EditorService     = require('../../services/editor');\nvar LightningService  = require('../../services/lightning');\nvar MavensMateFile    = require('../../file').MavensMateFile;\nvar path              = require('path');\nvar RefreshDelegate   = require('../../refresh');\n\nfunction Command() {\n  Command.super_.call(this, Array.prototype.slice.call(arguments, 0));\n}\n\ninherits(Command, BaseCommand);\n\nCommand.prototype.execute = function() {\n  var self = this;\n  return new Promise(function(resolve, reject) {\n    if (self.isUICommand()) {\n\n      self.editorService.launchUI('lightning/event/new', { pid: self.getProject().settings.id })\n        .then(function() {\n          resolve('Success');\n        })\n        .catch(function(error) {\n          reject(error);\n        });\n    } else {\n      var project = self.getProject();\n      var lightningService = new LightningService(project);\n      var apiName = self.payload.apiName;\n      var newAuraFile;\n      var newBundleId;\n      return lightningService.createBundle(apiName, self.payload.description)\n        .then(function(result) {\n          newBundleId = result.id;\n          var createPromises = [];\n          createPromises.push(lightningService.createEvent(newBundleId));\n          return Promise.all(createPromises);\n        })\n        .then(function(result) {\n          var failures = _.where(result, { 'success': false });\n          if (failures.length > 0) {\n            lightningService.deleteBundle(newBundleId)\n              .then(function() {\n                throw new Error(JSON.stringify(failures));\n              });\n          } else {\n            newAuraFile = new MavensMateFile({ project: project, path: path.join(project.path, 'src', 'aura', apiName) });\n            newAuraFile.writeToDiskSync();\n            project.packageXml.subscribe(newAuraFile);\n            return project.packageXml.writeFileSync();\n          }\n        })\n        .then(function() {\n          var refreshDelegate = new RefreshDelegate(project, [ newAuraFile.path ]);\n          return refreshDelegate.execute();\n        })\n        .then(function() {\n          return project.indexLightning();\n        })\n        .then(function() {\n          resolve('Lightning event created successfully');\n        })\n        .catch(function(error) {\n          reject(error);\n        })\n        .done();\n    }\n  });\n};\n\nexports.command = Command;\nexports.addSubCommand = function(program) {\n  program\n    .command('new-lightning-event')\n    .option('--ui', 'Launches the default UI for the selected command.')\n    .description('Creates new lightning event')\n    .action(function() {\n      if (this.ui) {\n        program.commandExecutor.execute({\n          name: this._name,\n          body: { args: { ui: true } },\n          editor: this.parent.editor\n        });\n      } else {\n        var self = this;\n        util.getPayload()\n          .then(function(payload) {\n            program.commandExecutor.execute({\n              name: self._name,\n              body: payload,\n              editor: self.parent.editor\n            });\n          });\n      }\n    });\n};\n\n\n/** WEBPACK FOOTER **\n ** ../mavensmate/app/lib/commands/lightning/new-lightning-event.js\n **/","/**\n * @file Creates a new lightning interface/opens the new lightning interface ui\n * @author Joseph Ferraro <@joeferraro>\n */\n\n'use strict';\n\nvar Promise           = require('bluebird');\nvar _                 = require('lodash');\nvar util              = require('../../util');\nvar inherits          = require('inherits');\nvar BaseCommand       = require('../../command');\nvar EditorService     = require('../../services/editor');\nvar LightningService  = require('../../services/lightning');\nvar MavensMateFile    = require('../../file').MavensMateFile;\nvar path              = require('path');\nvar RefreshDelegate   = require('../../refresh');\n\nfunction Command() {\n  Command.super_.call(this, Array.prototype.slice.call(arguments, 0));\n}\n\ninherits(Command, BaseCommand);\n\nCommand.prototype.execute = function() {\n  var self = this;\n  return new Promise(function(resolve, reject) {\n    if (self.isUICommand()) {\n\n      self.editorService.launchUI('lightning/interface/new', { pid: self.getProject().settings.id })\n        .then(function() {\n          resolve('Success');\n        })\n        .catch(function(error) {\n          reject(error);\n        });\n    } else {\n      var project = self.getProject();\n      var lightningService = new LightningService(project);\n      var apiName = self.payload.apiName;\n      var newAuraFile;\n      var newBundleId;\n      return lightningService.createBundle(apiName, self.payload.description)\n        .then(function(result) {\n          newBundleId = result.id;\n          var createPromises = [];\n          createPromises.push(lightningService.createInterface(newBundleId));\n          return Promise.all(createPromises);\n        })\n        .then(function(result) {\n          var failures = _.where(result, { 'success': false });\n          if (failures.length > 0) {\n            lightningService.deleteBundle(newBundleId)\n              .then(function() {\n                throw new Error(JSON.stringify(failures));\n              });\n          } else {\n            newAuraFile = new MavensMateFile({ project: project, path: path.join(project.path, 'src', 'aura', apiName) });\n            newAuraFile.writeToDiskSync();\n            project.packageXml.subscribe(newAuraFile);\n            return project.packageXml.writeFileSync();\n          }\n        })\n        .then(function() {\n          var refreshDelegate = new RefreshDelegate(project, [ newAuraFile.path ]);\n          return refreshDelegate.execute();\n        })\n        .then(function() {\n          return project.indexLightning();\n        })\n        .then(function() {\n          resolve('Lightning interface created successfully');\n        })\n        .catch(function(error) {\n          reject(error);\n        })\n        .done();\n    }\n  });\n};\n\nexports.command = Command;\nexports.addSubCommand = function(program) {\n  program\n    .command('new-lightning-interface')\n    .option('--ui', 'Launches the default UI for the selected command.')\n    .description('Creates new lightning interface')\n    .action(function() {\n      if (this.ui) {\n        program.commandExecutor.execute({\n          name: this._name,\n          body: { args: { ui: true } },\n          editor: this.parent.editor\n        });\n      } else {\n        var self = this;\n        util.getPayload()\n          .then(function(payload) {\n            program.commandExecutor.execute({\n              name: self._name,\n              body: payload,\n              editor: self.parent.editor\n            });\n          });\n      }\n    });\n};\n\n\n/** WEBPACK FOOTER **\n ** ../mavensmate/app/lib/commands/lightning/new-lightning-interface.js\n **/","/**\r\n * @file Compiles metadata\r\n * @author Joseph Ferraro <@joeferraro>\r\n */\r\n\r\n'use strict';\r\n\r\nvar Promise         = require('bluebird');\r\nvar util            = require('../../util');\r\nvar inherits        = require('inherits');\r\nvar BaseCommand     = require('../../command');\r\nvar CompileDelegate = require('../../services/compile');\r\n\r\nfunction Command() {\r\n  Command.super_.call(this, Array.prototype.slice.call(arguments, 0));\r\n}\r\n\r\ninherits(Command, BaseCommand);\r\n\r\nCommand.prototype.execute = function() {\r\n  var self = this;\r\n  return new Promise(function(resolve, reject) {\r\n    var project = self.getProject();\r\n    var compileDelegate = new CompileDelegate(project, self.payload.paths, self.payload.force);\r\n    compileDelegate.execute()\r\n      .then(function(result) {\r\n        resolve(result);\r\n      })\r\n      .catch(function(error) {\r\n        reject(error);\r\n      })\r\n      .done();\r\n  });\r\n};\r\n\r\nexports.command = Command;\r\nexports.addSubCommand = function(program) {\r\n  program\r\n    .command('compile-metadata [path]')\r\n    .alias('compile')\r\n    .description('Compiles metadata')\r\n    .action(function(path){\r\n      if (path) {\r\n        program.commandExecutor.execute({\r\n          name: this._name,\r\n          body: {\r\n            paths : util.getAbsolutePaths( [ path ] )\r\n          }\r\n        });\r\n      } else {\r\n        var self = this;\r\n        util.getPayload()\r\n          .then(function(payload) {\r\n            program.commandExecutor.execute({\r\n              name: self._name,\r\n              body: payload,\r\n              editor: self.parent.editor\r\n            });\r\n          });\r\n      }\r\n    });\r\n};\n\n\n/** WEBPACK FOOTER **\n ** ../mavensmate/app/lib/commands/metadata/compile-metadata.js\n **/","/**\r\n * @file Deletes metadata\r\n * @author Joseph Ferraro <@joeferraro>\r\n */\r\n\r\n'use strict';\r\n\r\nvar Promise         = require('bluebird');\r\nvar util            = require('../../util');\r\nvar inherits        = require('inherits');\r\nvar BaseCommand     = require('../../command');\r\nvar DeleteDelegate  = require('../../services/delete');\r\nvar mavensMateFile  = require('../../file');\r\n\r\nfunction Command() {\r\n  Command.super_.call(this, Array.prototype.slice.call(arguments, 0));\r\n}\r\n\r\ninherits(Command, BaseCommand);\r\n\r\nCommand.prototype.execute = function() {\r\n  var self = this;\r\n  return new Promise(function(resolve, reject) {\r\n    var project = self.getProject();\r\n    var payload = self.payload;\r\n    payload.project = project;\r\n    var deleteDelegate = new DeleteDelegate(project, payload.paths);\r\n    var deleteResult;\r\n    deleteDelegate.execute()\r\n      .then(function(result) {\r\n        deleteResult = result;\r\n        if (result.success) {\r\n          var files = mavensMateFile.createFileInstances(payload.paths);\r\n          project.packageXml.unsubscribe(files);\r\n          return project.packageXml.writeFile();\r\n        } else {\r\n          return new Promise(function(res) {\r\n            res();\r\n          });\r\n        }\r\n      })\r\n      .then(function() {\r\n        resolve(deleteResult);\r\n      })\r\n      .catch(function(error) {\r\n        reject(error);\r\n      })\r\n      .done();\r\n  });\r\n};\r\n\r\nexports.command = Command;\r\nexports.addSubCommand = function(program) {\r\n  program\r\n    .command('delete-metadata [path]')\r\n    .alias('delete')\r\n    .description('Deletes metadata from the salesforce.com server')\r\n    .action(function(path){\r\n      if (path) {\r\n        program.commandExecutor.execute({\r\n          name: this._name,\r\n          body: {\r\n            paths: util.getAbsolutePaths( [ path ] )\r\n          }\r\n        });\r\n      } else {\r\n        var self = this;\r\n        util.getPayload()\r\n          .then(function(payload) {\r\n            program.commandExecutor.execute({\r\n              name: self._name,\r\n              body: payload,\r\n              editor: self.parent.editor\r\n            });\r\n          });\r\n      }\r\n    });\r\n};\n\n\n/** WEBPACK FOOTER **\n ** ../mavensmate/app/lib/commands/metadata/delete-metadata.js\n **/","/**\r\n * @file Creates new metadata\r\n * @author Joseph Ferraro <@joeferraro>\r\n */\r\n\r\n'use strict';\r\n\r\nvar Promise         = require('bluebird');\r\nvar util            = require('../../util');\r\nvar mavensMateFile  = require('../../file');\r\nvar Deploy          = require('../../services/deploy');\r\nvar inherits        = require('inherits');\r\nvar BaseCommand     = require('../../command');\r\nvar EditorService   = require('../../services/editor');\r\nvar path            = require('path');\r\nvar Package         = require('../../package').Package;\r\nvar temp            = require('temp');\r\nvar fs              = require('fs-extra');\r\nvar logger          = require('winston');\r\n\r\nfunction Command() {\r\n  Command.super_.call(this, Array.prototype.slice.call(arguments, 0));\r\n}\r\n\r\ninherits(Command, BaseCommand);\r\n\r\nCommand.prototype.execute = function() {\r\n  var self = this;\r\n  return new Promise(function(resolve, reject) {\r\n    if (self.isUICommand()) {\r\n      self.editorService.launchUI('metadata/'+self.payload.args.type+'/new', { pid: self.getProject().settings.id, type: self.payload.args.type })\r\n        .then(function() {\r\n          resolve('Success');\r\n        })\r\n        .catch(function(err) {\r\n          reject({\r\n            message: 'Could not open new metadata UI',\r\n            error: err\r\n          });\r\n        });\r\n    } else {\r\n      var retrievePackage;\r\n      var project = self.getProject();\r\n      var newFile = new mavensMateFile.MavensMateFile({ project: project });\r\n      newFile.setTypeByXmlName(self.payload.metadataTypeXmlName);\r\n      newFile.template = self.payload.template;\r\n      newFile.templateValues = self.payload.templateValues;\r\n      newFile.apexTriggerObjectName = self.payload.templateValues.object_name || self.payload.templateValues.objectName;\r\n      newFile.name = self.payload.templateValues.api_name || self.payload.templateValues.apiName;\r\n      if (!newFile.name) {\r\n        return reject(new Error('You must provide an API name'));\r\n      }\r\n      newFile.setAbstractPath();\r\n      var tempRetrievePath = temp.mkdirSync({ prefix: 'mm_' });\r\n      var unpackagedRetrievePath = path.join(tempRetrievePath, 'unpackaged');\r\n      fs.mkdirsSync(unpackagedRetrievePath);\r\n      project.sfdcClient.createApexMetadata(newFile)\r\n        .then(function(createResult) {\r\n          retrievePackage = new Package({ subscription: mavensMateFile.createPackageSubscription([newFile]) });\r\n          return retrievePackage.init();\r\n        })\r\n        .then(function() {\r\n          return project.sfdcClient.retrieveUnpackaged(retrievePackage.subscription, true, tempRetrievePath);\r\n        })\r\n        .then(function(retrieveResult) {\r\n          return project.updateLocalStore(retrieveResult.fileProperties);\r\n        })\r\n        .then(function() {\r\n          return project.replaceLocalFiles(unpackagedRetrievePath);\r\n        })\r\n        .then(function() {\r\n          project.packageXml.subscribe(newFile);\r\n          return project.packageXml.writeFile();\r\n        })\r\n        .then(function() {\r\n          logger.debug('attempting to open metadata ...');\r\n          var newMetadataPath = path.join(project.path, 'src', newFile.type.directoryName, [newFile.name, newFile.type.suffix].join('.'));\r\n          logger.debug(newMetadataPath);\r\n          logger.debug(self.editorService.editor);\r\n          if (self.editorService && self.editorService.editor) {\r\n            return self.editorService.open(newMetadataPath);\r\n          } else {\r\n            return resolve('New metadata successfully created');\r\n          }\r\n        })\r\n        .then(function() {\r\n          resolve('New metadata successfully created');\r\n        })\r\n        .catch(function(error) {\r\n          reject(error);\r\n        })\r\n        .done();\r\n    }\r\n  });\r\n};\r\n\r\nexports.command = Command;\r\nexports.addSubCommand = function(program) {\r\n  program\r\n    .command('new-metadata')\r\n    .option('--ui', 'Launches the default UI for the selected command.')\r\n    .option('-t, --type [type]', 'Type of metadata to create (ApexClass, ApexPage, ApexTrigger, ApexComponent, etc.')\r\n    .description('Creates new metadata based on supplied template and params')\r\n    .action(function() {\r\n      if (this.ui) {\r\n        program.commandExecutor.execute({\r\n          name: this._name,\r\n          body: { args: { ui: true, type: this.type } }\r\n        });\r\n      } else {\r\n        var self = this;\r\n        util.getPayload()\r\n          .then(function(payload) {\r\n            program.commandExecutor.execute({\r\n              name: self._name,\r\n              body: payload,\r\n              editor: self.parent.editor\r\n            });\r\n          });\r\n      }\r\n    });\r\n};\n\n\n/** WEBPACK FOOTER **\n ** ../mavensmate/app/lib/commands/metadata/new-metadata.js\n **/","/**\r\n * @file Opens existing metadata in the Salesforce UI\r\n * @author Joseph Ferraro <@joeferraro>\r\n */\r\n\r\n'use strict';\r\n\r\nvar Promise             = require('bluebird');\r\nvar util                = require('../../util');\r\nvar inherits            = require('inherits');\r\nvar BaseCommand         = require('../../command');\r\nvar _                   = require('lodash');\r\nvar EditorService       = require('../../services/editor');\r\nvar MavensMateFile      = require('../../file').MavensMateFile;\r\nvar mavensMateFileTypes = require('../../file').types;\r\nvar logger              = require('winston');\r\n\r\nfunction Command() {\r\n  Command.super_.call(this, Array.prototype.slice.call(arguments, 0));\r\n}\r\n\r\ninherits(Command, BaseCommand);\r\n\r\nCommand.prototype.execute = function() {\r\n  var self = this;\r\n  return new Promise(function(resolve, reject) {\r\n    var paths = self.payload.paths;\r\n    var project = self.getProject();\r\n\r\n    var frontdoorUrl = project.sfdcClient.getInstanceUrl() + '/secur/frontdoor.jsp?sid=' + project.sfdcClient.getAccessToken() + '&retURL=';\r\n    var openUrlPromises = [];\r\n    var urls = {};\r\n    _.each(paths, function(p) {\r\n      var mmFile = new MavensMateFile({ project: project, path: p });\r\n      var retUrl = '';\r\n      if (mmFile.type.xmlName === 'ApexPage' && self.payload.preview) {\r\n        retUrl = '/apex/' + mmFile.name;\r\n      } else if (mmFile.isLightningType && self.payload.preview) {\r\n        var bundleName;\r\n        if (mmFile.classification === mavensMateFileTypes.LIGHTNING_BUNDLE_ITEM) {\r\n          bundleName = mmFile.folderBaseName;\r\n        } else {\r\n          bundleName = mmFile.name;\r\n        }\r\n        // retUrl = project.sfdcClient.getInstanceUrl() + '/' + project.sfdcClient.getNamespace() + '/' + bundleName + '.app'; // TODO: non app lightning will not work\r\n        retUrl = '/' + project.sfdcClient.getNamespace() + '/' + bundleName + '.app'; // TODO: non app lightning will not work\r\n      } else {\r\n        if (mmFile.type.xmlName === 'CustomObject') {\r\n          retUrl = '/p/setup/layout/LayoutFieldList?type=' + mmFile.name + '%23CustomFieldRelatedList_target';\r\n        } else {\r\n          retUrl = '/' + mmFile.id;\r\n        }\r\n      }\r\n      logger.debug('url generated : '+frontdoorUrl+retUrl);\r\n      if (self.payload.callThrough) {\r\n        openUrlPromises.push( self.editorService.openUrl(frontdoorUrl+retUrl) );\r\n      } else {\r\n        urls[mmFile.basename] = frontdoorUrl+retUrl;\r\n      }\r\n    });\r\n\r\n    if (self.payload.callThrough) {\r\n      Promise.all(openUrlPromises)\r\n        .then(function() {\r\n          resolve('Success');\r\n        })\r\n        .catch(function(error) {\r\n          reject(error);\r\n        });\r\n    } else {\r\n      resolve(urls);\r\n    }\r\n  });\r\n};\r\n\r\nexports.command = Command;\r\nexports.addSubCommand = function(program) {\r\n  program\r\n    .command('open-metadata [path]')\r\n    .description('Opens metadata in the browser')\r\n    .action(function(path){\r\n      if (path) {\r\n        program.commandExecutor.execute({\r\n          name: this._name,\r\n          body: {\r\n            paths : util.getAbsolutePaths( [ path ] )\r\n          }\r\n        });\r\n      } else {\r\n        var self = this;\r\n        util.getPayload()\r\n          .then(function(payload) {\r\n            program.commandExecutor.execute({\r\n              name: self._name,\r\n              body: payload,\r\n              editor: self.parent.editor\r\n            });\r\n          });\r\n      }\r\n    });\r\n};\n\n\n/** WEBPACK FOOTER **\n ** ../mavensmate/app/lib/commands/metadata/open-metadata.js\n **/","/**\r\n * @file Refreshes metadata from the server\r\n * @author Joseph Ferraro <@joeferraro>\r\n */\r\n\r\n'use strict';\r\n\r\nvar Promise               = require('bluebird');\r\nvar path                  = require('path');\r\nvar util                  = require('../../util');\r\nvar inherits              = require('inherits');\r\nvar BaseCommand           = require('../../command');\r\nvar RefreshDelegate       = require('../../refresh');\r\nvar EditorService         = require('../../services/editor');\r\nvar logger                = require('winston');\r\n\r\nfunction Command() {\r\n  Command.super_.call(this, Array.prototype.slice.call(arguments, 0));\r\n}\r\n\r\ninherits(Command, BaseCommand);\r\n\r\nCommand.prototype.execute = function() {\r\n  var self = this;\r\n  return new Promise(function(resolve, reject) {\r\n    var project = self.getProject();\r\n    var paths = self.payload.paths;\r\n    var refreshPromise;\r\n    if (paths.length === 1 && (paths[0] === project.path || paths[0] === path.join(project.path, 'src'))) {\r\n      logger.debug('refreshing project from server ...');\r\n      refreshPromise = project.refreshFromServer();\r\n    } else {\r\n      logger.debug('refreshing paths from server ...');\r\n      var refreshDelegate = new RefreshDelegate(project, paths);\r\n      refreshPromise = refreshDelegate.execute();\r\n    }\r\n    refreshPromise\r\n      .then(function(result) {\r\n        logger.debug('refresh command result: ');\r\n        logger.debug(result);\r\n        if (self.editorService && self.editorService.editor === 'sublime') {\r\n          self.editorService.runCommand('refresh_folder_list')\r\n            .then(function() {\r\n              resolve();\r\n            })\r\n            .catch(function(err) {\r\n              logger.error(err);\r\n              resolve();\r\n            });\r\n        } else {\r\n          return Promise.resolve();\r\n        }\r\n      })\r\n      .then(function() {\r\n        resolve('Metadata successfully refreshed');\r\n      })\r\n      .catch(function(error) {\r\n        reject(error);\r\n      })\r\n      .done();\r\n  });\r\n};\r\n\r\nexports.command = Command;\r\nexports.addSubCommand = function(program) {\r\n  program\r\n    .command('refresh-metadata [path]')\r\n    .alias('refresh')\r\n    .description('Refreshes metadata from the salesforce.com server')\r\n    .action(function(path){\r\n      if (path) {\r\n        program.commandExecutor.execute({\r\n          name: this._name,\r\n          body: {\r\n            paths : util.getAbsolutePaths( [ path ] )\r\n          }\r\n        });\r\n      } else {\r\n        var self = this;\r\n        util.getPayload()\r\n          .then(function(payload) {\r\n            program.commandExecutor.execute({\r\n              name: self._name,\r\n              body: payload,\r\n              editor: self.parent.editor\r\n            });\r\n          });\r\n      }\r\n    });\r\n};\n\n\n/** WEBPACK FOOTER **\n ** ../mavensmate/app/lib/commands/metadata/refresh-metadata.js\n **/","/**\n * @file Syncs a local piece of Apex/VF/Lightning metadata with the server\n * @author Joseph Ferraro <@joeferraro>\n */\n\n'use strict';\n\nvar Promise         = require('bluebird');\nvar util            = require('../../util');\nvar inherits        = require('inherits');\nvar BaseCommand     = require('../../command');\nvar SyncDelegate    = require('../../sync');\n\nfunction Command() {\n  Command.super_.call(this, Array.prototype.slice.call(arguments, 0));\n}\n\ninherits(Command, BaseCommand);\n\nCommand.prototype.execute = function() {\n  var self = this;\n  return new Promise(function(resolve, reject) {\n    var project = self.getProject();\n    var syncDelegate = new SyncDelegate(project, self.payload.path);\n    syncDelegate.execute()\n      .then(function(result) {\n        resolve(result);\n      })\n      .catch(function(error) {\n        reject(error);\n      })\n      .done();\n  });\n};\n\nexports.command = Command;\nexports.addSubCommand = function(program) {\n  program\n    .command('sync-with-server [path]')\n    .description('Syncs the local path with the server')\n    .action(function(path){\n      if (path) {\n        program.commandExecutor.execute({\n          name: this._name,\n          body: {\n            path : util.getAbsolutePaths( [ path ] )[0]\n          }\n        });\n      } else {\n        var self = this;\n        util.getPayload()\n          .then(function(payload) {\n            program.commandExecutor.execute({\n              name: self._name,\n              body: payload,\n              editor: self.parent.editor\n            });\n          });\n      }\n    });\n};\n\n\n/** WEBPACK FOOTER **\n ** ../mavensmate/app/lib/commands/metadata/sync-with-server.js\n **/","/**\n * @file Queries salesforce on behalf of the running user\n * @author Joseph Ferraro <@joeferraro>\n */\n\n'use strict';\n\nvar Promise           = require('bluebird');\nvar inherits          = require('inherits');\nvar BaseCommand       = require('../../command');\n\nfunction Command() {\n  Command.super_.call(this, Array.prototype.slice.call(arguments, 0));\n}\n\ninherits(Command, BaseCommand);\n\nCommand.prototype.execute = function() {\n  var self = this;\n  return new Promise(function(resolve, reject) {\n    var project = self.getProject();\n    project.sfdcClient.executeSoql(self.payload.soql)\n      .then(function(res) {\n        resolve(res);\n      })\n      .catch(function(error) {\n        reject(error);\n      })\n      .done();\n  });\n};\n\nexports.command = Command;\nexports.addSubCommand = function(program) {\n  program\n    .command('execute-soql [soql]')\n    .description('Executes soql query')\n    .action(function(soql){\n      program.commandExecutor.execute({\n        name: this._name,\n        body: {\n          soql: soql\n        }\n      });\n    });\n};\n\n\n/** WEBPACK FOOTER **\n ** ../mavensmate/app/lib/commands/misc/execute-soql.js\n **/","/**\n * @file Returns setting value for provided key\n * @author Joseph Ferraro <@joeferraro>\n */\n\n'use strict';\n\nvar Promise           = require('bluebird');\nvar inherits          = require('inherits');\nvar BaseCommand       = require('../../command');\nvar config            = require('../../../config');\n\nfunction Command() {\n  Command.super_.call(this, Array.prototype.slice.call(arguments, 0));\n}\n\ninherits(Command, BaseCommand);\n\nCommand.prototype.execute = function() {\n  var self = this;\n  return new Promise(function(resolve, reject) {\n    resolve({\n      value: config.get(self.payload.key)\n    });\n  });\n};\n\nexports.command = Command;\nexports.addSubCommand = function(program) {\n  program\n    .command('get-setting [key]')\n    .description('Returns the setting value for the given key')\n    .action(function(key){\n      program.commandExecutor.execute({\n        name: this._name,\n        body: {\n          key: key\n        }\n      });\n    });\n};\n\n\n/** WEBPACK FOOTER **\n ** ../mavensmate/app/lib/commands/misc/get-setting.js\n **/","/**\n * @file Indexes the symbol tables for a given apex class\n * @author Joseph Ferraro <@joeferraro>\n */\n\n'use strict';\n\nvar path          = require('path');\nvar Promise       = require('bluebird');\nvar util          = require('../../util');\nvar inherits      = require('inherits');\nvar BaseCommand   = require('../../command');\n\nfunction Command() {\n  Command.super_.call(this, Array.prototype.slice.call(arguments, 0));\n}\n\ninherits(Command, BaseCommand);\n\nCommand.prototype.execute = function() {\n  var self = this;\n  return new Promise(function(resolve, reject) {\n    var project = self.getProject();\n    var apexClassName = path.basename(self.payload.className, '.cls');\n    project.indexSymbols(apexClassName)\n      .then(function() {\n        resolve('Symbols successfully indexed for '+self.payload.className);\n      })\n      .catch(function(error) {\n        reject(error);\n      })\n      .done();\n  });\n};\n\nexports.command = Command;\nexports.addSubCommand = function(program) {\n  program\n    .command('index-apex-class [className]')\n    .description('Indexes Apex class\\'s symbols')\n    .action(function(className){\n      program.commandExecutor.execute({\n        name: this._name,\n        body: {\n          className : className\n        }\n      });\n    });\n};\n\n\n/** WEBPACK FOOTER **\n ** ../mavensmate/app/lib/commands/misc/index-apex-class.js\n **/","/**\r\n * @file Indexes all apex symbols for a given project\r\n * @author Joseph Ferraro <@joeferraro>\r\n */\r\n\r\n'use strict';\r\n\r\nvar Promise           = require('bluebird');\r\nvar inherits          = require('inherits');\r\nvar BaseCommand       = require('../../command');\r\n\r\nfunction Command() {\r\n  Command.super_.call(this, Array.prototype.slice.call(arguments, 0));\r\n}\r\n\r\ninherits(Command, BaseCommand);\r\n\r\nCommand.prototype.execute = function() {\r\n  var self = this;\r\n  return new Promise(function(resolve, reject) {\r\n    var project = self.getProject();\r\n    project.indexSymbols()\r\n      .then(function() {\r\n        resolve('Symbols successfully indexed');\r\n      })\r\n      .catch(function(error) {\r\n        reject(error);\r\n      })\r\n      .done();\r\n  });\r\n};\r\n\r\nexports.command = Command;\r\nexports.addSubCommand = function(program) {\r\n  program\r\n    .command('index-apex')\r\n    .alias('index-symbols')\r\n    .description('Indexes project\\'s Apex symbols')\r\n    .action(function(/* Args here */){\r\n      program.commandExecutor.execute({\r\n        name: this._name\r\n      });\r\n    });\r\n};\n\n\n/** WEBPACK FOOTER **\n ** ../mavensmate/app/lib/commands/misc/index-apex.js\n **/","/**\n * @file Returns an active salesforce session\n * @author Joseph Ferraro <@joeferraro>\n */\n\n'use strict';\n\nvar Promise               = require('bluebird');\nvar util                  = require('../../util');\nvar inherits              = require('inherits');\nvar BaseCommand           = require('../../command');\nvar SalesforceClient      = require('../../sfdc-client');\nvar IndexService          = require('../../services/index');\nvar _                     = require('lodash');\nvar logger                = require('winston');\n\nfunction Command() {\n  Command.super_.call(this, Array.prototype.slice.call(arguments, 0));\n}\n\ninherits(Command, BaseCommand);\n\nCommand.prototype.execute = function() {\n  var self = this;\n  return new Promise(function(resolve, reject) {\n    logger.debug('payload', self.payload);\n    var sfdcClient = new SalesforceClient({\n      accessToken: self.payload.accessToken,\n      instanceUrl: self.payload.instanceUrl,\n      transient: true\n    });\n    sfdcClient.initialize()\n      .then(function() {\n        var indexService = new IndexService({ sfdcClient: sfdcClient });\n        return indexService.indexServerProperties(self.payload.metadataTypes);\n      })\n      .then(function(index) {\n        resolve(index);\n      })\n      .catch(function(error) {\n        reject(error);\n      })\n      .done();\n  });\n};\n\nexports.command = Command;\nexports.addSubCommand = function(program) {\n  program\n    .command('list-metadata [typeXmlName')\n    .description('Lists metadata for given type')\n    .action(function(typeXmlName) {\n      if (typeXmlName) {\n        program.commandExecutor.execute({\n          name: this._name,\n          body: {\n           metadataTypes: [typeXmlName]\n          }\n        });\n      } else {\n        var self = this;\n        util.getPayload()\n          .then(function(payload) {\n            program.commandExecutor.execute({\n              name: self._name,\n              body: payload,\n              editor: self.parent.editor\n            });\n          });\n      }\n    });\n};\n\n\n/** WEBPACK FOOTER **\n ** ../mavensmate/app/lib/commands/misc/list-metadata.js\n **/","/**\n * @file Opens the MavensMate UI in a browser\n * @author Joseph Ferraro <@joeferraro>\n */\n\n'use strict';\n\nvar Promise           = require('bluebird');\nvar util              = require('../../util');\nvar BaseCommand       = require('../../command');\nvar inherits          = require('inherits');\nvar EditorService     = require('../../services/editor');\nvar logger            = require('winston');\n\nfunction Command() {\n  Command.super_.call(this, Array.prototype.slice.call(arguments, 0));\n}\n\ninherits(Command, BaseCommand);\n\nCommand.prototype.execute = function() {\n  var self = this;\n  return new Promise(function(resolve, reject) {\n\n    var urlParams = self.getProject() ? { pid: self.getProject().settings.id } : undefined;\n    self.editorService.launchUI('settings', urlParams)\n      .then(function() {\n        resolve('Success');\n      })\n      .catch(function(error) {\n        reject(error);\n      });\n  });\n};\n\nexports.command = Command;\nexports.addSubCommand = function(program) {\n  program\n    .command('open-settings')\n    .description('Launches the settings ui')\n    .action(function() {\n      program.commandExecutor.execute({\n        name: this._name\n      });\n    });\n};\n\n\n\n/** WEBPACK FOOTER **\n ** ../mavensmate/app/lib/commands/misc/open-settings.js\n **/","/**\n * @file Opens existing metadata in the Salesforce UI\n * @author Joseph Ferraro <@joeferraro>\n */\n\n'use strict';\n\nvar Promise             = require('bluebird');\nvar inherits            = require('inherits');\nvar BaseCommand         = require('../../command');\nvar EditorService       = require('../../services/editor');\nvar logger              = require('winston');\n\nfunction Command() {\n  Command.super_.call(this, Array.prototype.slice.call(arguments, 0));\n}\n\ninherits(Command, BaseCommand);\n\nCommand.prototype.execute = function() {\n  var self = this;\n  return new Promise(function(resolve, reject) {\n    var project = self.getProject();\n    // http://docs.releasenotes.salesforce.com/en-us/winter14/release-notes/security_frontdoorjsp.htm\n    var setupUrl = project.sfdcClient.getInstanceUrl() + '/secur/frontdoor.jsp?sid=' + project.sfdcClient.getAccessToken() + '&retURL=/setup/forcecomHomepage.apexp?setupid=ForceCom';\n    logger.debug('attempting to open salesforce org. setupUrl is', setupUrl);\n    self.editorService.openUrl(setupUrl)\n      .then(function() {\n        resolve('Success');\n      })\n      .catch(function(error) {\n        reject(error);\n      });\n  });\n};\n\nexports.command = Command;\nexports.addSubCommand = function(program) {\n  program\n    .command('open-sfdc')\n    .description('Opens salesforce developer home page in the browser')\n    .action(function(){\n      program.commandExecutor.execute({\n        name: this._name\n      });\n    });\n};\n\n\n/** WEBPACK FOOTER **\n ** ../mavensmate/app/lib/commands/misc/open-sfdc.js\n **/","/**\n * @file Opens the MavensMate UI in a browser\n * @author Joseph Ferraro <@joeferraro>\n */\n\n'use strict';\n\nvar Promise           = require('bluebird');\nvar util              = require('../../util');\nvar BaseCommand       = require('../../command');\nvar inherits          = require('inherits');\nvar EditorService     = require('../../services/editor');\nvar logger            = require('winston');\n\nfunction Command() {\n  Command.super_.call(this, Array.prototype.slice.call(arguments, 0));\n}\n\ninherits(Command, BaseCommand);\n\nCommand.prototype.execute = function() {\n  var self = this;\n  return new Promise(function(resolve, reject) {\n\n    var urlParams = self.getProject() ? { pid: self.getProject().settings.id } : undefined;\n    self.editorService.launchUI('home', urlParams)\n      .then(function() {\n        resolve('Success');\n      })\n      .catch(function(error) {\n        reject(error);\n      });\n  });\n};\n\nexports.command = Command;\nexports.addSubCommand = function(program) {\n  program\n    .command('open-ui')\n    .description('Launches the default ui')\n    .action(function() {\n      program.commandExecutor.execute({\n        name: this._name\n      });\n    });\n};\n\n\n\n/** WEBPACK FOOTER **\n ** ../mavensmate/app/lib/commands/misc/open-ui.js\n **/","/**\r\n * @file Returns an active salesforce session\r\n * @author Joseph Ferraro <@joeferraro>\r\n */\r\n\r\n'use strict';\r\n\r\nvar Promise               = require('bluebird');\r\nvar util                  = require('../../util');\r\nvar inherits              = require('inherits');\r\nvar BaseCommand           = require('../../command');\r\nvar SalesforceClient      = require('../../sfdc-client');\r\nvar IndexService          = require('../../services/index');\r\nvar config                = require('../../../config');\r\nvar _                     = require('lodash');\r\n\r\nfunction Command() {\r\n  Command.super_.call(this, Array.prototype.slice.call(arguments, 0));\r\n}\r\n\r\ninherits(Command, BaseCommand);\r\n\r\nCommand.prototype.execute = function() {\r\n  var self = this;\r\n  return new Promise(function(resolve, reject) {\r\n    var sfdcClient = new SalesforceClient(self.payload);\r\n    sfdcClient.initialize()\r\n      .then(function() {\r\n        var response = {\r\n          sid: sfdcClient.conn.accessToken,\r\n          urls: sfdcClient.conn.userInfo.urls,\r\n          instanceUrl: sfdcClient.conn.instanceUrl,\r\n          username: sfdcClient.conn.userInfo.username,\r\n          metadataTypes: _.sortBy(sfdcClient.describeCache.metadataObjects, 'xmlName')\r\n        };\r\n        if (process.title === 'mavensmate cli') {\r\n          config.set('mm_cli_salesforce_session_id', response.sid);\r\n          config.set('mm_cli_salesforce_instance_url', response.instanceUrl);\r\n          config.save(function(err) {\r\n            if (err) {\r\n              reject(err);\r\n            } else {\r\n              resolve(response);\r\n            }\r\n          });\r\n        } else {\r\n          resolve(response);\r\n        }\r\n      })\r\n      .catch(function(error) {\r\n        reject(error);\r\n      })\r\n      .done();\r\n  });\r\n};\r\n\r\nexports.command = Command;\r\nexports.addSubCommand = function(program) {\r\n  program\r\n    .command('session [username] [password] [orgType]')\r\n    .alias('get-active-session')\r\n    .alias('login')\r\n    .option('--verbose', 'Returns server urls and describe information')\r\n    .description('Creates new salesforce.com session, returns session id')\r\n    .action(function(username, password, orgType) {\r\n      if (username && password) {\r\n        program.commandExecutor.execute({\r\n          name: this._name,\r\n          body: {\r\n            username : username,\r\n            password: password,\r\n            orgType: orgType || 'developer'\r\n          }\r\n        });\r\n      } else {\r\n        var self = this;\r\n        util.getPayload()\r\n          .then(function(payload) {\r\n            program.commandExecutor.execute({\r\n              name: self._name,\r\n              body: payload,\r\n              editor: self.parent.editor\r\n            });\r\n          });\r\n      }\r\n    });\r\n};\n\n\n/** WEBPACK FOOTER **\n ** ../mavensmate/app/lib/commands/misc/session.js\n **/","/**\r\n * @file Reverts a project to its server state based on package.xml\r\n * @author Joseph Ferraro <@joeferraro>\r\n */\r\n\r\n'use strict';\r\n\r\nvar Promise         = require('bluebird');\r\nvar inherits        = require('inherits');\r\nvar EditorService   = require('../../services/editor');\r\nvar BaseCommand     = require('../../command');\r\nvar logger          = require('winston');\r\n\r\nfunction Command() {\r\n  Command.super_.call(this, Array.prototype.slice.call(arguments, 0));\r\n}\r\n\r\ninherits(Command, BaseCommand);\r\n\r\nCommand.prototype.execute = function() {\r\n  var self = this;\r\n  return new Promise(function(resolve, reject) {\r\n    self.getProject().clean()\r\n      .then(function() {\r\n        if (self.editorService && self.editorService.editor === 'sublime') {\r\n          self.editorService.runCommand('refresh_folder_list')\r\n            .then(function() {\r\n              resolve();\r\n            })\r\n            .catch(function(err) {\r\n              logger.error(err);\r\n              resolve();\r\n            });\r\n        } else {\r\n          return Promise.resolve();\r\n        }\r\n      })\r\n      .then(function() {\r\n        resolve('Project cleaned successfully');\r\n      })\r\n      .catch(function(error) {\r\n        reject(error);\r\n      })\r\n      .done();\r\n  });\r\n};\r\n\r\nexports.command = Command;\r\nexports.addSubCommand = function(program) {\r\n  program\r\n    .command('clean-project')\r\n    .alias('clean')\r\n    .description('Retrieves metadata from server based on project package.xml file, resets session')\r\n    .action(function(/* Args here */){\r\n      program.commandExecutor.execute({\r\n        name: this._name\r\n      });\r\n    });\r\n};\n\n\n/** WEBPACK FOOTER **\n ** ../mavensmate/app/lib/commands/project/clean-project.js\n **/","/**\r\n * @file Compiles project based on package.xml\r\n * @author Joseph Ferraro <@joeferraro>\r\n */\r\n\r\n'use strict';\r\n\r\nvar Promise     = require('bluebird');\r\nvar inherits    = require('inherits');\r\nvar BaseCommand = require('../../command');\r\n\r\nfunction Command() {\r\n  Command.super_.call(this, Array.prototype.slice.call(arguments, 0));\r\n}\r\n\r\ninherits(Command, BaseCommand);\r\n\r\nCommand.prototype.execute = function() {\r\n  var self = this;\r\n  return new Promise(function(resolve, reject) {\r\n    var project = self.getProject();\r\n    project.compile()\r\n      .then(function(result) {\r\n        resolve(result);\r\n      })\r\n      .catch(function(error) {\r\n        reject(error);\r\n      })\r\n      .done();\r\n  });\r\n};\r\n\r\nexports.command = Command;\r\nexports.addSubCommand = function(program) {\r\n  program\r\n    .command('compile-project')\r\n    .description('Compiles project based on package.xml')\r\n    .action(function(/* Args here */){\r\n      program.commandExecutor.execute({\r\n        name: this._name\r\n      });\r\n    });\r\n};\n\n\n/** WEBPACK FOOTER **\n ** ../mavensmate/app/lib/commands/project/compile-project.js\n **/","/**\r\n * @file Updates a project's local contents based on new package.xml subscription\r\n * @author Joseph Ferraro <@joeferraro>\r\n */\r\n\r\n'use strict';\r\n\r\nvar Promise           = require('bluebird');\r\nvar util              = require('../../util');\r\nvar BaseCommand       = require('../../command');\r\nvar inherits          = require('inherits');\r\nvar EditorService     = require('../../services/editor');\r\nvar logger            = require('winston');\r\n\r\nfunction Command() {\r\n  Command.super_.call(this, Array.prototype.slice.call(arguments, 0));\r\n}\r\n\r\ninherits(Command, BaseCommand);\r\n\r\nCommand.prototype.execute = function() {\r\n  var self = this;\r\n  return new Promise(function(resolve, reject) {\r\n    if (self.isUICommand()) {\r\n      self.editorService.launchUI('project/'+self.getProject().settings.id+'/edit', { pid: self.getProject().settings.id })\r\n        .then(function() {\r\n          resolve('Success');\r\n        })\r\n        .catch(function(err) {\r\n          reject(error);\r\n        })\r\n    } else {\r\n      self.getProject().edit(self.payload.package)\r\n        .then(function() {\r\n          if (self.editorService && self.editorService.editor === 'sublime') {\r\n            self.editorService.runCommand('refresh_folder_list')\r\n              .then(function() {\r\n                resolve();\r\n              })\r\n              .catch(function(err) {\r\n                logger.error(err);\r\n                resolve();\r\n              });\r\n          } else {\r\n            return Promise.resolve();\r\n          }\r\n        })\r\n        .then(function() {\r\n          resolve('Project updated successfully!');\r\n        })\r\n        .catch(function(error) {\r\n          reject(error);\r\n        })\r\n        .done();\r\n    }\r\n  });\r\n};\r\n\r\nexports.command = Command;\r\nexports.addSubCommand = function(program) {\r\n  program\r\n    .command('edit-project')\r\n    .alias('edit')\r\n    .option('--ui', 'Launches the default UI for the selected command.')\r\n    .description('Edits an existing project')\r\n    .action(function(){\r\n      if (this.ui) {\r\n        program.commandExecutor.execute({\r\n          name: this._name,\r\n          body: { args: { ui: true } },\r\n          editor: this.parent.editor\r\n        });\r\n      } else {\r\n        var self = this;\r\n        util.getPayload()\r\n          .then(function(payload) {\r\n            program.commandExecutor.execute({\r\n              name: self._name,\r\n              body: payload,\r\n              editor: self.parent.editor\r\n            });\r\n          });\r\n      }\r\n    });\r\n};\r\n\n\n\n/** WEBPACK FOOTER **\n ** ../mavensmate/app/lib/commands/project/edit-project.js\n **/","/**\n * @file Returns the medadata index for a project\n * @author Joseph Ferraro <@joeferraro>\n */\n\n'use strict';\n\nvar Promise     = require('bluebird');\nvar inherits    = require('inherits');\nvar BaseCommand = require('../../command');\n\nfunction Command() {\n  Command.super_.call(this, Array.prototype.slice.call(arguments, 0));\n}\n\ninherits(Command, BaseCommand);\n\nCommand.prototype.execute = function() {\n  var self = this;\n  return new Promise(function(resolve, reject) {\n    self.getProject().getOrgMetadataIndexWithSelections(null, null, self.payload.packageXmlPath)\n      .then(function(metadataIndex) {\n        resolve(metadataIndex);\n      })\n      .catch(function(error) {\n        reject(error);\n      })\n      .done();\n  });\n};\n\nexports.command = Command;\nexports.addSubCommand = function(program) {\n  program\n    .command('get-metadata-index-for-package')\n    .description('Gets metadata index for a given package location')\n    .action(function() {\n      var self = this;\n      util.getPayload()\n        .then(function(payload) {\n          program.commandExecutor.execute({\n            name: self._name,\n            body: payload,\n            editor: self.parent.editor\n          });\n        });\n    });\n};\n\n\n/** WEBPACK FOOTER **\n ** ../mavensmate/app/lib/commands/project/get-metadata-index-for-package.js\n **/","/**\r\n * @file Returns the medadata index for a project\r\n * @author Joseph Ferraro <@joeferraro>\r\n */\r\n\r\n'use strict';\r\n\r\nvar Promise     = require('bluebird');\r\nvar inherits    = require('inherits');\r\nvar BaseCommand = require('../../command');\r\n\r\nfunction Command() {\r\n  Command.super_.call(this, Array.prototype.slice.call(arguments, 0));\r\n}\r\n\r\ninherits(Command, BaseCommand);\r\n\r\nCommand.prototype.execute = function() {\r\n  var self = this;\r\n  return new Promise(function(resolve, reject) {\r\n    self.getProject().getOrgMetadataIndexWithSelections()\r\n      .then(function(metadataIndex) {\r\n        resolve(metadataIndex);\r\n      })\r\n      .catch(function(error) {\r\n        reject(error);\r\n      })\r\n      .done();\r\n  });\r\n};\r\n\r\nexports.command = Command;\r\nexports.addSubCommand = function(program) {\r\n  program\r\n    .command('get-metadata-index')\r\n    .description('Returns indexed metadata')\r\n    .action(function(/* Args here */){\r\n      program.commandExecutor.execute({\r\n        name: this._name\r\n      });\r\n    });\r\n};\n\n\n/** WEBPACK FOOTER **\n ** ../mavensmate/app/lib/commands/project/get-metadata-index.js\n **/","/**\r\n * @file Indexes server metadata locally\r\n * @author Joseph Ferraro <@joeferraro>\r\n */\r\n\r\n'use strict';\r\n\r\nvar Promise       = require('bluebird');\r\nvar inherits      = require('inherits');\r\nvar BaseCommand   = require('../../command');\r\n\r\nfunction Command() {\r\n  Command.super_.call(this, Array.prototype.slice.call(arguments, 0));\r\n}\r\n\r\ninherits(Command, BaseCommand);\r\n\r\nCommand.prototype.execute = function() {\r\n  var self = this;\r\n  return new Promise(function(resolve, reject) {\r\n    var project = self.getProject();\r\n    project.indexMetadata()\r\n      .then(function() {\r\n        resolve('Metadata successfully indexed');\r\n      })\r\n      .catch(function(error) {\r\n        reject(error);\r\n      })\r\n      .done();\r\n  });\r\n};\r\n\r\nexports.command = Command;\r\nexports.addSubCommand = function(program) {\r\n  program\r\n    .command('index-metadata')\r\n    .description('Indexes project\\'s metadata')\r\n    .action(function(/* Args here */){\r\n      program.commandExecutor.execute({\r\n        name: this._name\r\n      });\r\n    });\r\n};\n\n\n/** WEBPACK FOOTER **\n ** ../mavensmate/app/lib/commands/project/index-metadata.js\n **/","/**\n * @file Lists projects in all workspaces\n * @author Joseph Ferraro <@joeferraro>\n */\n\n'use strict';\n\nvar Promise           = require('bluebird');\nvar ViewHelper        = require('../../../helper');\nvar BaseCommand       = require('../../command');\nvar inherits          = require('inherits');\nvar logger            = require('winston');\n\nfunction Command() {\n  Command.super_.call(this, Array.prototype.slice.call(arguments, 0));\n}\n\ninherits(Command, BaseCommand);\n\nCommand.prototype.execute = function() {\n  var self = this;\n  return new Promise(function(resolve, reject) {\n    try {\n      var v = new ViewHelper();\n      resolve(v.listProjects());\n    } catch(e) {\n      reject(e);\n    }\n  });\n};\n\nexports.command = Command;\nexports.addSubCommand = function(program) {\n  program\n    .command('list-projects')\n    .description('List projects in all workspaces')\n    .action(function() {\n      program.commandExecutor.execute({\n        name: this._name\n      });\n    });\n};\n\n\n\n/** WEBPACK FOOTER **\n ** ../mavensmate/app/lib/commands/project/list-projects.js\n **/","/**\n * @file Create a new local project/opens new project UI\n * @author Joseph Ferraro <@joeferraro>\n */\n\n'use strict';\n\nvar Promise           = require('bluebird');\nvar util              = require('../../util');\nvar Project           = require('../../project');\nvar BaseCommand       = require('../../command');\nvar SalesforceClient  = require('../../sfdc-client');\nvar inherits          = require('inherits');\nvar logger            = require('winston');\nvar EditorService     = require('../../services/editor');\n\nfunction Command() {\n  Command.super_.call(this, Array.prototype.slice.call(arguments, 0));\n}\n\ninherits(Command, BaseCommand);\n\n// TODO: implement\nCommand.prototype.execute = function() {\n  var self = this;\n  return new Promise(function(resolve, reject) {\n    if (self.isUICommand()) {\n      self.editorService.launchUI('project/existing/new', { origin: self.payload.args.origin })\n        .then(function() {\n          resolve('Success');\n        })\n        .catch(function(error) {\n          reject(error);\n        });\n    } else {\n      var newProject;\n      var sfdcClient = new SalesforceClient(self.payload);\n      sfdcClient.initialize()\n        .then(function() {\n          newProject = new Project(self.payload);\n          newProject.sfdcClient = sfdcClient;\n          return newProject.initialize(true, true);\n        })\n        .then(function() {\n          logger.debug('New project written to disk ...');\n          logger.debug('attempting to open in editor');\n          if (self.editorService && self.editorService.editor) {\n            return self.editorService.open(newProject.path);\n          } else {\n            return resolve({\n              message: 'Project created successfully',\n              id: newProject.id\n            });\n          }\n        })\n        .then(function() {\n          return resolve({\n            message: 'Project created successfully',\n            id: newProject.id\n          });\n        })\n        .catch(function(error) {\n          logger.debug('Could not create project: ');\n          logger.debug(error.stack);\n          reject(error);\n        })\n        .done();\n    }\n  });\n};\n\nexports.command = Command;\nexports.addSubCommand = function(program) {\n  program\n    .command('new-project-from-existing-directory')\n    .option('--ui', 'Launches the default UI for the selected command.')\n    .option('-d, --directory [directory]', 'Directory to create new mavensmate project from')\n    .description('Creates a new MavensMate project from an existing directory')\n    .action(function(){\n      // if user has included the ui flag, launch the ui\n      // else read STDIN\n      if (this.ui) {\n        program.commandExecutor.execute({\n          name: this._name,\n          body: { args: { ui: true, directory: this.directory } }\n        });\n      } else {\n        var self = this;\n        util.getPayload()\n          .then(function(payload) {\n            program.commandExecutor.execute({\n              name: self._name,\n              body: payload,\n              editor: self.parent.editor\n            });\n          });\n      }\n    });\n};\n\n\n\n/** WEBPACK FOOTER **\n ** ../mavensmate/app/lib/commands/project/new-project-from-existing-directory.js\n **/","/**\r\n * @file Create a new local project/opens new project UI\r\n * @author Joseph Ferraro <@joeferraro>\r\n */\r\n\r\n'use strict';\r\n\r\nvar Promise           = require('bluebird');\r\nvar _                 = require('lodash');\r\nvar util              = require('../../util');\r\nvar merge             = require('merge');\r\nvar Project           = require('../../project');\r\nvar BaseCommand       = require('../../command');\r\nvar SalesforceClient  = require('../../sfdc-client');\r\nvar inherits          = require('inherits');\r\nvar logger            = require('winston');\r\nvar EditorService     = require('../../services/editor');\r\nvar config            = require('../../../config');\r\n\r\nvar _getSobjectList = function(describeResult) {\r\n  var sobjects = [];\r\n  _.each(describeResult.sobjects, function(so) {\r\n    sobjects.push(so.name);\r\n  });\r\n  return sobjects;\r\n};\r\n\r\nfunction Command() {\r\n  Command.super_.call(this, Array.prototype.slice.call(arguments, 0));\r\n}\r\n\r\ninherits(Command, BaseCommand);\r\n\r\nCommand.prototype.execute = function() {\r\n  var self = this;\r\n  return new Promise(function(resolve, reject) {\r\n    if (self.isUICommand()) {\r\n      self.editorService.launchUI('project/new')\r\n        .then(function() {\r\n          resolve('Success');\r\n        })\r\n        .catch(function(error) {\r\n          reject(error);\r\n        });\r\n    } else {\r\n      if (!self.payload.name) {\r\n        return reject(new Error('Please specify project name'));\r\n      }\r\n      var newProject;\r\n      var sfdcClient = new SalesforceClient(self.payload);\r\n      sfdcClient.initialize()\r\n        .then(function() {\r\n          newProject = new Project(self.payload);\r\n          newProject.sfdcClient = sfdcClient;\r\n          return newProject.initialize(true);\r\n        })\r\n        .then(function() {\r\n          logger.debug('Initiated new project, prepping to write to disk');\r\n          return newProject.retrieveAndWriteToDisk();\r\n        })\r\n        .then(function() {\r\n          if (self.editorService && self.editorService.editor) {\r\n            return self.editorService.open(newProject.path);\r\n          } else {\r\n            return resolve({\r\n              message: 'Project created successfully',\r\n              id: newProject.id\r\n            });\r\n          }\r\n        })\r\n        .then(function() {\r\n          resolve({\r\n            message: 'Project created successfully',\r\n            id: newProject.id\r\n          });\r\n        })\r\n        .catch(function(error) {\r\n          logger.debug('Could not create project: ');\r\n          logger.debug(error.stack);\r\n          reject(error);\r\n        })\r\n        .done();\r\n    }\r\n  });\r\n};\r\n\r\nexports.command = Command;\r\nexports.addSubCommand = function(program) {\r\n  program\r\n    .command('new-project')\r\n    .option('--ui', 'Launches the default UI for the selected command.')\r\n    .description('Creates a new Salesforce1 project')\r\n    .action(function(){\r\n      if (this.ui) {\r\n        logger.debug(program.commandExecutor)\r\n        program.commandExecutor.execute({\r\n          name: this._name,\r\n          body: { args: { ui: true } },\r\n          editor: this.parent.editor\r\n        });\r\n      } else {\r\n        var self = this;\r\n        util.getPayload()\r\n          .then(function(payload) {\r\n            program.commandExecutor.execute({\r\n              name: self._name,\r\n              body: payload,\r\n              editor: self.parent.editor\r\n            });\r\n          });\r\n      }\r\n    });\r\n};\r\n\n\n\n/** WEBPACK FOOTER **\n ** ../mavensmate/app/lib/commands/project/new-project.js\n **/","/**\n * @file Opens the fix project UI\n * @author Joseph Ferraro <@joeferraro>\n */\n\n'use strict';\n\nvar Promise           = require('bluebird');\nvar util              = require('../../util');\nvar BaseCommand       = require('../../command');\nvar inherits          = require('inherits');\nvar EditorService     = require('../../services/editor');\nvar logger            = require('winston');\n\nfunction Command() {\n  Command.super_.call(this, Array.prototype.slice.call(arguments, 0));\n}\n\ninherits(Command, BaseCommand);\n\nCommand.prototype.execute = function() {\n  var self = this;\n  return new Promise(function(resolve, reject) {\n    self.editorService.launchUI('project/'+self.getProject().settings.id+'/auth', { pid: self.getProject().settings.id })\n      .then(function() {\n        resolve('Please authenticate with Salesforce');\n      })\n      .catch(function(err) {\n        reject(error);\n      });\n  });\n};\n\nexports.command = Command;\nexports.addSubCommand = function(program) {\n  program\n    .command('oauth-project')\n    .description('Displays oauth UI for project')\n    .action(function(){\n      program.commandExecutor.execute({\n        name: this._name,\n        body: { args: { ui: true } },\n        editor: this.parent.editor\n      });\n    });\n};\n\n\n\n/** WEBPACK FOOTER **\n ** ../mavensmate/app/lib/commands/project/oauth-project.js\n **/","/**\n * @file Opens the project in the client editor\n * @author Joseph Ferraro <@joeferraro>\n */\n\n'use strict';\n\nvar Promise           = require('bluebird');\nvar path              = require('path');\nvar fs                = require('fs-extra');\nvar util              = require('../../util');\nvar BaseCommand       = require('../../command');\nvar inherits          = require('inherits');\nvar EditorService     = require('../../services/editor');\nvar logger            = require('winston');\n\nfunction Command() {\n  Command.super_.call(this, Array.prototype.slice.call(arguments, 0));\n}\n\ninherits(Command, BaseCommand);\n\nCommand.prototype.execute = function() {\n  var self = this;\n  return new Promise(function(resolve, reject) {\n    var editor;\n    if (!self.editorService || !self.editorService.editor) {\n      return reject(new Error('Please specify an editor either via \"MavensMate-Editor-Agent\" HTTP header, editor POST body, or -e/--editor command line flag'));\n    }\n    var projectPath = self.getProject().path;\n    if (self.editorService.editor === 'sublime') {\n      var sublimeProjectPath = path.join(projectPath, self.getProject().name+'.sublime-project');\n      if (fs.existsSync(sublimeProjectPath)) {\n        projectPath = sublimeProjectPath;\n      }\n    }\n    self.editorService.open(projectPath)\n      .then(function() {\n        resolve('Opened project in '+self.editorService.editor);\n      })\n      .catch(function(err) {\n        reject(err);\n      });\n  });\n};\n\nexports.command = Command;\nexports.addSubCommand = function(program) {\n  program\n    .command('open-project')\n    .alias('open')\n    .description('Open a project in the editor')\n    .action(function() {\n      program.commandExecutor.execute({\n        name: this._name\n      });\n    });\n};\n\n\n\n/** WEBPACK FOOTER **\n ** ../mavensmate/app/lib/commands/project/open-project.js\n **/","/**\n * @file Returns the medadata index for a project\n * @author Joseph Ferraro <@joeferraro>\n */\n\n'use strict';\n\nvar Promise     = require('bluebird');\nvar inherits    = require('inherits');\nvar BaseCommand = require('../../command');\n\nfunction Command() {\n  Command.super_.call(this, Array.prototype.slice.call(arguments, 0));\n}\n\ninherits(Command, BaseCommand);\n\nCommand.prototype.execute = function() {\n  var self = this;\n  return new Promise(function(resolve, reject) {\n    self.getProject().getOrgMetadataIndexWithSelections(self.payload.keyword, self.payload.ids)\n      .then(function(metadataIndex) {\n        resolve(metadataIndex);\n      })\n      .catch(function(error) {\n        reject(error);\n      })\n      .done();\n  });\n};\n\nexports.command = Command;\nexports.addSubCommand = function(program) {\n  program\n    .command('search-metadata-index')\n    .description('Searches metadata index')\n    .action(function() {\n      var self = this;\n      util.getPayload()\n        .then(function(payload) {\n          program.commandExecutor.execute({\n            name: self._name,\n            body: payload,\n            editor: self.parent.editor\n          });\n        });\n    });\n};\n\n\n/** WEBPACK FOOTER **\n ** ../mavensmate/app/lib/commands/project/search-metadata-index.js\n **/","/**\r\n * @file Updates the creds associated with a project\r\n * @author Joseph Ferraro <@joeferraro>\r\n */\r\n\r\n'use strict';\r\n\r\nvar Promise     = require('bluebird');\r\nvar inherits    = require('inherits');\r\nvar BaseCommand = require('../../command');\r\n\r\nfunction Command() {\r\n  Command.super_.call(this, Array.prototype.slice.call(arguments, 0));\r\n}\r\n\r\ninherits(Command, BaseCommand);\r\n\r\nCommand.prototype.execute = function() {\r\n  var self = this;\r\n  return new Promise(function(resolve, reject) {\r\n    var project = self.getProject();\r\n    project.updateCredentials(self.payload)\r\n      .then(function() {\r\n        resolve('Credentials updated successfully!');\r\n      })\r\n      .catch(function(error) {\r\n        reject(error);\r\n      })\r\n      .done();\r\n  });\r\n};\r\n\r\nexports.command = Command;\r\nexports.addSubCommand = function(program) {\r\n  program\r\n    .command('update-creds [username] [password] [orgType] [loginUrl]')\r\n    .description('Update project\\'s salesfore.com credentials')\r\n    .action(function(username, password, orgType, loginUrl){\r\n      var payload = {\r\n        username: username,\r\n        password: password,\r\n        orgType: orgType,\r\n        loginUrl: loginUrl\r\n      };\r\n      program.commandExecutor.execute({\r\n        name: this._name,\r\n        body: payload\r\n      });\r\n    });\r\n};\n\n\n/** WEBPACK FOOTER **\n ** ../mavensmate/app/lib/commands/project/update-creds.js\n **/","/**\r\n * @file Updates the subscription associated with a project\r\n * @author Joseph Ferraro <@joeferraro>\r\n */\r\n\r\n'use strict';\r\n\r\nvar Promise     = require('bluebird');\r\nvar util        = require('../../util');\r\nvar inherits    = require('inherits');\r\nvar BaseCommand = require('../../command');\r\n\r\nfunction Command() {\r\n  Command.super_.call(this, Array.prototype.slice.call(arguments, 0));\r\n}\r\n\r\ninherits(Command, BaseCommand);\r\n\r\nCommand.prototype.execute = function() {\r\n  var self = this;\r\n  return new Promise(function(resolve, reject) {\r\n    try {\r\n      var project = self.getProject();\r\n      project.writeSettings({ subscription: self.payload.subscription });\r\n      resolve('Subscription updated successfully!');\r\n    } catch(err) {\r\n      reject(err);\r\n    }\r\n  });\r\n};\r\n\r\nexports.command = Command;\r\nexports.addSubCommand = function(program) {\r\n  program\r\n    .command('update-subscription')\r\n    .description('Updates project metadata subscription')\r\n    .action(function(/* Args here */){\r\n      var self = this;\r\n      util.getPayload()\r\n        .then(function(payload) {\r\n          program.commandExecutor.execute({\r\n            name: self._name,\r\n            body: payload,\r\n            editor: self.parent.editor\r\n          });\r\n        });\r\n    });\r\n};\n\n\n/** WEBPACK FOOTER **\n ** ../mavensmate/app/lib/commands/project/update-subscription.js\n **/","/**\n * @file Deploys a resource bundle to the server\n * @author Joseph Ferraro <@joeferraro>\n */\n\n'use strict';\n\nvar Promise                 = require('bluebird');\nvar util                    = require('../../util');\nvar ResourceBundleService   = require('../../services/resource-bundle');\nvar inherits                = require('inherits');\nvar BaseCommand             = require('../../command');\n\nfunction Command() {\n  Command.super_.call(this, Array.prototype.slice.call(arguments, 0));\n}\n\ninherits(Command, BaseCommand);\n\nCommand.prototype.execute = function() {\n  var self = this;\n  return new Promise(function(resolve, reject) {\n    var project = self.getProject();\n    var bundleService = new ResourceBundleService(project);\n    bundleService.deploy(self.payload.paths)\n      .then(function() {\n        resolve('Resource bundle successfully deployed');\n      })\n      .catch(function(error) {\n        reject(error);\n      })\n      .done();\n  });\n};\n\nexports.command = Command;\nexports.addSubCommand = function(program) {\n  program\n    .command('deploy-resource-bundle [bundlePath]')\n    .description('Deploys a resource bundle to the server, e.g. mavensmate deploy-resource-bundle path/to/resource/bundle ')\n    .action(function(bundlePath){\n      if (bundlePath) {\n        program.commandExecutor.execute({\n          name: this._name,\n          body: {\n            paths: util.getAbsolutePaths( [ bundlePath ] )\n          }\n        });\n      } else {\n        console.error('Please specify a valid bundle path');\n        process.exit(1);\n      }\n    });\n};\n\n\n/** WEBPACK FOOTER **\n ** ../mavensmate/app/lib/commands/resource-bundle/deploy-resource-bundle.js\n **/","/**\n * @file Creates a new resource bundle from a given static resource path\n * @author Joseph Ferraro <@joeferraro>\n */\n\n'use strict';\n\nvar Promise                 = require('bluebird');\nvar util                    = require('../../util');\nvar ResourceBundleService   = require('../../services/resource-bundle');\nvar inherits                = require('inherits');\nvar BaseCommand             = require('../../command');\n\nfunction Command() {\n  Command.super_.call(this, Array.prototype.slice.call(arguments, 0));\n}\n\ninherits(Command, BaseCommand);\n\nCommand.prototype.execute = function() {\n  var self = this;\n  return new Promise(function(resolve, reject) {\n    var project = self.getProject();\n    var bundleService = new ResourceBundleService(project);\n    bundleService.create(self.payload.paths)\n      .then(function() {\n        resolve('Resource bundle(s) successfully created');\n      })\n      .catch(function(error) {\n        reject(error);\n      })\n      .done();\n  });\n};\n\nexports.command = Command;\nexports.addSubCommand = function(program) {\n  program\n    .command('new-resource-bundle [staticResourcePath]')\n    .description('Creates a resource bundle from a static resource, e.g. mavensmate new-resource-bundle path/to/static/resource')\n    .action(function(staticResourcePath){\n      program.commandExecutor.execute({\n        name: this._name,\n        body: {\n          paths: util.getAbsolutePaths( [ staticResourcePath ] )\n        }\n      });\n    });\n};\n\n\n/** WEBPACK FOOTER **\n ** ../mavensmate/app/lib/commands/resource-bundle/new-resource-bundle.js\n **/","/**\n * @file Returns current test coverage for the org or a given path\n * @author Joseph Ferraro <@joeferraro>\n */\n\n'use strict';\n\nvar Promise         = require('bluebird');\nvar inherits        = require('inherits');\nvar BaseCommand     = require('../../command');\nvar ApexTest        = require('../../services/test');\nvar MavensMateFile  = require('../../file').MavensMateFile;\n\nfunction Command() {\n  Command.super_.call(this, Array.prototype.slice.call(arguments, 0));\n}\n\ninherits(Command, BaseCommand);\n\nCommand.prototype.execute = function() {\n  var self = this;\n  return new Promise(function(resolve, reject) {\n    var test = new ApexTest({\n      project: self.getProject()\n    });\n    var commandPromise;\n    if (self.payload.global) {\n      commandPromise = test.getOrgWideCoverage();\n    } else {\n      var mmFile = new MavensMateFile({ project: self.getProject(), path: self.payload.paths[0] });\n      test.apexClassOrTriggerIdToName[mmFile.id] = mmFile.basename;\n      commandPromise = test.getCoverage([ mmFile.id ]);\n    }\n    commandPromise\n      .then(function(res) {\n        resolve(res);\n      })\n      .catch(function(error) {\n        reject(error);\n      })\n      .done();\n  });\n};\n\nexports.command = Command;\nexports.addSubCommand = function(program) {\n\tprogram\n\t\t.command('get-coverage [apexClassOrTriggerPath]')\n    .option('-g, --global', 'Org-wide coverage')\n\t\t.description('Gets coverage for a specified class')\n\t\t.action(function(apexClassOrTriggerPath){\n      if (this.global) {\n        program.commandExecutor.execute({\n          name: this._name,\n          body: {\n            global: true\n          }\n        });\n      } else {\n        program.commandExecutor.execute({\n          name: this._name,\n          body: {\n            paths: [ apexClassOrTriggerPath ]\n          }\n        });\n      }\n\t\t});\n};\n\n\n/** WEBPACK FOOTER **\n ** ../mavensmate/app/lib/commands/unit-test/get-coverage.js\n **/","/**\n * @file Runs apex unit tests/opens the test runner UI\n * @author Joseph Ferraro <@joeferraro>\n */\n\n'use strict';\n\nvar Promise         = require('bluebird');\nvar util            = require('../../util');\nvar inherits        = require('inherits');\nvar BaseCommand     = require('../../command');\nvar ApexTest        = require('../../services/test');\nvar EditorService   = require('../../services/editor');\n\nfunction Command() {\n  Command.super_.call(this, Array.prototype.slice.call(arguments, 0));\n}\n\ninherits(Command, BaseCommand);\n\nCommand.prototype.execute = function() {\n  var self = this;\n  return new Promise(function(resolve, reject) {\n    self.payload.project = self.getProject();\n    var test = new ApexTest(self.payload);\n    test.execute()\n      .then(function(testResults) {\n        resolve(testResults);\n      })\n      .catch(function(error) {\n        reject(error);\n      })\n      .done();\n  });\n};\n\nexports.command = Command;\nexports.addSubCommand = function(program) {\n  program\n    .command('run-test-method [testNameOrPath] [testMethodName]')\n    .alias('test')\n    .description('Runs an Apex unit test method')\n    .action(function(testNameOrPath, testMethodName) {\n      var self = this;\n      if (testNameOrPath && testMethodName) {\n        var payload = {\n          tests: [\n            {\n              testNameOrPath : testNameOrPath,\n              methodNames: [ testMethodName ]\n            }\n          ]\n        };\n        program.commandExecutor.execute({\n          name: self._name,\n          body: payload,\n          editor: self.parent.editor\n        });\n      } else {\n        util.getPayload()\n          .then(function(payload) {\n            program.commandExecutor.execute({\n              name: self._name,\n              body: payload,\n              editor: self.parent.editor\n            });\n          });\n      }\n    });\n};\n\n\n/** WEBPACK FOOTER **\n ** ../mavensmate/app/lib/commands/unit-test/run-test-method.js\n **/","/**\r\n * @file Runs apex unit tests/opens the test runner UI\r\n * @author Joseph Ferraro <@joeferraro>\r\n */\r\n\r\n'use strict';\r\n\r\nvar _               = require('lodash');\r\nvar Promise         = require('bluebird');\r\nvar util            = require('../../util');\r\nvar inherits        = require('inherits');\r\nvar BaseCommand     = require('../../command');\r\nvar ApexTest        = require('../../services/test');\r\nvar EditorService   = require('../../services/editor');\r\n\r\nfunction Command() {\r\n  Command.super_.call(this, Array.prototype.slice.call(arguments, 0));\r\n}\r\n\r\ninherits(Command, BaseCommand);\r\n\r\nCommand.prototype.execute = function() {\r\n  var self = this;\r\n  return new Promise(function(resolve, reject) {\r\n    if (self.isUICommand()) {\r\n      var urlParams = { pid: self.getProject().settings.id };\r\n      if (self.payload && self.payload.classes && _.isArray(self.payload.classes)) {\r\n        urlParams.className = [ self.payload.classes[0] ];\r\n      }\r\n      self.editorService.launchUI('test/new', urlParams)\r\n        .then(function() {\r\n          resolve('Success');\r\n        })\r\n        .catch(function(error) {\r\n          reject(error);\r\n        });\r\n    } else {\r\n      self.payload.project = self.getProject();\r\n      var test = new ApexTest(self.payload);\r\n      test.execute()\r\n        .then(function(testResults) {\r\n          if (self.payload.html) {\r\n            resolve(test.getResultHtml(testResults));\r\n          } else {\r\n            resolve(testResults);\r\n          }\r\n        })\r\n        .catch(function(error) {\r\n          reject(error);\r\n        })\r\n        .done();\r\n    }\r\n  });\r\n};\r\n\r\nexports.command = Command;\r\nexports.addSubCommand = function(program) {\r\n  program\r\n    .command('run-tests [testPath]')\r\n    .alias('test')\r\n    .option('--ui', 'Launches the Apex test runner UI.')\r\n    .description('Runs Apex unit tests')\r\n    .action(function(testPath){\r\n      if (this.ui) {\r\n        program.commandExecutor.execute({\r\n          name: this._name,\r\n          body: { args: { ui: true } },\r\n          editor: this.parent.editor\r\n        });\r\n      } else {\r\n        var self = this;\r\n        if (testPath) {\r\n          var payload = { tests : [ testPath ] };\r\n          program.commandExecutor.execute({\r\n            name: self._name,\r\n            body: payload,\r\n            editor: self.parent.editor\r\n          });\r\n        } else {\r\n          util.getPayload()\r\n            .then(function(payload) {\r\n              program.commandExecutor.execute({\r\n                name: self._name,\r\n                body: payload,\r\n                editor: self.parent.editor\r\n              });\r\n            });\r\n        }\r\n      }\r\n    });\r\n};\n\n\n/** WEBPACK FOOTER **\n ** ../mavensmate/app/lib/commands/unit-test/run-tests.js\n **/","/**\n * @file Service responsible for creating and running \"Apex Scripts\" (anonymous Apex). These scripts are usually stored in a project's apex-scripts directory.\n * @author Joseph Ferraro <@joeferraro>\n */\n\n'use strict';\n\nvar Promise   = require('bluebird');\nvar fs        = require('fs-extra');\nvar path      = require('path');\nvar util      = require('../util');\nvar _         = require('lodash');\n\n/**\n * Service to create and execute anonymous Apex scripts\n * @param {Client} client\n */\nvar ApexScriptService = function(project) {\n  if (!project) {\n    throw new Error('ApexScriptService requires a valid project instance');\n  }\n  this.project = project;\n};\n\n/**\n * Creates new apex script\n * @param  {String} scriptPath\n * @return {Promise}\n */\nApexScriptService.prototype.create = function(name) {\n  var self = this;\n  return new Promise(function(resolve, reject) {\n    try {\n      var dir = path.join(self.project.path, 'apex-scripts');\n      fs.ensureDirSync(dir);\n      fs.outputFileSync( path.join( dir, [name, 'cls'].join('.') ), '');\n      resolve('Apex script created successfully');\n    } catch(e) {\n      reject(e);\n    }\n  });\n};\n\n/**\n * Executes apex script\n * @param  {String} scriptPath\n * @return {Promise}\n */\nApexScriptService.prototype.execute = function(scriptPaths) {\n  var self = this;\n  if (!_.isArray(scriptPaths)) {\n    scriptPaths = [scriptPaths];\n  }\n  return new Promise(function(resolve, reject) {\n    var scriptPromises = [];\n    _.each(scriptPaths, function(sp) {\n      var scriptBody = util.getFileBody(sp);\n      var payload = {\n        body: scriptBody\n      };\n      scriptPromises.push ( self.project.sfdcClient.executeApex(payload) );\n    });\n\n    Promise.all(scriptPromises)\n      .then(function(results) {\n        var result = {};\n        _.each(scriptPaths, function(sp, i) {\n          result[path.basename(sp)] = results[i];\n        });\n        resolve(result);\n      })\n      .catch(function(error) {\n        reject(error);\n      })\n      .done();\n  });\n};\n\n\nmodule.exports = ApexScriptService;\n\n\n/** WEBPACK FOOTER **\n ** ../mavensmate/app/lib/services/apex-script.js\n **/","/**\n * @file Responsible for interacting with the local secure store if one exists\n * @author Joseph Ferraro <@joeferraro>\n */\n\n'use strict';\n\nvar systemKeychainSupported = true;\ntry {\n  var keychain = require('keytar');\n} catch (e) {\n  systemKeychainSupported = false;\n}\nvar config = require('../../config');\nvar os = require('os');\nvar logger = require('winston');\n\nvar KeychainService = function() { };\n\n/**\n * If user has opted in (mm_use_keyring=true) AND node-keychain is installed, use the system keychain\n * @return {Boolean}\n */\nKeychainService.prototype.useSystemKeychain = function() {\n  return config.get('mm_use_keyring') && systemKeychainSupported;\n};\n\n/**\n * Whether node-keychain is installed properly\n * @return {Boolean}\n */\nKeychainService.prototype.isSystemKeychainSupported = function() {\n  return systemKeychainSupported;\n};\n\n/**\n * Put password in the system keychain\n * @param  {String} id - the project id or id of the org connection\n * @param  {String} password - the accessToken or refreshToken to store as a \"password\"\n * @param  {String} type - either \"accessToken\" or \"refreshToken\" or \"password\"\n * @return {Nothing}\n */\nKeychainService.prototype.storePassword = function(id, password, type) {\n  logger.debug('Storing password of type', type, 'for', id);\n  if (this.useSystemKeychain()) {\n    var storePasswordResult = keychain.addPassword('MavensMate-'+type, id, password);\n    if (!storePasswordResult) {\n      throw new Error('Could not store '+type+' for '+id);\n    }\n    return storePasswordResult;\n  } else {\n    throw new Error('Attempt to store password failed: system keychain service not supported');\n  }\n};\n\n/**\n * Update password in the system keychain\n * @param  {String} id - the project id or id of the org connection\n * @param  {String} password - the accessToken or refreshToken or password to store as a \"password\"\n * @param  {String} type - either \"accessToken\" or \"refreshToken\" or \"password\"\n * @return {Nothing}\n */\nKeychainService.prototype.replacePassword = function(id, password, type) {\n  logger.debug('Replacing password of type', type, 'for', id);\n  if (this.useSystemKeychain()) {\n    var replacePasswordResult = keychain.replacePassword('MavensMate-'+type, id, password);\n    if (!replacePasswordResult) {\n      throw new Error('Could not replace '+type+' for '+id);\n    }\n    return replacePasswordResult;\n  } else {\n    throw new Error('Attempt to replace password in keychain failed: system keychain service not supported');\n  }\n};\n\n/**\n * Retrieve password from the system keychain\n * @param  {String} id - the project id or id of the org connection\n * @param  {String} type - either \"accessToken\" or \"refreshToken\" or \"password\"\n*/\nKeychainService.prototype.getPassword = function(id, type, canFailSilently) {\n  logger.debug('Retrieving password of type', type, 'for', id);\n  if (this.useSystemKeychain()) {\n    var getPasswordResult = keychain.getPassword('MavensMate-'+type, id);\n    if (!getPasswordResult && !canFailSilently) {\n      throw new Error('Could not get '+type+' for '+id);\n    }\n    return getPasswordResult;\n  } else {\n    throw new Error('Attempt to get password from keychain failed: system keychain service not supported');\n  }\n};\n\nmodule.exports = KeychainService;\n\n\n/** WEBPACK FOOTER **\n ** ../mavensmate/app/lib/services/keychain.js\n **/","/**\n * @file Responsible for downloading Salesforce logs to the local project\n * @author Joseph Ferraro <@joeferraro>\n */\n\n'use strict';\n\nvar _         = require('lodash');\nvar Promise   = require('bluebird');\nvar fs        = require('fs-extra');\nvar path      = require('path');\nvar moment    = require('moment');\nvar events    = require('events');\nvar inherits  = require('inherits');\nvar logger    = require('winston');\n\nvar LogService = function(project) {\n  this.project = project;\n};\n\ninherits(LogService, events.EventEmitter);\n\nLogService.prototype.downloadLog = function(logId) {\n  var self = this;\n  return new Promise(function(resolve, reject) {\n    // create test name directory in debug/tests\n    if (!fs.existsSync(path.join(self.project.path, 'debug', 'logs'))) {\n      fs.mkdirpSync(path.join(self.project.path, 'debug', 'logs'));\n    }\n\n    var url = self.project.sfdcClient.conn.tooling._baseUrl() + '/sobjects/ApexLog/'+logId+'/Body';\n    self.project.sfdcClient.conn.tooling.request(url, function(err, res) {\n      if (err) { \n        reject(new Error('Could not download log: '+err.message));  \n      } else {\n        var logFileName = [moment().format('YYYY-MM-DD HH-mm-ss'), 'log'].join('.');\n        var filePath = path.join(self.project.path, 'debug', 'logs', logFileName);\n        fs.outputFile(filePath, res, function(e) {\n          if (e) {\n            reject(new Error('Could not write log file: '+e.message));  \n          } else {\n            self.emit('mavensmate-log-downloaded', filePath);\n            resolve(filePath);\n          }\n        });\n      }\n    });\n  });\n};\n\nLogService.prototype.getLogs = function() {\n  var self = this;\n  return new Promise(function(resolve, reject) {\n    try {\n      var projectLogsPath = path.join(self.project.path, 'debug', 'logs');\n      var logPaths = [];\n      fs.readdir(projectLogsPath, function(err, files) {\n        _.each(files, function(f) {\n          logPaths.push(path.join(projectLogsPath, f));\n        });\n        resolve(logPaths);\n      });\n    } catch(e) {\n      reject(e);\n    }\n  });\n};\n\nLogService.prototype.getLog = function(location) {\n  var self = this;\n  return new Promise(function(resolve, reject) {\n    try {\n      if (!fs.existsSync(location)) {\n        return reject(new Error('Log file not found'))\n      }\n      fs.readFile(location, 'utf8', function (err, data) {\n        if (err) {\n          reject(err);\n        } else {\n          var fileLines = data.toString().split(/\\r?\\n/);\n          logger.debug('doneeee');\n          resolve(fileLines);\n        }\n      });\n    } catch(e) {\n      reject(e);\n    }\n  });\n};\n\nLogService.prototype.filter = function(location, keyword) {\n  var self = this;\n  return new Promise(function(resolve, reject) {\n    try {\n      if (!fs.existsSync(location)) {\n        return reject(new Error('Log file not found'))\n      }\n      var matchingLines = [];\n      /*\n        Matching by the timestamp at the very begining of every log entry.\n        Using positive lookahead (?=) because it doesn't remove the matching string from the returned splits (don't want to actually remove the timestamps).\n        Using the modifiers:\n        - global : Don't return on first match.\n        - multi-line : ^ and $ match the begining and end of each line instead of string only.\n      */\n      var fileLines = fs.readFileSync(location, 'utf8').toString().split(/(?=^\\d{2}:\\d{2}:\\d{2}\\.\\d+ \\(\\d+\\)\\|)/gm);\n      var matcher = new RegExp(keyword, 'i');\n      _.each(fileLines, function(fl) {\n        if (matcher.test(fl)) {\n          matchingLines.push(fl);\n        }\n      });\n      resolve(matchingLines);\n    } catch(e) {\n      reject(e);\n    }\n  });\n};\n\nmodule.exports = LogService;\n\n\n\n/** WEBPACK FOOTER **\n ** ../mavensmate/app/lib/services/log.js\n **/","/**\n * @file Responsible for creating and deploying static resource bundles\n * @author Joseph Ferraro <@joeferraro>\n */\n\n'use strict';\n\nvar _               = require('lodash');\nvar fs              = require('fs-extra-promise');\nvar path            = require('path');\nvar Promise         = require('bluebird');\nvar mavensMateFile  = require('../file');\nvar util            = require('../util');\nvar logger          = require('winston');\nvar Deploy          = require('./deploy');\n\nvar ResourceBundleService = function(project) {\n  this.project = project;\n};\n\n/**\n * Create resource bundles for the provided files\n * @param  {Array} files - list of static resources\n * @return {Promise}\n */\nResourceBundleService.prototype.create = function(staticResourcePaths) {\n  var self = this;\n  return new Promise(function(resolve, reject) {\n    logger.debug(staticResourcePaths);\n\n    var files = [];\n    var writePromises = [];\n    _.each(staticResourcePaths, function(p) {\n      logger.debug(p);\n      var f = new mavensMateFile.MavensMateFile({ project: self.project, path: p });\n      if (!f.existsOnFileSystem) {\n        throw new Error('Could not find static resource path');\n      }\n      if (f.type.xmlName !== 'StaticResource') {\n        throw new Error('File is not a static resource');\n      } else {\n        files.push(f);\n        var bundlePath = path.join(self.project.path, 'resource-bundles', [f.name, 'resource'].join('.'));\n        if (fs.existsSync(bundlePath)) {\n          throw new Error('Resource bundle path already exists.');\n        }\n        fs.ensureDirSync(bundlePath);\n        writePromises.push(self._write(f.path, bundlePath));\n      }\n    });\n\n    Promise.all(writePromises)\n      .then(function() {\n        resolve();\n      })\n      .catch(function(e) {\n        reject(new Error('Could not create resource bundle(s): '+e.message));\n      })\n      .done();\n  });\n};\n\n/**\n * Writes static resource to the provided resource-bundle destination\n * @param  {String} staticResourcePath - location of static resource\n * @param  {String} destination        - location of static resource bundle\n * @return {Promise}\n */\nResourceBundleService.prototype._write = function(staticResourcePath, destination) {\n  return new Promise(function(resolve, reject) {\n    var readStream = fs.createReadStream(staticResourcePath);\n    util.writeStream(readStream, destination)\n      .then(function() {\n        resolve(destination);\n      })\n      .catch(function(e) {\n        reject(new Error('Could not write bundle stream for '+staticResourcePath+': '+e.message));\n      })\n      .done();\n  });\n};\n\n/**\n * Deploys resource-bundles to server (zips bundle, copies to staticresources, deploys)\n * @param  {String} bundlePath - bundle path to deploy\n * @return {Promise}\n */\nResourceBundleService.prototype.deploy = function(bundlePaths) {\n  var self = this;\n  return new Promise(function(resolve, reject) {\n    logger.debug('deploying resource bundle paths: ', bundlePaths);\n\n    var zipPromises = [];\n    var mavensMateFiles = [];\n\n    _.each(bundlePaths, function(bp) {\n      var staticResourcePath = path.join(self.project.path, 'src', 'staticresources', path.basename(bp));\n      logger.debug('static resource path is: '+staticResourcePath);\n      mavensMateFiles.push( new mavensMateFile.MavensMateFile({ project: self.project, path: staticResourcePath }) );\n      zipPromises.push(self._zip(bp, staticResourcePath));\n    });\n\n    var compileSubscription = mavensMateFile.createPackageSubscription(mavensMateFiles, self.project.packageXml);\n\n    Promise.all(zipPromises)\n      .then(function() {\n        logger.debug('directories zipped, prepping for deployment');\n        var deploy = new Deploy({ project: self.project });\n        deploy.compileWithMetadataApi(mavensMateFiles, compileSubscription)\n          .then(function(result) {\n            resolve(result);\n          })\n          .catch(function(error) {\n            reject(error);\n          })\n          .done();\n      })\n      .catch(function(error) {\n        reject(error);\n      })\n      .done();\n  });\n};\n\nResourceBundleService.prototype._zip = function(bundlePath, staticResourcePath) {\n  return new Promise(function(resolve, reject) {\n\n    // remove static resource file\n    if (fs.existsSync(staticResourcePath)) {\n      fs.removeAsync(staticResourcePath)\n        .then(function() {\n          var staticResourceFileName = path.basename(bundlePath);\n          logger.debug('zipping '+bundlePath+', TO: '+path.dirname(staticResourcePath));\n          // zip resource-bundle directory, place in static resource path\n          return util.zipDirectory(bundlePath, path.dirname(staticResourcePath), '', 'resource', staticResourceFileName.split('.')[0]);\n        })\n        .then(function() {\n          resolve();\n        })\n        .catch(function(err) {\n          reject(err);\n        });\n    }\n  });\n};\n\nmodule.exports = ResourceBundleService;\n\n\n\n\n/** WEBPACK FOOTER **\n ** ../mavensmate/app/lib/services/resource-bundle.js\n **/","/**\n * @file Service for retrieving MavensMate templates from their local or remote source\n * @author Joseph Ferraro <@joeferraro>\n */\n\n'use strict';\nvar Promise   = require('bluebird');\nvar path      = require('path');\nvar util      = require('../util');\nvar request   = require('request');\nvar config    = require('../../config');\nvar logger    = require('winston');\n\nfunction TemplateService() { }\n\nTemplateService.prototype.getTemplatesForType = function(metadataTypeXmlName) {\n  var self = this;\n  return new Promise(function(resolve, reject) {\n    self._getPackage()\n      .then(function(pkg) {\n        resolve(pkg[metadataTypeXmlName]);\n      })\n      .catch(function(e) {\n        reject(new Error('Could not retrieve templates for type: '+metadataTypeXmlName+', '+e.message));\n      })\n      .done();\n  });\n};\n\nTemplateService.prototype.getTemplateBody = function(metadataTypeXmlName, templateOrTemplateFileName) {\n  return new Promise(function(resolve, reject) {\n    /*jshint camelcase: false */\n    var templateFileName = templateOrTemplateFileName.file_name ? template.file_name : templateOrTemplateFileName; // TODO: standardize format\n    var templateSource = config.get('mm_template_source');\n    if (templateSource === undefined || templateSource === '') {\n      templateSource = 'joeferraro/MavensMate-Templates/master';\n    }\n    var templateLocation = config.get('mm_template_location');\n    if (templateLocation === undefined || templateLocation === '') {\n      templateLocation = 'remote';\n    }\n\n    logger.debug('templateSource', templateSource);\n    logger.debug('templateLocation', templateLocation);\n\n    var templateBody;\n    try {\n      if (templateLocation === 'remote') {\n        request('https://raw.githubusercontent.com/'+templateSource+'/'+metadataTypeXmlName+'/'+templateFileName, function(error, response, body) {\n          if (!error && response.statusCode === 200) {\n            templateBody = body;\n          } else {\n            templateBody = util.getFileBody(path.join(templateSource,metadataTypeXmlName,templateFileName));\n          }\n          resolve(templateBody);\n        });\n      } else if (templateLocation === 'local') {\n        templateBody = util.getFileBody(path.join(templateSource,metadataTypeXmlName,templateFileName));\n        resolve(templateBody);\n      } else {\n        templateBody = util.getFileBody(path.join(__dirname,'templates','github',metadataTypeXmlName,templateFileName));\n        resolve(templateBody);\n      }\n    } catch(e) {\n      logger.error('Could not retrieve template body', e);\n      templateBody = util.getFileBody(path.join(__dirname,'templates','github',metadataTypeXmlName,templateFileName));\n      resolve(templateBody);\n    }\n  });\n};\n\nTemplateService.prototype._getPackage = function() {\n  return new Promise(function(resolve, reject) {\n    /*jshint camelcase: false */\n    try {\n      var templateSource = config.get('mm_template_source');\n      if (!templateSource) {\n        templateSource = 'joeferraro/MavensMate-Templates/master';\n      }\n      var templateLocation = config.get('mm_template_location');\n      if (!templateLocation) {\n        templateLocation = 'remote';\n      }\n\n      var templatePackage;\n      if (templateLocation === 'remote') {\n        request('https://raw.githubusercontent.com/'+templateSource+'/package.json', function(error, response, body) {\n          if (!error && response.statusCode === 200) {\n            templatePackage = JSON.parse(body);\n          } else {\n            templatePackage = util.getFileBody(path.join(__dirname,'templates','github','package.json'), true);\n          }\n          resolve(templatePackage);\n        });\n      } else if (templateLocation === 'local') {\n        templatePackage = JSON.parse(util.getFileBody(path.join(templateSource,'package.json')));\n        resolve(templatePackage);\n      } else {\n        templatePackage = util.getFileBody(path.join(__dirname,'templates','github','package.json'), true);\n        resolve(templatePackage);\n      }\n    } catch(e) {\n      reject(new Error('Could not obtain template package: '+e.message));\n    }\n    /*jshint camelcase: true */\n  });\n};\n\nmodule.exports = TemplateService;\n\n\n/** WEBPACK FOOTER **\n ** ../mavensmate/app/lib/services/template.js\n **/","module.exports = function(str) {\n  if (str) {\n    return str.replace(/[_-]+(\\w)/g, function(m) {\n      return m[1].toUpperCase();\n    });\n  } else {\n    return '';\n  }\n}\n\n\n/** WEBPACK FOOTER **\n ** ../mavensmate/app/lib/utilities/camelize.js\n **/","module.exports = require(\"child_process\");\n\n\n/*****************\n ** WEBPACK FOOTER\n ** external \"child_process\"\n ** module id = 97\n ** module chunks = 0\n **/","module.exports = require(\"findit\");\n\n\n/*****************\n ** WEBPACK FOOTER\n ** external \"findit\"\n ** module id = 98\n ** module chunks = 0\n **/","module.exports = require(\"merge\");\n\n\n/*****************\n ** WEBPACK FOOTER\n ** external \"merge\"\n ** module id = 99\n ** module chunks = 0\n **/","module.exports = require(\"request\");\n\n\n/*****************\n ** WEBPACK FOOTER\n ** external \"request\"\n ** module id = 100\n ** module chunks = 0\n **/","module.exports = require(\"which\");\n\n\n/*****************\n ** WEBPACK FOOTER\n ** external \"which\"\n ** module id = 101\n ** module chunks = 0\n **/","var electron      = require('electron');\nvar app           = electron.app;\nvar autoUpdater   = electron.autoUpdater;\nvar ipcMain       = electron.ipcMain;\nvar os            = require('os');\nvar util          = require('./util');\nvar nslog         = require('nslog');\n\nconst UPDATE_SERVER_HOST = 'mavensmate-app-auto-updater.herokuapp.com'\n\nfunction AppUpdater(window, config) {\n  var self = this;\n  if (util.isDev()) {\n      return;\n  }\n\n  this.window = window;\n\n  var version = app.getVersion();\n  var channel = config.get('mm_beta_channel', false) ? 'beta' : 'stable';\n\n  autoUpdater.addListener('update-available', function (event) {\n    console.log('A new update is available');\n    nslog('An update is available from channel: '+channel);\n  });\n  autoUpdater.addListener('update-downloaded', function (event, releaseNotes, releaseName, releaseDate, updateURL) {\n    if (util.isMac()) {\n      nslog('Update from channel '+channel+' is ready to install on quit: '+updateURL);\n    }\n    self._notify(releaseName);\n  });\n  autoUpdater.addListener('error', function (error) {\n    console.log(error);\n    nslog('Error updating from channel '+channel+': '+error.message);\n  });\n  autoUpdater.addListener('checking-for-update', function (event) {\n    console.log('checking-for-update in channel: '+channel);\n    nslog('Checking for update in channel: '+channel);\n  });\n  autoUpdater.addListener('update-not-available', function () {\n    console.log('update-not-available for channel: '+channel);\n    nslog('Update not available for channel: '+channel);\n    // if beta user, autoupdater checks beta channel first, if an update isn't available in the beta channel, we look for an update in the stable channel\n    if (channel === 'beta') {\n      console.log('updater checking stable channel');\n      nslog('updater checking stable channel');\n      channel = 'stable';\n      autoUpdater.setFeedURL('https://' + UPDATE_SERVER_HOST + '/update/channel/'+ channel + '/' + os.platform() + '_' + os.arch() + '/' + version);\n      autoUpdater.checkForUpdates();\n    }\n  });\n\n  ipcMain.on('quit-and-install', function() {\n    autoUpdater.quitAndInstall();\n  });\n\n  autoUpdater.setFeedURL('https://' + UPDATE_SERVER_HOST + '/update/channel/' + channel + '/' + os.platform() + '_' + os.arch() + '/' + version);\n  autoUpdater.checkForUpdates();\n}\n\nAppUpdater.prototype._notify = function(releaseName) {\n  if (util.isLinux() || util.isWindows()) {\n    this.window.webContents.send('update-available', releaseName, 'download');\n  } else if (util.isMac()) {\n    this.window.webContents.send('update-available', releaseName, 'quit');\n  }\n}\n\nmodule.exports = AppUpdater;\n\n\n/** WEBPACK FOOTER **\n ** ./src/electron/lib/updater/index.js\n **/","var electron  = require('electron');\nvar os        = require('os');\n\nvar exports = module.exports = {};\n\nexports.isDev = function() {\n  return electron.app.getAppPath().includes('/node_modules/electron-prebuilt/')\n}\n\nexports.isWindows = function() {\n  return os.platform() === 'win32';\n};\n\nexports.isLinux = function() {\n  return os.platform() === 'linux';\n};\n\nexports.isMac = function() {\n  return os.platform() === 'darwin';\n};\n\n\n/** WEBPACK FOOTER **\n ** ./src/electron/lib/updater/util.js\n **/","/**\n * @file HTTP Server that renders UIs and can run commands synchronously and asynchronously\n * @author Joseph Ferraro <@joeferraro>\n */\n\n'use strict';\n\nvar _                 = require('lodash');\nvar path              = require('path');\nvar swig              = require('swig');\nvar express           = require('express');\nvar bodyParser        = require('body-parser');\nvar config            = require('./config');\nvar logger            = require('./lib/logger')();\nvar EditorService     = require('./lib/services/editor');\nvar ViewHelper        = require('./helper');\nvar requestStore      = require('./lib/request-store');\nvar util              = require('./lib/util');\nvar app, server;\n\n/**\n * Starts the MavensMate HTTP server\n * @param  {Object} opts - server options\n * @param  {Integer} opts.port - server port\n * @param  {String} opts.mode - when running in MavensMate-Desktop, this value is \"desktop\"\n * @param  {Function} opts.openWindowFn - function used to open windows (optional)\n * @return {Object} - express app\n */\nmodule.exports.start = function(opts) {\n  return new Promise(function(resolve, reject) {\n    opts = opts || {};\n\n    if (!config.get('mm_workspace') || (_.isArray(config.get('mm_workspace')) && config.get('mm_workspace').length === 0)) {\n      config.set('mm_workspace', [ util.getDefaultWorkspaceSetting() ]);\n      config.save();\n    }\n\n    app = express();\n\n    app.use(bodyParser.urlencoded({ extended: true }));\n    app.use(bodyParser.json({ limit: '100mb' }));\n\n    app.use(require('./middleware/cors'));\n    app.use(require('./middleware/logging'));\n    app.use(require('./middleware/editor'));\n    app.use(require('./middleware/project'));\n    app.use(require('./middleware/swig'));\n\n    var viewHelper = new ViewHelper({\n      port: opts.port,\n      supportedEditors: new EditorService().supportedEditors\n    });\n\n    swig.setDefaults({\n      runInVm: true,\n      locals: {\n        mavensmate : {\n          ui : viewHelper\n        }\n      },\n      loader: swig.loaders.fs(path.join(path.dirname(__dirname), 'app'))\n    });\n\n    app.engine('html', swig.renderFile);\n    app.set('swig', swig);\n    app.set('view engine', 'html');\n    app.set('views', path.join(__dirname, 'views'));\n    app.set('view cache', false);\n\n    app.set('helper', viewHelper);\n\n    app.use('/app/static', express.static(path.join(util.getAppRoot(), 'app', 'public')));\n    app.use(require('./routes'));\n\n    app.set('commandExecutor', require('./lib/commands')(opts.openWindowFn));\n    app.set('openWindowFn', opts.openWindowFn);\n    app.set('requestStore', requestStore); // todo: move to proper cache\n    app.set('projects', []); // managed in project middleware (todo: move to proper cache)\n    app.set('mode', opts.mode);\n\n    server = app.listen(opts.port, function() {\n      process.env.MAVENSMATE_SERVER_PORT = opts.port;\n      process.env.MAVENSMATE_CONTEXT = 'server';\n      app.set('io', require('socket.io')(server));\n      resolve({\n        app: app,\n        server: server\n      });\n    });\n\n    server.on('error', function(err) {\n      logger.error(err);\n      reject(err);\n    });\n  });\n};\n\n/**\n * Stops express server, clears process vars\n * @return {Nothing}\n */\nmodule.exports.stop = function() {\n  return new Promise(function(resolve, reject) {\n    server.close(function() {\n      delete process.env.MAVENSMATE_SERVER_PORT;\n      delete process.env.MAVENSMATE_CONTEXT;\n      resolve();\n    });\n  });\n};\n\n\n/** WEBPACK FOOTER **\n ** ../mavensmate/app/index.js\n **/","/**\n * @file Sets up winston logging. bin/mavensmate / bin/server require and configure, other modules simply require('winston') to share global winston object.\n * @author Joseph Ferraro <@joeferraro>\n */\n\n 'use strict';\n\n/**\n * initiates logging via winston\n * @param  {Object} opts\n * @param  {Object} opts.program - Commander.js program (optional)\n * @return {Object} - winston logger\n */\nmodule.exports = function(opts) {\n  opts = opts || {};\n\n  var fs = require('fs');\n  var path = require('path');\n  var winston = require('winston');\n  var config = require('../config');\n\n  try {\n    winston.remove(winston.transports.Console);\n  } catch(e) { }\n\n  var logLevel;\n  if (config.get('mm_log_level')) {\n    logLevel = config.get('mm_log_level').toLowerCase();\n  } else {\n    logLevel = 'info';\n  }\n\n  // if we're not a cli client or if our cli client is verbose, log to the console\n  if (!opts.program || (opts.program && opts.program.verbose)) {\n    winston.cli();\n    winston.add(winston.transports.Console, {\n      level: logLevel,\n      exitOnError: false,\n      prettyPrint: true,\n      colorize: true\n    });\n  }\n\n  // place logs in mm_log_location if it exists\n  if (fs.existsSync(config.get('mm_log_location'))) {\n    try {\n      winston.add(winston.transports.File, {\n        filename: path.join(config.get('mm_log_location'), 'mavensmate.log'),\n        level: logLevel,\n        json: false\n      });\n    } catch(e) {\n      if (e.message.indexOf('Transport already attached') === -1) {\n        throw e;\n      }\n    }\n  }\n\n  winston.info('MavensMate log level: '+logLevel);\n\n  return winston;\n};\n\n\n/** WEBPACK FOOTER **\n ** ../mavensmate/app/lib/logger.js\n **/","/*\n * @file global MavensMate process\n * @author Joe Ferraro <@joeferraro>\n */\n\nvar mavensmate = exports;\n\nvar Promise = require('bluebird');\nvar server  = require('../index');\n\nmavensmate.CommandExecutor = require('./commands');\nmavensmate.Project = require('./project');\nmavensmate.SalesforceClient = require('./sfdc-client');\n\nmavensmate.startServer = function(opts) {\n  return new Promise(function(resolve, reject) {\n    opts = opts || {};\n    try {\n      var port = opts.port || '56248';\n      var verbose = opts.verbose || false;\n      server.start({\n        port: port,\n        verbose: opts.verbose,\n        openWindowFn: opts.openWindowFn,\n        mode: opts.mode\n      })\n      .then(function(res) {\n        console.log('MavensMate server running on port: '+port);\n        res.config = require('../config');\n        res.logger = require('winston');\n        resolve(res);\n      })\n      .catch(function(e) {\n        console.error('Could not run MavensMate server', e);\n        reject(e);\n      });\n    } catch(e) {\n      console.error('MavensMate server failed to start: '+e.message);\n      reject(e);\n    }\n  });\n};\n\nmavensmate.stopServer = function(opts) {\n  server.stop();\n};\n\n\n/** WEBPACK FOOTER **\n ** ../mavensmate/app/lib/mavensmate.js\n **/","/**\n * @file Responsible for compilation of Salesforce metadata (Custom Objects, Apex Classes, Lightning files, etc.)\n * @author Joseph Ferraro <@joeferraro>\n */\n\n'use strict';\n\nvar Promise           = require('bluebird');\nvar _                 = require('lodash');\nvar logger            = require('winston');\nvar temp              = require('temp');\nvar config            = require('../../config');\nvar LightningService  = require('./lightning');\nvar MetadataHelper    = require('../metadata').MetadataHelper;\nvar Deploy            = require('./deploy');\nvar fs                = require('fs-extra');\nvar mavensMateFile    = require('../file');\nvar config            = require('../../config');\nvar moment            = require('moment');\nvar Package           = require('../package').Package;\n\n/**\n * Responsible for compiling local copies of files/directories\n * @param {Project} project - project instance (required)\n * @param {Array} paths - array of path strings [ 'foo/bar/src/classes', 'foo/bar/src/pages/foo.page' ]\n */\nvar CompileDelegate = function(project, paths, force) {\n  if (!project || !paths) {\n    throw new Error('CompileDelegate requires a valid project instance and an array of paths to compile.');\n  }\n  this.project = project;\n  this.paths = paths;\n  this.force = force;\n  this.metadataHelper = new MetadataHelper({ sfdcClient : this.project.sfdcClient });\n};\n\n// we standardize the result output to match that of the metadata api compilation/deploy response\n//\n// { checkOnly: false,\n//   completedDate: '2015-01-19T23:55:03.000Z',\n//   createdBy: '005o0000000TB1i',\n//   createdByName: 'Joseph Ferraro',\n//   createdDate: '2015-01-19T23:55:03.000Z',\n//   details:\n//    { componentSuccesses: [ [Object], [Object], [Object] ],\n//      runTestResult: { numFailures: '0', numTestsRun: '0', totalTime: '0.0' },\n//      componentFailures: [] },\n//   done: true,\n//   id: '0Afo000000Ft2NbCAJ',\n//   ignoreWarnings: false,\n//   lastModifiedDate: '2015-01-19T23:55:03.000Z',\n//   numberComponentErrors: 0,\n//   numberComponentsDeployed: 2,\n//   numberComponentsTotal: 2,\n//   numberTestErrors: 0,\n//   numberTestsCompleted: 0,\n//   numberTestsTotal: 0,\n//   rollbackOnError: true,\n//   runTestsEnabled: 'false',\n//   startDate: '2015-01-19T23:55:03.000Z',\n//   status: 'Succeeded',\n//   success: true }\n\n/**\n * Executes local and server compile for all delegate paths\n * @return {Promise}\n */\nCompileDelegate.prototype.execute = function() {\n  // TODO: implement stash\n  var self = this;\n  return new Promise(function(resolve, reject) {\n    self._performCompile()\n      .then(function(compileResults) {\n        resolve(self._flattenResults(compileResults));\n      })\n      .catch(function(err) {\n        reject(err);\n      });\n  });\n};\n\nCompileDelegate.prototype._flattenResults = function(compileResults) {\n  var result = {\n    checkOnly: false,\n    completedDate: '',\n    createdBy: '',\n    createdByName: '',\n    createdDate: '',\n    details:\n     { componentSuccesses: [],\n       runTestResult: { numFailures: '0', numTestsRun: '0', totalTime: '0.0' },\n       componentFailures: []\n     },\n    done: false,\n    id: '',\n    ignoreWarnings: false,\n    lastModifiedDate: '',\n    numberComponentErrors: 0,\n    numberComponentsDeployed: 0,\n    numberComponentsTotal: 0,\n    numberTestErrors: 0,\n    numberTestsCompleted: 0,\n    numberTestsTotal: 0,\n    rollbackOnError: false,\n    runTestsEnabled: 'false',\n    startDate: '',\n    status: '',\n    success: true };\n\n  logger.debug('flattening results: ');\n\n  _.each(compileResults, function(res) {\n    logger.debug('compile result:');\n    logger.debug(res);\n\n    if (_.has(res, 'runTestsEnabled')) {\n      // this is metadata api result\n      result = res;\n    } else if (_.has(res, 'hasConflict') && !res.success) {\n      result.details.conflicts = res.conflicts;\n      result.status = 'Conflict';\n      result.success = false;\n      result.done = true;\n    } else if (_.isArray(res)) {\n      if (!result.details.componentFailures) {\n        result.details.componentFailures = [];\n      }\n      _.each(res, function(r) {\n        if (_.has(r, 'State')) {\n          // tooling result\n          if (r.State === 'Completed') {\n            result.numberComponentsDeployed++;\n            result.details.componentSuccesses.push(r);\n          } else {\n            result.numberComponentErrors++;\n            result.details.componentFailures.push(r);\n            result.success = false;\n          }\n        }\n      });\n    }\n  });\n\n  logger.debug('compile results: ');\n  logger.debug(JSON.stringify(result));\n  return result;\n};\n\nCompileDelegate.prototype._performCompile = function() {\n  var self = this;\n  return new Promise(function(resolve, reject) {\n    if (self.paths.length === 0) {\n      return resolve();\n    }\n\n    logger.debug('compiling paths: ');\n    logger.debug(self.paths);\n\n    var compileWithToolingApi = config.get('mm_compile_with_tooling_api');\n    var files = mavensMateFile.createFileInstances(self.paths, self.project);\n    var lightningBundleItemFiles = mavensMateFile.getLightningBundleItemFiles(files);\n    var toolingFiles = mavensMateFile.getToolingFiles(files, !compileWithToolingApi);\n    var metadataApiFiles = mavensMateFile.getMetadataApiFiles(files, compileWithToolingApi);\n    var compileSubscription = mavensMateFile.createPackageSubscription(files, self.project.packageXml, compileWithToolingApi);\n\n    var compilePromises = [];\n\n    if (metadataApiFiles.length > 0) {\n      compilePromises.push(self._compileGenericMetadata(metadataApiFiles, compileSubscription));\n    }\n\n    if (toolingFiles.length > 0) {\n      if (config.get('mm_legacy_compile')) {\n        compilePromises.push(self._compileToolingFilesLegacy(toolingFiles));\n      } else {\n        compilePromises.push(self._compileToolingFiles(toolingFiles));\n      }\n    }\n\n    if (lightningBundleItemFiles.length > 0) {\n      compilePromises.push(self._compileLightningBundleItemFiles(lightningBundleItemFiles));\n    }\n\n    Promise.all(compilePromises)\n      .then(function(res) {\n        resolve(res);\n      })\n      .catch(function(err) {\n        // TODO: revert via stash\n        reject(err);\n      });\n  });\n};\n\nCompileDelegate.prototype._compileToolingFilesLegacy = function(toolingFiles) {\n  var self = this;\n  return new Promise(function(resolve, reject) {\n    logger.debug('compiling via tooling api, using legacy method (metadata api retrieve upon successul compilation)');\n    var toolingFilesPayload = [];\n    _.each(toolingFiles, function(tf) {\n      if (tf.isDirectory) {\n        // get directory contents\n        toolingFilesPayload = toolingFilesPayload.concat(tf.localMembers);\n      } else {\n        toolingFilesPayload.push(tf);\n      }\n    });\n\n    var compileResult;\n    var retrievePackage;\n    self._checkConflicts(toolingFilesPayload)\n      .then(function(conflictCheckResult) {\n        if (conflictCheckResult.hasConflict) {\n          return resolve(conflictCheckResult);\n        } else {\n          self.project.sfdcClient.compileWithToolingApi(toolingFilesPayload, self.project)\n            .then(function(result) {\n              logger.debug('compile via tooling api result: ');\n              logger.debug(result);\n              compileResult = result;\n              retrievePackage = new Package({ subscription: mavensMateFile.createPackageSubscription(toolingFilesPayload) });\n              return retrievePackage.init();\n            })\n            .then(function() {\n              return self.project.sfdcClient.retrieveUnpackaged(retrievePackage.subscription);\n            })\n            .then(function(retrieveResult) {\n              return self.project.updateLocalStore(retrieveResult.fileProperties);\n            })\n            .then(function() {\n              resolve(compileResult);\n            })\n            .catch(function(error) {\n              reject(error);\n            })\n            .done();\n        }\n      })\n      .catch(function(error) {\n        reject(error);\n      })\n      .done();\n  });\n};\n\nCompileDelegate.prototype._compileToolingFiles = function(toolingFiles) {\n  var self = this;\n  return new Promise(function(resolve, reject) {\n    logger.debug('compiling via tooling api');\n    var toolingFilesPayload = [];\n    _.each(toolingFiles, function(tf) {\n      if (tf.isDirectory) {\n        // get directory contents\n        toolingFilesPayload = toolingFilesPayload.concat(tf.localMembers);\n      } else {\n        toolingFilesPayload.push(tf);\n      }\n    });\n\n    var compileResult;\n    var retrievePackage;\n    self._checkConflicts(toolingFilesPayload)\n      .then(function(conflictCheckResult) {\n        if (conflictCheckResult.hasConflict) {\n          return resolve(conflictCheckResult);\n        } else {\n          self.project.sfdcClient.compileWithToolingApi(toolingFilesPayload, self.project)\n            .then(function(result) {\n              logger.debug('compile via tooling api result: ');\n              logger.debug(result);\n              compileResult = result;\n              return self.project.sfdcClient.getServerProperties(toolingFiles);\n            })\n            .then(function(serverPropertiesResult) {\n              logger.silly(serverPropertiesResult);\n              return self.project.updateLocalStore(serverPropertiesResult);\n            })\n            .then(function() {\n              resolve(compileResult);\n            })\n            .catch(function(error) {\n              reject(error);\n            })\n            .done();\n        }\n      })\n      .catch(function(error) {\n        reject(error);\n      })\n      .done();\n  });\n};\n\n/**\n * Compiles metadata, will use metadata API or tooling API based on the metadata payload requested\n * @param  {Array} type Metadata - metadata to be compiled (must already exist in salesforce)\n * @return {Promise}\n */\nCompileDelegate.prototype._compileGenericMetadata = function(metadataApiFiles, compileSubscription) {\n  var self = this;\n  return new Promise(function(resolve, reject) {\n    logger.debug('compiling via metadata api');\n    logger.debug(compileSubscription);\n\n    var metadataApiFilesPayload = [];\n    _.each(metadataApiFiles, function(f) {\n      if (f.isDirectory) {\n        // get directory contents\n        metadataApiFilesPayload = metadataApiFilesPayload.concat(f.localMembers);\n      } else {\n        metadataApiFilesPayload.push(f);\n      }\n    });\n\n    self._checkConflicts(metadataApiFilesPayload)\n      .then(function(conflictCheckResult) {\n        if (conflictCheckResult.hasConflict) {\n          return resolve(conflictCheckResult);\n        } else {\n          var deploy = new Deploy({ project: self.project });\n          deploy.compileWithMetadataApi(metadataApiFilesPayload, compileSubscription)\n            .then(function(result) {\n              logger.debug('compile via metadata api result: ');\n              logger.debug(result);\n              resolve(result);\n            })\n            .catch(function(error) {\n              reject(error);\n            })\n            .done();\n        }\n      })\n      .catch(function(error) {\n        reject(error);\n      })\n      .done();\n  });\n};\n\n/**\n * Compiles metadata, will use metadata API or tooling API based on the metadata payload requested\n * @param  {Array} type Metadata - metadata to be compiled (must already exist in salesforce)\n * @return {Promise}\n */\nCompileDelegate.prototype._compileLightningBundleItemFiles = function(files) {\n  var self = this;\n  return new Promise(function(resolve, reject) {\n    var lightningService = new LightningService(self.project);\n    lightningService.update(files)\n      .then(function(result) {\n        logger.debug('compile lightning result: ');\n        logger.debug(result);\n        resolve(result);\n      })\n      .catch(function(error) {\n        reject(error);\n      })\n      .done();\n  });\n};\n\n/**\n * Checks for conflict between local copy and server copy\n * @param  {Array} files - array of MavensMateFiles\n * @return {Promise}\n */\nCompileDelegate.prototype._checkConflicts = function(files) {\n  var self = this;\n  return new Promise(function(resolve, reject) {\n    try {\n      if (!config.get('mm_compile_check_conflicts') || self.force) {\n        return resolve({ hasConflict: false });\n      }\n\n      logger.debug('checking for conflicts');\n\n      var result = { hasConflict: false };\n      var conflicts = {};\n\n      var serverCopyPromises = [];\n      _.each(files, function(f) {\n        if (f.isToolingType) {\n          serverCopyPromises.push( f.serverCopy );\n        }\n      });\n\n      if (serverCopyPromises.length === 0) {\n        return resolve({ hasConflict: false });\n      }\n\n      Promise.all(serverCopyPromises)\n        .then(function(serverCopyResults) {\n          _.each(files, function(f, i) {\n            // logger.debug('local copy:');\n            // logger.debug(f.localStoreEntry);\n            // logger.debug('remote copy:');\n            // logger.debug(serverCopyResults[i]);\n            if (!f.localStoreEntry) {\n              return reject(new Error('No local index found for '+f.name+'. This can happen if you fetch your project from a remote git repository. Please ensure your project subscription includes the metadata type: \"'+f.type.xmlName+'\", then run the \"Clean Project\" command to update your local index of metadata.'))\n              return false;\n            }\n\n            var localLastModified = moment(f.localStoreEntry.lastModifiedDate);\n            var remoteLastModified = moment(serverCopyResults[i].LastModifiedDate);\n\n            if (remoteLastModified.isAfter(localLastModified)) {\n              logger.debug('conflict detected between: ');\n              logger.debug(f.localStoreEntry);\n              logger.debug(serverCopyResults[i]);\n\n              var tempFile = temp.openSync({ prefix: 'mm_', suffix: ' [SERVER COPY].'+self.metadataHelper.getTypeByXmlName(f.localStoreEntry.type).suffix });\n              fs.writeSync(tempFile.fd, serverCopyResults[i].Body);\n              serverCopyResults[i].tempPath = tempFile.path;\n\n              conflicts[f.basename] = {\n                local: f.localStoreEntry,\n                remote: serverCopyResults[i]\n              };\n            }\n          });\n\n          if (Object.keys(conflicts).length > 0) {\n            result.hasConflict = true;\n            result.success = false;\n            result.conflicts = conflicts;\n          }\n\n          logger.debug('conflict check result:');\n          logger.debug(result);\n\n          return resolve(result);\n        })\n        .catch(function(err) {\n          logger.error('error checking conflicts', err);\n          reject(err);\n        });\n    } catch(e) {\n      logger.error('Could not check conflicts: ');\n      logger.error(e);\n      reject(e);\n    }\n  });\n};\n\nmodule.exports = CompileDelegate;\n\n\n\n/** WEBPACK FOOTER **\n ** ../mavensmate/app/lib/services/compile.js\n **/","/**\n * @file Responsible for deletion of Salesforce metadata (Custom Objects, Apex Classes, Lightning files, etc.)\n * @author Joseph Ferraro <@joeferraro>\n */\n\n'use strict';\n\nvar Promise           = require('bluebird');\nvar _                 = require('lodash');\nvar logger            = require('winston');\nvar LightningService  = require('./lightning');\nvar Deploy            = require('./deploy');\nvar fs                = require('fs-extra');\nvar util              = require('../util');\nvar path              = require('path');\nvar MetadataHelper    = require('../metadata').MetadataHelper;\nvar mavensMateFile    = require('../file');\nvar config            = require('../../config');\n\n/**\n * Responsible for deleting server and local copies of files/directories\n * @param {Project} project - project instance (required)\n * @param {Array} paths - array of path strings [ 'foo/bar/src/classes', 'foo/bar/src/pages/foo.page' ]\n */\nvar DeleteDelegate = function(project, paths) {\n  if (!project || !paths) {\n    throw new Error('DeleteDelegate requires a valid project instance and an array of paths to delete.');\n  }\n  this.project = project;\n  this.paths = paths;\n  this.metadataHelper = new MetadataHelper({ sfdcClient : this.project.sfdcClient });\n};\n\n/**\n * Executes local and server delete for all delegate paths\n * @return {Promise}\n */\nDeleteDelegate.prototype.execute = function() {\n  // TODO: implement stash\n  var self = this;\n  var deleteResult;\n  return new Promise(function(resolve, reject) {\n    _.each(self.paths, function(p) {\n      if (!fs.existsSync(p)) {\n        return reject(new Error('Invalid delete request. Path does not exist: '+p));\n      }\n    });\n\n    self._performDelete()\n      .then(function(res) {\n        deleteResult = res;\n        return self._deleteEmptyProjectDirectories();\n      })\n      .then(function() {\n        resolve(deleteResult);\n      })\n      .catch(function(err) {\n        // TODO: revert via stash\n        reject(err);\n      });\n  });\n};\n\nDeleteDelegate.prototype._deleteEmptyProjectDirectories = function() {\n  var self = this;\n  return new Promise(function(resolve, reject) {\n    try {\n      fs.readdirSync(path.join(self.project.path, 'src'))\n        .filter(function(res) {\n          if (fs.statSync(path.join(self.project.path, 'src', res)).isDirectory()) {\n            if (util.isDirectoryEmptySync(path.join(self.project.path, 'src', res))) {\n              fs.removeSync(path.join(self.project.path, 'src', res));\n            }\n          }\n        });\n      resolve();\n    } catch(e) {\n      reject(e);\n    }\n  });\n};\n\nDeleteDelegate.prototype._performDelete = function() {\n  var self = this;\n  return new Promise(function(resolve, reject) {\n    if (self.paths.length === 0) {\n      return resolve();\n    }\n\n    var files = mavensMateFile.createFileInstances(self.paths);\n    var lightningBundleItemFiles = mavensMateFile.getLightningBundleItemFiles(files);\n    var deleteSubscription = mavensMateFile.createPackageSubscription(files, self.project.packageXml);\n\n    var result = {};\n    var deployOptions = {\n      purgeOnDelete: config.get('mm_purge_on_delete') || false\n    };\n    var deploy = new Deploy({ project: self.project });\n    deploy.stageDelete(deleteSubscription)\n      .then(function(zipStream) {\n        return deploy.executeStream(zipStream, deployOptions);\n      })\n      .then(function(res) {\n        result = res;\n        logger.debug('Deletion result via metadata API: '+ JSON.stringify(result));\n        if (result.success && result.status === 'Succeeded') {\n          logger.debug('deleting paths locally');\n          _.each(files, function(sp) {\n            logger.debug('deleting: '+sp.path);\n            sp.deleteLocally();\n          });\n        }\n        if (!result.details.componentSuccesses) {\n          result.details.componentSuccesses = [];\n        }\n        if (!result.details.componentFailures) {\n          result.details.componentFailures = [];\n        }\n        return self._deleteLightningBundleItemFiles(lightningBundleItemFiles);\n      })\n      .then(function(res) {\n        if (res) {\n          _.each(res, function(r) {\n            if (!r.success) {\n              result.numberComponentErrors++;\n              result.componentFailures.push(r);\n            } else {\n              result.numberComponentsDeployed++;\n              result.componentSuccesses.push(r);\n            }\n            result.numberComponentsTotal++;\n          });\n          if (!_.find(res, { 'success': false })) {\n            _.each(lightningBundleItemFiles, function(sp) {\n              sp.deleteLocally();\n            });\n            if (res.status === 'Succeeded' && res.success) {\n              res.status = 'Failed';\n              res.success = false;\n            }\n          }\n        }\n        // console.log(result);\n        logger.debug(JSON.stringify(result));\n        resolve(result);\n      })\n      .catch(function(error) {\n        reject(error);\n      })\n      .done();\n  });\n};\n\n/**\n * Retrieves source of lightning bundle items, overwrite local copies\n * @param  {Array} lightningMetadata - array of Metadata of type Lightning\n * @return {Promise}\n * TODO: overwrite local copies\n */\nDeleteDelegate.prototype._deleteLightningBundleItemFiles = function(lightningFiles) {\n  var self = this;\n  return new Promise(function(resolve, reject) {\n    if (lightningFiles.length === 0) {\n      return resolve();\n    }\n\n    logger.debug('deleting lightning components');\n    logger.debug(lightningFiles[0].path);\n\n    var lightningService = new LightningService(self.project);\n    lightningService.deleteBundleItems(lightningFiles)\n      .then(function(result) {\n        logger.debug('delete result: ');\n        logger.debug(result);\n        resolve(result);\n      })\n      .catch(function(error) {\n        reject(error);\n      })\n      .done();\n  });\n};\n\nmodule.exports = DeleteDelegate;\n\n\n/** WEBPACK FOOTER **\n ** ../mavensmate/app/lib/services/delete.js\n **/","/**\n * @file Responsible for indexing Apex symbol tables locally (they go in a project's config/.symbols directory)\n * @author Joseph Ferraro <@joeferraro>\n */\n\n'use strict';\n\nvar Promise = require('bluebird');\nvar _       = require('lodash');\nvar logger  = require('winston');\nvar util    = require('../util');\nvar fs      = require('fs-extra');\nvar path    = require('path');\n\nvar SymbolService = function(project) {\n  this.project = project;\n};\n\n/**\n * Indexes Apex class symbols for an entire project\n * @return {Promise}\n */\nSymbolService.prototype.index = function() {\n  var self = this;\n  return new Promise(function(resolve, reject) {\n    self._getApexClassNames()\n      .then(function(classNames) {\n        var symbolPromises = [];\n        var classNameArrays = util.chunkArray(classNames, 10);\n        logger.debug(classNameArrays);\n        _.each(classNameArrays, function(classNames) {\n          symbolPromises.push(self._getSymbolsForClassNames(classNames));\n        });\n        return Promise.all(symbolPromises);\n      })\n      .then(function(symbolPromiseResults) {\n        logger.debug(self.classMap);\n        var writeSymbolPromises = [];\n        _.each(symbolPromiseResults, function(res) {\n          _.each(res.records, function(symbolQueryResult) {\n            writeSymbolPromises.push(self._writeSymbolTable(symbolQueryResult));\n          });\n        });\n        return Promise.all(writeSymbolPromises);\n      })\n      .then(function() {\n        resolve();\n      })\n      .catch(function(err) {\n        reject(new Error('Could not index Apex Symbols: '+err.message));\n      })\n      .done();\n  });\n};\n\n/**\n * Indexes Apex class symbols for a given class name\n * @param  {String} apexClassName - name of the apex class to be indexes\n * @return {Promise}\n */\nSymbolService.prototype.indexApexClass = function(apexClassName) {\n  var self = this;\n  return new Promise(function(resolve, reject) {\n    self._getSymbolsForClassNames([apexClassName])\n      .then(function(symbolQueryResult) {\n        return self._writeSymbolTable(symbolQueryResult.records[0]);\n      })\n      .then(function() {\n        resolve();\n      })\n      .catch(function(err) {\n        logger.error('Could not index Apex Symbols: '+err.message);\n        reject(err);\n      })\n      .done();\n  });\n};\n\n/**\n * Writes symbol table response to the project's .symbols file\n * @param  {Object} symbolQueryResult - symbol table definition from salesforce\n * @return {Promise}\n */\nSymbolService.prototype._writeSymbolTable = function(symbolQueryResult) {\n  var self = this;\n  return new Promise(function(resolve, reject) {\n    fs.outputFile(path.join(self.project.path, 'config', '.symbols', symbolQueryResult.Name+'.json'), JSON.stringify(symbolQueryResult.SymbolTable, null, 4), function(err) {\n      if (err) {\n        reject(err);\n      } else {\n        resolve();\n      }\n    });\n  });\n};\n\n/**\n * Given a list of Apex class names, retrieve the symbol tables\n * @param  {Array} classNames - class names\n * @return {Promise}\n */\nSymbolService.prototype._getSymbolsForClassNames = function(classNames) {\n  var self = this;\n  return new Promise(function(resolve, reject) {\n    logger.debug('_getSymbolsForClassNames:');\n    logger.debug(classNames);\n\n    var fields = ['NamespacePrefix', 'SymbolTable', 'Name'];\n    var query = 'SELECT '+fields.join(',')+' FROM ApexClass WHERE NAME IN ('+util.joinForQuery(classNames)+')';\n\n    self.project.sfdcClient.conn.tooling.query(query, function(err, res) {\n      if (err) {\n        reject(new Error('error retrieving symbols: '+err.message));\n      } else {\n        resolve(res);\n      }\n    });\n  });\n};\n\n/**\n * Returns a list of Apex classes in the org (from the server)\n * @return {Promise}\n */\nSymbolService.prototype._getApexClassNames = function() {\n  var self = this;\n  return new Promise(function(resolve, reject) {\n    self.project.sfdcClient.list('ApexClass')\n      .then(function(res) {\n        var classNames = [];\n        _.each(res.ApexClass, function(cls) {\n          classNames.push(cls.fullName);\n        });\n        resolve(classNames);\n      })\n      .catch(function(err) {\n        reject(new Error('Could not get class names: '+err.message));\n      })\n      .done();\n  });\n};\n\nmodule.exports = SymbolService;\n\n\n/** WEBPACK FOOTER **\n ** ../mavensmate/app/lib/services/symbol.js\n **/","/**\n * @file Responsible for compilation of Salesforce metadata (Custom Objects, Apex Classes, Lightning files, etc.)\n * @author Joseph Ferraro <@joeferraro>\n */\n\n'use strict';\n\nvar Promise           = require('bluebird');\nvar logger            = require('winston');\nvar temp              = require('temp');\nvar MetadataHelper    = require('./metadata').MetadataHelper;\nvar fs                = require('fs-extra');\nvar moment            = require('moment');\nvar mavensMateFile    = require('./file');\n\n/**\n * Responsible for compiling local copies of files/directories\n * @param {Project} project - project instance (required)\n * @param {Array} paths - array of path strings [ 'foo/bar/src/classes', 'foo/bar/src/pages/foo.page' ]\n */\nvar SyncDelegate = function(project, path, force) {\n  if (!project || !path) {\n    throw new Error('SyncDelegate requires a valid project instance and a path path to sync.');\n  }\n  this.project = project;\n  this.path = path;\n  this.force = force;\n  this.metadataHelper = new MetadataHelper({ sfdcClient : this.project.sfdcClient });\n};\n\n/**\n * Checks for conflict between local copy and server copy\n * @param  {Array} files - array of MavensMateFiles\n * @return {Promise}\n */\nSyncDelegate.prototype.execute = function() {\n  var self = this;\n  return new Promise(function(resolve, reject) {\n    try {\n      logger.debug('syncing with the sevrer');\n\n      var mmFile = mavensMateFile.createFileInstances([self.path], self.project)[0];\n\n      mmFile.serverCopy\n        .then(function(serverCopyResult) {\n          \n          if (!mmFile.localStoreEntry) {\n            return reject(new Error('No local index found for '+mmFile.name+'. This can happen if you fetch your project from a remote git repository. Please ensure your project subscription includes the metadata type: \"'+mmFile.type.xmlName+'\", then run the \"Clean Project\" command to update your local index of metadata.'))\n            return false;\n          }\n\n          logger.debug('local copy:');\n          logger.debug(mmFile.localStoreEntry);\n          logger.debug('remote copy:');\n          logger.debug(serverCopyResult);\n\n          var localLastModified = moment(mmFile.localStoreEntry.lastModifiedDate);\n          var remoteLastModified = moment(serverCopyResult.LastModifiedDate);\n\n          if (remoteLastModified.isAfter(localLastModified)) {\n            logger.debug('conflict detected between: ');\n            logger.debug(mmFile.localStoreEntry);\n            logger.debug(serverCopyResult);\n\n            var tempFile = temp.openSync({ prefix: 'mm_', suffix: ' [SERVER COPY].'+self.metadataHelper.getTypeByXmlName(mmFile.localStoreEntry.type).suffix });\n            fs.writeSync(tempFile.fd, serverCopyResult.Body);\n            serverCopyResult.tempPath = tempFile.path;\n\n            var result = {\n              local: mmFile.localStoreEntry,\n              remote: serverCopyResult\n            };\n            return resolve(result);\n          } else {\n            return resolve('Local metadata is in sync with server');\n          }\n        })\n        .catch(function(err) {\n          reject(err);\n        });\n\n    } catch(e) {\n      logger.error('Could not sync with server: ');\n      logger.error(e);\n      reject(e);\n    }\n  });\n};\n\nmodule.exports = SyncDelegate;\n\n\n\n/** WEBPACK FOOTER **\n ** ../mavensmate/app/lib/sync.js\n **/","module.exports = function(string) {\n    return string.charAt(0).toUpperCase() + string.slice(1);\n};\n\n\n/** WEBPACK FOOTER **\n ** ../mavensmate/app/lib/utilities/capitalize.js\n **/","/**\n * The MIT License (MIT)\n\nCopyright 2015 Matt\n\nPermission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n*/\n\nvar _, camelize, normalize;\n\n_ = require('lodash');\n\ncamelize = function(str) {\n  return str.replace(/(?:^\\w|[A-Z]|\\b\\w|\\s+)/g, function(match, index) {\n    if (+match === 0) return \"\"; // or if (/\\s+/.test(match)) for white spaces\n    return index == 0 ? match.toLowerCase() : match.toUpperCase();\n  });\n}\n\nnormalize = function(obj) {\n  var i, k, method, ret;\n  var caseType = 'camel';\n  ret = obj;\n  if (_.isArray(obj)) {\n    ret = [];\n    i = 0;\n    while (i < obj.length) {\n      ret.push(normalize(obj[i]));\n      ++i;\n    }\n  } else if (_.isObject(obj)) {\n    ret = {};\n    for (k in obj) {\n      ret[camelize(k)] = normalize(obj[k]);\n    }\n  }\n  return ret;\n};\n\nmodule.exports = normalize;\n\n\n/** WEBPACK FOOTER **\n ** ../mavensmate/app/lib/utilities/normalize-object.js\n **/","module.exports = function(req, res, next) {\n  res.header('Access-Control-Allow-Origin', '*');\n  res.header('Access-Control-Allow-Methods', 'GET,POST,PATCH,PUT,DELETE,OPTIONS');\n  res.header('Access-Control-Allow-Headers', ['Content-Type', 'X-Requested-With', 'MavensMate-Editor-Agent']);\n  next();\n};\n\n\n/** WEBPACK FOOTER **\n ** ../mavensmate/app/middleware/cors.js\n **/","/**\n * Middleware to attach editor\n */\nmodule.exports = function(req, res, next) {\n  if (req.url.indexOf('/app/static') >= 0) {\n    return next();\n  }\n  req.editor = req.query.editor || req.body.editor || req.get('mavensmate-editor-agent'); // atom, sublime, vscode, etc.\n  req.pid = req.query.pid || req.body.pid || req.get('mavensmate-pid');\n  res.locals.editor = req.editor;\n  next();\n};\n\n\n/** WEBPACK FOOTER **\n ** ../mavensmate/app/middleware/editor.js\n **/","var logger  = require('winston');\nvar _       = require('lodash');\n\nmodule.exports = function(req, res, next) {\n  if (req.url.indexOf('/app/static') === -1) {\n    logger.debug('Processing request '+req.method+' for URL: '+req.url);\n  } else {\n    logger.silly('Processing request '+req.method+' for URL: '+req.url);\n  }\n  if (req.method === 'POST' && req.body) {\n    logger.debug('post body', req.body);\n  } else if (req.method === 'GET' && req.query && !_.isEmpty(req.query)) {\n    logger.debug('query params', req.query);\n  }\n  next();\n};\n\n\n/** WEBPACK FOOTER **\n ** ../mavensmate/app/middleware/logging.js\n **/","var _       = require('lodash');\nvar logger  = require('winston');\nvar Project = require('../lib/project');\nvar config  = require('../config');\nvar util    = require('../lib/util');\nvar path    = require('path');\nvar fs      = require('fs-extra');\n\n/**\n * Middleware to attach editor and project to the request\n */\nmodule.exports = function(req, res, next) {\n  if (req.url.indexOf('/app/static') >= 0) {\n    return next();\n  }\n\n  // attach project to request based on pid query param\n  //\n  // TODO! handle command request and app/:route/:action requests different when project is invalid\n  //\n  if (req.pid) {\n    var project = util.getProjectById(req.app, req.pid);\n    if (!project) {\n      // this is a new project to the client, we attempt to initialize it\n      // it's possible that:\n      //   1. the pid is invalid\n      //   2. the project structure is corrupt\n      //   3. we are unable to initialize authentication (missing/bad tokens) --> project.requiresAuthentication\n      logger.debug('Attempting to attach project to request', req.pid);\n      _addProjectById(req.app, req.pid)\n        .then(function() {\n          project = util.getProjectById(req.app, req.pid);\n          req.project = project;\n          res.locals.project = project;\n          if (project.requiresAuthentication) {\n            logger.info('Project added to client, but it requires authentication, redirecting to auth endpoint');\n            if (req.url.indexOf('/app/') >= 0 && req.url.indexOf('/auth') === -1 && req.url.indexOf('/settings') === -1) {\n              // we can redirect to re-auth\n              res.redirect('/app/project/'+req.pid+'/auth?pid='+req.pid);\n            } else if ((req.url.indexOf('/execute') >= 0 || req.url.indexOf('/status') >= 0) && req.query.command !== 'oauth-project') {\n              // this is an api (headless) request, so we need to 500\n              logger.error('requested route/resource requires re-authentication, sending 500');\n              res.status(500).send('Could not complete the requested operation. Project requires re-authentication.');\n            } else {\n              next();\n            }\n          } else {\n            next();\n          }\n        })\n        .catch(function(err) {\n          // todo: when will this be thrown???\n          // todo: redirect to friendly page on /app route\n          logger.error('Failed to add project to client', err);\n          res.status(500).send('Error initializing project: '+err.message);\n        });\n    } else if (project.requiresAuthentication) {\n      req.project = project;\n      if (req.url.indexOf('/app/') >= 0 && req.url.indexOf('/auth') === -1 && req.url.indexOf('/settings') === -1) {\n        // we can redirect to re-auth\n        res.redirect('/app/project/'+req.pid+'/auth?pid='+req.pid);\n      } else if ((req.url.indexOf('/execute') >= 0 || req.url.indexOf('/status') >= 0) && req.query.command !== 'oauth-project') {\n        // this is an api (headless) request, so we need to 500\n        logger.error('requested route/resource requires re-authentication, sending 500');\n        res.status(500).send('Could not complete the requested operation. Project requires re-authentication.');\n      } else {\n        next();\n      }\n    } else {\n      logger.debug('found project in cache', project.name);\n      req.project = project;\n      res.locals.project = project;\n      next();\n    }\n  } else {\n    next();\n  }\n};\n\nfunction _addProjectById(app, projectId) {\n  return new Promise(function(resolve, reject) {\n    var projectPath = _findProjectPathById(projectId);\n    if (!projectPath) {\n      return reject(new Error('MavensMate could not find project with the id: '+projectId+'. This is likely because you are trying to open a project that does not reside in a valid mm_workspace. Please go to MavensMate Desktop global settings and ensure this project is located in a valid mm_workspace.'));\n    }\n    logger.info('adding project by id ----> ', projectId);\n    logger.info('path: ', projectPath);\n    var project = new Project({ path: projectPath });\n    project.initialize(false)\n      .then(function(response) {\n        app.get('projects').push(project);\n        resolve(response);\n      })\n      .catch(function(err) {\n        if (util.isCredentialsError(err)) {\n          logger.warn('Project requiring re-auth added to client');\n          app.get('projects').push(project);\n          resolve();\n        } else {\n          logger.error('Error initializing project: '+err.message+ ' -> '+err.stack);\n          reject(err);\n        }\n      })\n      .done();\n  });\n}\n\n/**\n * Given a project id, search given workspaces to find it on the disk\n * @param  {String} id mavensmate project id\n * @return {String}    project path\n */\nfunction _findProjectPathById(id) {\n  logger.debug('_findProjectPathById');\n  logger.debug(id);\n  var projectPathToReturn;\n  var workspaces = config.get('mm_workspace');\n  if (!_.isArray(workspaces)) {\n    workspaces = [workspaces];\n  }\n  logger.silly(workspaces);\n  _.each(workspaces, function(workspacePath) {\n    // /foo/bar/project\n    // /foo/bar/project/config/.settings\n    logger.silly(workspacePath);\n    var projectPaths = util.listDirectories(workspacePath);\n    logger.silly(projectPaths);\n    _.each(projectPaths, function(projectPath) {\n      var settingsPath = path.join(projectPath, 'config', '.settings');\n      if (fs.existsSync(settingsPath)) {\n        var settings = util.getFileBody(settingsPath, true);\n        if (settings.id === id) {\n          projectPathToReturn = projectPath;\n          return false;\n        }\n      }\n    });\n  });\n  return projectPathToReturn;\n};\n\n\n/** WEBPACK FOOTER **\n ** ../mavensmate/app/middleware/project.js\n **/","var path = require('path');\nvar logger = require('winston');\nvar util = require('../lib/util');\n\nvar resourceMap = {\n  project: {\n    iconClassName: 'slds-icon-standard-folder',\n    iconName: 'folder'\n  },\n  metadata: {\n    iconClassName: 'slds-icon-standard-document',\n    iconName: 'document'\n  },\n  lightning: {\n    iconClassName: 'slds-icon-standard-connected-apps',\n    iconName: 'connected_apps'\n  },\n  connections: {\n    iconClassName: 'slds-icon-standard-environment-hub',\n    iconName: 'environment_hub'\n  },\n  deploy: {\n    iconClassName: 'slds-icon-standard-environment-hub',\n    iconName: 'environment_hub'\n  },\n  auth: {\n    iconClassName: 'slds-icon-standard-avatar',\n    iconName: 'avatar'\n  },\n  test: {\n    iconClassName: 'slds-icon-standard-dashboard',\n    iconName: 'dashboard'\n  },\n  settings: {\n    iconClassName: 'slds-icon-standard-quotes',\n    iconName: 'settings',\n    sprite: 'utility-sprite'\n  },\n  logs: {\n    iconClassName: 'slds-icon-standard-record',\n    iconName: 'record'\n  },\n  apex: {\n    iconClassName: 'slds-icon-standard-custom',\n    iconName: 'custom'\n  },\n  home: {\n    iconClassName: 'slds-icon-standard-home',\n    iconName: 'home'\n  }\n};\n\nmodule.exports = function(req, res, next) {\n  var swig = req.app.get('swig');\n\n  // do we need this??\n  // swig.setDefaults({ runInVm: true, loader: swig.loaders.fs(path.join(path.dirname(__dirname))) });\n\n  // set locals for templates\n  if (util.startsWith(req.url, '/app/') && !util.startsWith(req.url, '/app/static')) {\n    if (req.app.get('mode') === 'desktop')\n      res.locals.isDesktop = true;\n    res.locals.url = req.url;\n    var appRoutePattern = /\\/app\\/([^\\W]*)/\n    var match = req.url.match(appRoutePattern);\n    if (match) {\n      var resource = match[1];\n      if (resourceMap[resource]) {\n        res.locals.sldsIconClassName = resourceMap[resource].iconClassName;\n        res.locals.sldsIconName = resourceMap[resource].iconName;\n        res.locals.sldsSprite = resourceMap[resource].sprite || 'standard-sprite';\n      }\n    }\n  }\n  next();\n};\n\n\n/** WEBPACK FOOTER **\n ** ../mavensmate/app/middleware/swig.js\n **/","/**\n * @file Apex execute anonymous\n * @author Joseph Ferraro <@joeferraro>\n */\n\n'use strict';\n\nvar express         = require('express');\nvar router          = express.Router();\nvar requestStore    = require('../lib/request-store');\nvar logger          = require('winston');\n\n// todo: refactor errors\nrouter.get('/new', function(req, res) {\n  if (!req.project) {\n    res.render('error', { error: 'Error: No project attached to this request.' });\n  } else {\n    var commandExecutor = req.app.get('commandExecutor');\n    commandExecutor.execute({\n      name: 'start-logging',\n      project: req.project,\n      editor: req.editor\n    })\n    .then(function() {\n      res.render('execute_apex/index.html', {\n        title: 'Execute Apex'\n      });\n    })\n    .catch(function(err) {\n      res.render('error', { error: 'Error: '+err.message });\n    });\n  }\n});\n\nrouter.post('/', function(req, res) {\n  var commandExecutor = req.app.get('commandExecutor');\n  var request = commandExecutor.execute({\n    project: req.project,\n    name: 'execute-apex',\n    body: req.body,\n    editor: req.editor\n  });\n  var requestId = requestStore.add(request);\n  return res.send({\n    status: 'pending',\n    id: requestId\n  });\n});\n\n\nmodule.exports = router;\n\n\n/** WEBPACK FOOTER **\n ** ../mavensmate/app/routes/apex.js\n **/","'use strict';\n\nvar express         = require('express');\nvar router          = express.Router();\nvar inherits        = require('inherits');\nvar logger          = require('winston');\nvar querystring     = require('querystring');\nvar path            = require('path');\nvar util            = require('../lib/util');\n\nrouter.get('/new', function(req, res) {\n  var project;\n  if (req.project) {\n    project = req.project;\n  } else if (req.query.pid) {\n    project = util.getProjectById(req.app, req.query.pid);\n  }\n\n  res.render('auth/index.html', {\n    project: project,\n    title: req.query.title,\n    callback: req.query.callback,\n    param1: req.query.param1,\n    isForced: req.query.forced === '1'\n  });\n});\n\nrouter.get('/callback', function(req, res) {\n  res.render('auth/callback.html', {\n    title: 'Redirecting...'\n  });\n});\n\nrouter.post('/', function(req, res) {\n  var orgType = req.body.orgType;\n  var instanceUrl = req.body.instanceUrl;\n  if (!instanceUrl) {\n    if (orgType === 'sandbox') {\n      instanceUrl = 'https://test.salesforce.com/';\n    } else {\n      instanceUrl = 'https://login.salesforce.com/';\n    }\n  }\n  var params = {\n    client_id: process.env.SFDC_OAUTH_CLIENT_ID || '3MVG9uudbyLbNPZP7kLgoRiWVRqiN8gFcKwdAlztVnjgbj9shSk1vMXJNmV7W0ciFbeYiaP9D4tLfBBD06l_7',\n    redirect_uri: process.env.SFDC_OAUTH_CALLBACK_URL || 'https://localhost:56248/sfdc/auth/callback',\n    response_type: process.env.SFDC_OAUTH_RESPONSE_TYPE || 'token',\n    display: 'popup'\n  };\n  if (req.body.username) {\n    params.login_hint = req.body.username;\n  }\n  var state = {};\n  if (req.body.callback) {\n    state.callback = req.body.callback\n  }\n  if (req.body.pid) {\n    state.pid = req.body.pid;\n  }\n  if (req.body.param1) {\n    state.param1 = req.body.param1;\n  }\n  params.state = JSON.stringify(state);\n  var oauthUrl = instanceUrl+'/services/oauth2/authorize?'+querystring.stringify(params);\n  logger.debug('oauth url is: ', oauthUrl);\n  res.redirect(oauthUrl);\n});\n\nrouter.post('/finish', function(req, res) {\n  logger.debug('finishing oauth dance: ', req.body.url);\n  var loginInfo = querystring.parse(req.body.url.split('#')[1]);\n  var state = JSON.parse(loginInfo.state);\n  var callbackUrl = state.callback+'?'+querystring.stringify(loginInfo);\n  logger.debug('redirecting to callback', callbackUrl);\n  res.redirect(callbackUrl);\n});\n\nmodule.exports = router;\n\n\n/** WEBPACK FOOTER **\n ** ../mavensmate/app/routes/auth.js\n **/","/**\n * @file Controller for the deploy UI\n * @author Joseph Ferraro <@joeferraro>\n */\n\n'use strict';\n\nvar express         = require('express');\nvar router          = express.Router();\nvar logger          = require('winston');\nvar requestStore    = require('../lib/request-store');\nvar Deploy          = require('../lib/services/deploy');\nvar querystring     = require('querystring');\nvar util            = require('../lib/util');\n\nrouter.get('/new', function(req, res) {\n  var commandExecutor = req.app.get('commandExecutor');\n  commandExecutor.execute({\n    project: req.project,\n    name: 'get-connections',\n    editor: req.editor\n  })\n  .then(function(response) {\n    res.render('connections/index.html', {\n      connections: response,\n      title: 'Deployment Connections'\n    });\n  })\n  .catch(function(err) {\n    logger.error(err);\n    res.render('error', { error: 'Error: '+err.message });\n  });\n});\n\nrouter.get('/', function(req, res) {\n  var commandExecutor = req.app.get('commandExecutor');\n  commandExecutor.execute({\n    project: req.project,\n    name: 'get-connections',\n    editor: req.editor\n  })\n  .then(function(response) {\n    res.send(response);\n  })\n  .catch(function(err) {\n    res.status(500).send({ error: err.message });\n  });\n});\n\nrouter.post('/', function(req, res) {\n  var commandExecutor = req.app.get('commandExecutor');\n  commandExecutor.execute({\n    project: req.project,\n    name: 'new-connection',\n    body: req.body,\n    editor: req.editor\n  })\n  .then(function(response) {\n    res.send(response);\n  })\n  .catch(function(err) {\n    res.status(500).send({ error: err.message });\n  });\n});\n\nrouter.post('/auth', function(req, res) {\n  var params = {\n    title: 'New Deployment Connection',\n    callback: '/app/connections/auth/finish',\n    param1: req.body.name,\n    pid: req.body.pid\n  };\n  res.redirect('/app/auth/new?'+querystring.stringify(params));\n});\n\nrouter.get('/auth/finish', function(req, res) {\n  var commandExecutor = req.app.get('commandExecutor');\n  logger.debug('finishing auth in org connections: ', req.query);\n  var state = JSON.parse(req.query.state);\n  logger.debug('state!', state);\n  var pid = state.pid;\n  var project = util.getProjectById(req.app, pid);\n  commandExecutor.execute({\n    project: project,\n    name: 'new-connection',\n    body: {\n      name: state.param1,\n      accessToken: req.query.access_token,\n      instanceUrl: req.query.instance_url,\n      refreshToken: req.query.refresh_token\n    }\n  })\n  .then(function(response) {\n    res.redirect('/app/connections/new?pid='+pid);\n  })\n  .catch(function(err) {\n    res.status(500).send({ error: err.message });\n  });\n});\n\nrouter.delete('/:id', function(req, res) {\n  var commandExecutor = req.app.get('commandExecutor');\n  commandExecutor.execute({\n    project: req.project,\n    name: 'delete-connection',\n    body: req.body,\n    editor: req.editor\n  })\n  .then(function(response) {\n    res.send(response);\n  })\n  .catch(function(err) {\n    res.status(500).send({ error: err.message });\n  });\n});\n\n\nmodule.exports = router;\n\n\n/** WEBPACK FOOTER **\n ** ../mavensmate/app/routes/connections.js\n **/","/**\n * @file Controller for the deploy UI\n * @author Joseph Ferraro <@joeferraro>\n */\n\n'use strict';\n\nvar express         = require('express');\nvar router          = express.Router();\nvar requestStore    = require('../lib/request-store');\nvar logger          = require('winston');\nvar Deploy          = require('../lib/services/deploy');\nvar querystring     = require('querystring');\n\nrouter.get('/new', function(req, res) {\n  if (!req.project) {\n    res.render('error', { error: 'Error: No project attached to this request.' });\n  } else {\n    var commandExecutor = req.app.get('commandExecutor');\n    var deployDelegate = new Deploy({\n      project: req.project\n    });\n    commandExecutor.execute({\n      project: req.project,\n      name: 'get-connections',\n      editor: req.editor\n    })\n    .then(function(response) {\n      res.render('deploy/index.html', {\n        connections: response,\n        namedDeployments: deployDelegate.getNamedDeployments(),\n        hasIndexedMetadata: req.project.hasIndexedMetadata(),\n        title: 'Deploy'\n      });\n    })\n    .catch(function(err) {\n      logger.error(err);\n      res.status(500).send({ error: err.message });\n    });\n  }\n});\n\nrouter.post('/', function(req, res) {\n  var commandExecutor = req.app.get('commandExecutor');\n  var request = commandExecutor.execute({\n    project: req.project,\n    name: 'deploy',\n    body: req.body,\n    editor: req.editor\n  })\n  var requestId = requestStore.add(request);\n  return res.send({\n    status: 'pending',\n    id: requestId\n  });\n});\n\nmodule.exports = router;\n\n\n/** WEBPACK FOOTER **\n ** ../mavensmate/app/routes/deploy.js\n **/","'use strict';\n\nvar express         = require('express');\nvar router          = express.Router();\nvar logger          = require('winston');\nvar requestStore    = require('../lib/request-store');\n\n// required for cors\nrouter.options('/', function(req, res) {\n  return res.sendStatus(200);\n});\n\nrouter.post('/', _execute);\nrouter.get('/', _execute);\n\nrouter.get('/:id', function(req, res) {\n  var requestId;\n  var requestStore = req.app.get('requestStore');\n  requestId = req.params.id;\n  if (requestStore.isRequestComplete(requestId)) {\n    res.send(requestStore.getResultForId(requestId));\n  } else {\n    return res.send({\n      status: 'pending',\n      id: requestId\n    });\n  }\n});\n\nfunction _execute(req, res) {\n  var commandExecutor = req.app.get('commandExecutor');\n  var command = req.body.command || req.query.command;\n  var request = commandExecutor.execute({\n    project: req.project,\n    name: command,\n    body: req.body,\n    editor: req.editor,\n    openWindowFn: req.app.get('openWindowFn')\n  });\n  if (req.query.async === '1') {\n    var requestStore = req.app.get('requestStore');\n    var requestId = requestStore.add(request);\n    return res.send({\n      'status': 'pending',\n      'id': requestId\n    });\n  } else {\n    request\n      .then(function(response) {\n        return res.send(response);\n      })\n      .catch(function(err) {\n        return res.send(err);\n      });\n  }\n}\n\nmodule.exports = router;\n\n\n/** WEBPACK FOOTER **\n ** ../mavensmate/app/routes/execute.js\n **/","'use strict';\n\nvar express = require('express');\nvar router  = express.Router();\n\nrouter.get('/', function(req, res) {\n  if (req.project) {\n    res.redirect('/app/project/'+req.project.settings.id+'?pid='+req.project.settings.id); //todo: deal with param vs query goofiness\n  } else {\n    res.render('home/index.html', {\n      title: 'MavensMate Home'\n    });\n  }\n});\n\nmodule.exports = router;\n\n\n/** WEBPACK FOOTER **\n ** ../mavensmate/app/routes/home.js\n **/","var express = require('express');\nvar router = express.Router();\n\n// important: this route is configured in the connected app,\n// so we have to handle that URL here and redirect to a proper route\nrouter.get('/sfdc/auth/callback', function(req, res) {\n  res.redirect('/app/auth/callback');\n});\n\nrouter.get('/', function(req, res) {\n  res.redirect('/app/home');\n});\n\n// rpc route\nrouter.use('/execute', require('./execute'));\n\n// deprecated route, used to support atom/sublime plugins that have not yet updated mavensmate desktop\nrouter.use('/status', require('./status'));\n\n// todo: add middleware that throws 500 if no project context sent for project-specific routes\nrouter.use('/app/auth',require('./auth'));\nrouter.use('/app/apex',require('./apex'));\nrouter.use('/app/connections',require('./connections'));\nrouter.use('/app/deploy',require('./deploy'));\nrouter.use('/app/home',require('./home'));\nrouter.use('/app/lightning',require('./lightning'));\nrouter.use('/app/logs',require('./logs'));\nrouter.use('/app/metadata',require('./metadata'));\nrouter.use('/app/project',require('./project'));\nrouter.use('/app/settings',require('./settings'));\nrouter.use('/app/test',require('./test'));\n\n// if we have an unhandled route, we throw a 404 if it's ajax, otherwise we return our 404.html\nrouter.get('*', function(req, res){\n  var isAjaxRequest = req.xhr;\n  if (isAjaxRequest) {\n    res.send('URL not found: '+req.url, 404);\n  } else {\n    res.render('404.html', {\n      title: '404: Page not found'\n    });\n  }\n});\n\nmodule.exports = router;\n\n\n/** WEBPACK FOOTER **\n ** ../mavensmate/app/routes/index.js\n **/","'use strict';\n\nvar express         = require('express');\nvar router          = express.Router();\nvar requestStore    = require('../lib/request-store');\n\nrouter.get('/app/new', function(req, res) {\n  if (!req.project) {\n    res.render('error', { error: 'Error: No project attached to this request.' });\n  } else {\n    res.render('lightning/new.html', {\n      title: 'Create Lightning App',\n      lightningType: 'app'\n    });\n  }\n});\n\nrouter.get('/component/new', function(req, res) {\n  if (!req.project) {\n    res.render('error', { error: 'Error: No project attached to this request.' });\n  } else {\n    res.render('lightning/new.html', {\n      title: 'Create Lightning Component',\n      lightningType: 'component'\n    });\n  }\n});\n\nrouter.get('/event/new', function(req, res) {\n  if (!req.project) {\n    res.render('error', { error: 'Error: No project attached to this request.' });\n  } else {\n    res.render('lightning/new.html', {\n      title: 'Create Lightning Event',\n      lightningType: 'event'\n    });\n  }\n});\n\nrouter.get('/interface/new', function(req, res) {\n  if (!req.project) {\n    res.render('error', { error: 'Error: No project attached to this request.' });\n  } else {\n    res.render('lightning/new.html', {\n      title: 'Create Lightning Interface',\n      lightningType: 'interface'\n    });\n  }\n});\n\nrouter.post('/app', function(req, res) {\n  var commandExecutor = req.app.get('commandExecutor');\n  var request = commandExecutor.execute({\n    project: req.project,\n    name: 'new-lightning-app',\n    body: req.body,\n    editor: req.editor\n  });\n  var requestId = requestStore.add(request);\n  return res.send({\n    status: 'pending',\n    id: requestId\n  });\n});\n\nrouter.post('/component', function(req, res) {\n  var commandExecutor = req.app.get('commandExecutor');\n  var request = commandExecutor.execute({\n    project: req.project,\n    name: 'new-lightning-component',\n    body: req.body,\n    editor: req.editor\n  });\n  var requestId = requestStore.add(request);\n  return res.send({\n    status: 'pending',\n    id: requestId\n  });\n});\n\nrouter.post('/event', function(req, res) {\n  var commandExecutor = req.app.get('commandExecutor');\n  var request = commandExecutor.execute({\n    project: req.project,\n    name: 'new-lightning-event',\n    body: req.body,\n    editor: req.editor\n  });\n  var requestId = requestStore.add(request);\n  return res.send({\n    status: 'pending',\n    id: requestId\n  });\n});\n\nrouter.post('/interface', function(req, res) {\n  var commandExecutor = req.app.get('commandExecutor');\n  var request = commandExecutor.execute({\n    project: req.project,\n    name: 'new-lightning-interface',\n    body: req.body,\n    editor: req.editor\n  });\n  var requestId = requestStore.add(request);\n  return res.send({\n    status: 'pending',\n    id: requestId\n  });\n});\n\nmodule.exports = router;\n\n\n/** WEBPACK FOOTER **\n ** ../mavensmate/app/routes/lightning.js\n **/","/**\n * @file Controller for the logs viewer\n * @author Joseph Ferraro <@joeferraro>\n */\n\n'use strict';\n\nvar express         = require('express');\nvar router          = express.Router();\nvar requestStore    = require('../lib/request-store');\nvar path            = require('path');\nvar logger          = require('winston');\n\nrouter.get('/', function(req, res) {\n  var io = req.app.get('io')\n  if (!req.project) {\n    res.render('error', { error: 'Error: No project attached to this request.' });\n  } else {\n    io.on('connection', function(socket) {\n      req.project.on('new-log', function(filePath) {\n        socket.emit('new-log', {\n          location: filePath,\n          locationBasename: path.basename(filePath)\n        });\n      });\n    });\n    req.project.logService.getLogs()\n      .then(function(logs) {\n        res.render('logs/index.html', {\n          title: 'Debug Logs',\n          logs: logs\n        });\n      });\n  }\n});\n\nrouter.get('/:location', function(req, res) {\n  var logLocation = req.params.location;\n  req.project.logService.getLog(path.join(req.project.path, 'debug', 'logs', logLocation))\n    .then(function(logLines) {\n      var resultHtml = req.app.get('swig').renderFile('views/logs/log.html', {\n        lines: logLines\n      });\n      res.status(200).send(resultHtml);\n    })\n    .catch(function(err) {\n      res.status(500).send('Error: '+err.message);\n    })\n});\n\nrouter.post('/:location', function(req, res) {\n  var logLocation = req.params.location;\n  var keyword = req.query.keyword;\n  req.project.logService.filter(path.join(req.project.path, 'debug', 'logs', logLocation), keyword)\n    .then(function(matchingLines) {\n      var resultHtml = req.app.get('swig').renderFile('views/logs/log.html', {\n        lines: matchingLines\n      });\n      res.status(200).send(resultHtml);\n    })\n    .catch(function(err) {\n      res.status(500).send('Error: '+err.message);\n    })\n});\n\nmodule.exports = router;\n\n\n/** WEBPACK FOOTER **\n ** ../mavensmate/app/routes/logs.js\n **/","/**\n * @file Controller for the metadata creation UIs\n * @author Joseph Ferraro <@joeferraro>\n */\n\n'use strict';\n\nvar express         = require('express');\nvar router          = express.Router();\nvar Promise         = require('bluebird');\nvar requestStore    = require('../lib/request-store');\nvar logger          = require('winston');\nvar TemplateService = require('../lib/services/template');\n\nrouter.get('/:type/new', function(req, res) {\n  if (!req.project) {\n    res.render('error', { error: 'Error: No project attached to this request.' });\n  } else {\n    _getTemplates(req.params.type)\n      .then(function(templates) {\n        logger.debug(templates);\n        var locals = {\n          templates : templates,\n          metadataType: req.params.type,\n          title: 'New '+req.params.type\n        };\n        res.render('metadata/new.html', locals);\n      })\n      .catch(function(e) {\n        logger.error(e);\n        res.render('metadata/new.html', {\n          title: 'New Metadata'\n        });\n      })\n      .done();\n  }\n});\n\nrouter.get('/:type/templates/:fileName', function(req, res) {\n  var templateService = new TemplateService();\n  templateService.getTemplateBody(req.params.type, req.params.fileName)\n    .then(function(body) {\n      res.send(body);\n    })\n    .catch(function(e) {\n      res.status(500).send('Error: '+e.message);\n    })\n    .done();\n});\n\nrouter.post('/', function(req, res) {\n  var commandExecutor = req.app.get('commandExecutor');\n  var request = commandExecutor.execute({\n    project: req.project,\n    name: 'new-metadata',\n    body: req.body,\n    editor: req.editor\n  });\n  var requestId = requestStore.add(request);\n  return res.send({\n    status: 'pending',\n    id: requestId\n  });\n});\n\nfunction _getTemplates(typeXmlName) {\n  return new Promise(function(resolve, reject) {\n    var templateService = new TemplateService();\n    templateService.getTemplatesForType(typeXmlName)\n      .then(function(templates) {\n        resolve(templates);\n      })\n      .catch(function(e) {\n        reject(new Error('Could not retrieve templates: '+e.message));\n      })\n      .done();\n  });\n}\n\nmodule.exports = router;\n\n\n/** WEBPACK FOOTER **\n ** ../mavensmate/app/routes/metadata.js\n **/","/**\n * @file Controller for the various project UIs (new, edit)\n * @author Joseph Ferraro <@joeferraro>\n */\n\n'use strict';\n\nvar express         = require('express');\nvar router          = express.Router();\nvar logger          = require('winston');\nvar querystring     = require('querystring');\nvar requestStore    = require('../lib/request-store');\nvar util            = require('../lib/util');\nvar fs              = require('fs-extra');\n\n// create a new project\nrouter.get('/new', function(req, res) {\n  var params = {\n    title: 'New Project',\n    callback: '/app/project/auth/finish',\n    new: '1'\n  };\n  res.redirect('/app/auth/new?'+querystring.stringify(params));\n});\n\n// create a new project from existing directory\nrouter.get('/existing/new', function(req, res) {\n  if (req.query.origin) {\n    var params = {\n      title: 'Create MavensMate Project ('+req.query.origin+')',\n      callback: '/app/project/auth/finish',\n      param1: req.query.origin\n    };\n    res.redirect('/app/auth/new?'+querystring.stringify(params));\n  } else {\n    res.status(500).send('Error: You must provide an existing path via the \"origin\" query param');\n  }\n});\n\nrouter.get('/auth/finish', function(req, res) {\n  var commandExecutor = req.app.get('commandExecutor');\n  logger.debug('finishing auth in project: ', req.query);\n  var state = JSON.parse(req.query.state);\n  logger.debug('state!', state);\n  var pid = state.pid;\n  if (pid) {\n    // updating an existing project\n    var project = util.getProjectById(req.app, pid);\n    project.updateCredentials({\n      accessToken: req.query.access_token,\n      instanceUrl: req.query.instance_url,\n      refreshToken: req.query.refresh_token\n    })\n    .then(function(response) {\n      res.redirect('/app/project/'+pid+'/edit?pid='+pid+'&update=1');\n    })\n    .catch(function(err) {\n      logger.error(err);\n      res.send(500);\n    });\n  } else {\n    var title = state.param1 && fs.existsSync(state.param1) ? 'Create MavensMate Project ('+state.param1+')' : 'New Project';\n    // new project\n    commandExecutor.execute({\n      name: 'session',\n      body: {\n        accessToken: req.query.access_token,\n        instanceUrl: req.query.instance_url,\n        refreshToken: req.query.refresh_token\n      }\n    })\n    .then(function(response) {\n      res.render('project/new.html', {\n        title: title,\n        accessToken: req.query.access_token,\n        instanceUrl: req.query.instance_url,\n        refreshToken: req.query.refresh_token,\n        session: response,\n        origin: state.param1\n      });\n    })\n    .catch(function(err) {\n      logger.error('Could not initiate session', err);\n    });\n  }\n});\n\n// creates a new project\nrouter.post('/', function(req, res) {\n  logger.debug('received request to create new project: ');\n  logger.debug(req.body);\n  var commandExecutor = req.app.get('commandExecutor');\n  var request = commandExecutor.execute({\n    name: 'new-project',\n    body: req.body,\n    editor: req.editor\n  });\n  var requestId = requestStore.add(request);\n  return res.send({\n    status: 'pending',\n    id: requestId\n  });\n});\n\n// creates a new project from an existing directory\nrouter.post('/existing', function(req, res) {\n  logger.debug('received request to create new project frome existing directory: ');\n  logger.debug(req.body);\n  var commandExecutor = req.app.get('commandExecutor');\n  var request = commandExecutor.execute({\n    name: 'new-project-from-existing-directory',\n    body: req.body,\n    editor: req.editor\n  });\n  var requestId = requestStore.add(request);\n  return res.send({\n    status: 'pending',\n    id: requestId\n  });\n});\n\n// project landing page\nrouter.get('/:id', function(req, res) {\n  res.render('project/home.html', {\n    title: 'Project Launchpad',\n    isNewProject: req.query.new === '1'\n  });\n});\n\n// usually called when project credentials are invalid\nrouter.get('/:id/auth', function(req, res) {\n  var params = {\n    title: 'Update Project Credentials',\n    callback: '/app/project/auth/finish',\n    pid: req.project.settings.id,\n    forced: req.project.requiresAuthentication ? '1' : '0'\n  };\n  res.redirect('/app/auth/new?'+querystring.stringify(params));\n});\n\n// edit project UI\nrouter.get('/:id/edit', function(req, res) {\n  if (!req.project) {\n    res.render('error', { error: 'Error: No project attached to this request.' });\n  } else {\n    res.render('project/edit.html', {\n      title: 'Edit Project',\n      isUpdate: req.query.update === '1'\n    });\n  }\n});\n\n// update an existing project\nrouter.post('/:id', function(req, res) {\n  var commandExecutor = req.app.get('commandExecutor');\n  var request = commandExecutor.execute({\n    project: req.project,\n    name: 'edit-project',\n    body: req.body,\n    editor: req.editor\n  });\n  var requestId = requestStore.add(request);\n  return res.send({\n    status: 'pending',\n    id: requestId\n  });\n});\n\n// updates the project subscription\nrouter.post('/:id/subscription', function(req, res) {\n  var commandExecutor = req.app.get('commandExecutor');\n  commandExecutor.execute({\n    project: req.project,\n    name: 'update-subscription',\n    body: req.body,\n    editor: req.editor\n  })\n  .then(function(response) {\n    res.send(response);\n  })\n  .catch(function(err) {\n    res.status(500).send({ error: err.message });\n  });\n});\n\n// indexes metadata\nrouter.post('/:id/index', function(req, res) {\n  var commandExecutor = req.app.get('commandExecutor');\n  var request = commandExecutor.execute({\n    project: req.project,\n    name: 'index-metadata',\n    body: req.body,\n    editor: req.editor\n  });\n  var requestId = requestStore.add(request);\n  return res.send({\n    status: 'pending',\n    id: requestId\n  });\n});\n\n// gets metadata index for a project\nrouter.get('/:id/index', function(req, res) {\n  logger.warn(req.query);\n  var commandName = req.query && req.query.pkg && req.query.pkg !== 'package.xml' ? 'get-metadata-index-for-package' : 'get-metadata-index';\n  var commandExecutor = req.app.get('commandExecutor');\n  commandExecutor.execute({\n    project: req.project,\n    name: commandName,\n    body: {\n      packageXmlPath: req.query.pkg\n    },\n    editor: req.editor\n  })\n  .then(function(response) {\n    res.send(response);\n  })\n  .catch(function(err) {\n    res.send(err);\n  });\n});\n\nmodule.exports = router;\n\n\n/** WEBPACK FOOTER **\n ** ../mavensmate/app/routes/project.js\n **/","'use strict';\n\nvar express         = require('express');\nvar router          = express.Router();\nvar fs              = require('fs');\nvar util            = require('../lib/util');\nvar path            = require('path');\nvar logger          = require('winston');\nvar config          = require('../config');\nvar defaultSettings = require('../config/default');\n\nrouter.get('/', function(req, res) {\n  var userSettings;\n  try {\n    userSettings = config.load();\n  } catch(e) {\n    logger.error('Could not load user settings', e);\n    userSettings = defaultSettings;\n  }\n  var locals = {\n    userSettings: userSettings,\n    defaultSettings: defaultSettings,\n    title: 'Global Settings'\n  };\n  res.render('settings/index.html', locals);\n});\n\nrouter.post('/', function(req, res) {\n  try {\n    var updatedSetting = defaultSettings[req.body.settingKey];\n    var settingValue = req.body.settingValue;\n    if (updatedSetting.type === 'integer') {\n      settingValue = parseInt(settingValue); // parse string from the dom to int for storage\n    } else if (updatedSetting.type === 'object' || updatedSetting.type === 'array') {\n      settingValue = JSON.parse(settingValue);\n    } else if (updatedSetting.type === 'string' && settingValue[0] === '\"' && settingValue[settingValue.length - 1] === '\"') {\n      return res.status(500).send({ error: 'Failed to update '+req.body.settingKey+': Invalid string setting value. You should not wrap your string setting value in quotes.' });\n    }\n    config.set(req.body.settingKey, settingValue);\n    config.save(function(err) {\n      if (err) {\n        res.status(500).send({ error: 'Failed to update '+req.body.settingKey+': '+ err.message });\n      } else {\n        res.send(JSON.stringify({success:true}));\n      }\n    });\n  } catch(err) {\n    res.status(500).send({ error: 'Failed to update '+req.body.settingKey+': '+ err.message });\n  }\n});\n\nmodule.exports = router;\n\n\n/** WEBPACK FOOTER **\n ** ../mavensmate/app/routes/settings.js\n **/","'use strict';\n\nvar express         = require('express');\nvar router          = express.Router();\nvar logger          = require('winston');\nvar requestStore    = require('../lib/request-store');\n\n// required for cors\nrouter.options('/', function(req, res) {\n  return res.sendStatus(200);\n});\n\nrouter.get('/', function(req, res) {\n  var requestId;\n  var requestStore = req.app.get('requestStore');\n  requestId = req.query.id;\n  if (requestStore.isRequestComplete(requestId)) {\n    res.send(requestStore.getResultForId(requestId));\n  } else {\n    return res.send({\n      status: 'pending',\n      id: requestId\n    });\n  }\n});\n\nmodule.exports = router;\n\n\n/** WEBPACK FOOTER **\n ** ../mavensmate/app/routes/status.js\n **/","/**\n * @file Controller for the apex test runner UI\n * @author Joseph Ferraro <@joeferraro>\n */\n\n'use strict';\nvar express         = require('express');\nvar router          = express.Router();\nvar fs              = require('fs');\nvar util            = require('../lib/util');\nvar path            = require('path');\nvar requestStore    = require('../lib/request-store');\nvar logger          = require('winston');\n\nrouter.get('/new', function(req, res) {\n  if (!req.project) {\n    res.render('error', { error: 'Error: No project attached to this request.' });\n  } else {\n    res.render('unit_test/index.html', {\n      testClasses : _getTestClasses(req.project),\n      title: 'Unit Test',\n      className: req.query.className\n    });\n  }\n});\n\nrouter.post('/', function(req, res) {\n  var commandExecutor = req.app.get('commandExecutor');\n  var request = commandExecutor.execute({\n    project: req.project,\n    name: 'run-tests',\n    body: req.body,\n    editor: req.editor\n  });\n  var requestId = requestStore.add(request);\n  return res.send({\n    status: 'pending',\n    id: requestId\n  });\n});\n\nrouter.post('/coverage', function(req, res) {\n  var swig = req.app.get('swig');\n  var locals = {\n    apexClassOrTriggerName: req.body.apexClassOrTriggerName,\n    type: req.body.type,\n    uncoveredLines: req.body.uncoveredLines,\n    project: req.project\n  };\n  var resultHtml = swig.renderFile('views/unit_test/cov.html', locals);\n  return res.send({\n    result: resultHtml\n  });\n});\n\n/**\n * Iterates project's classes directory looking for unit test classes\n * @return {Array}- Array of class names\n */\nfunction _getTestClasses(project) {\n  var self = this;\n  var classes = [];\n  var classPath = path.join(project.path, 'src', 'classes');\n\n  var isTestRegEx = new RegExp(/@istest/i);\n  var testMethodRegex = new RegExp(/testmethod/i);\n\n  if (fs.existsSync(classPath)) {\n    fs.readdirSync(classPath).forEach(function(filename) {\n      var fileNameParts = path.basename(filename).split('.');\n      var fn = fileNameParts[0];\n      var fileBody = util.getFileBody(path.join(classPath, filename));\n      if (isTestRegEx.test(fileBody) || testMethodRegex.test(fileBody)) {\n        classes.push(fn);\n      }\n    });\n  }\n  return classes;\n}\n\nmodule.exports = router;\n\n\n/** WEBPACK FOOTER **\n ** ../mavensmate/app/routes/test.js\n **/","var map = {\n\t\"./apex-script/new-apex-script\": 38,\n\t\"./apex-script/new-apex-script.js\": 38,\n\t\"./apex-script/run-apex-script\": 39,\n\t\"./apex-script/run-apex-script.js\": 39,\n\t\"./debug/delete-checkpoint\": 40,\n\t\"./debug/delete-checkpoint.js\": 40,\n\t\"./debug/download-log\": 41,\n\t\"./debug/download-log.js\": 41,\n\t\"./debug/execute-apex\": 42,\n\t\"./debug/execute-apex.js\": 42,\n\t\"./debug/flush-logs\": 43,\n\t\"./debug/flush-logs.js\": 43,\n\t\"./debug/list-checkpoints\": 44,\n\t\"./debug/list-checkpoints.js\": 44,\n\t\"./debug/new-checkpoint\": 45,\n\t\"./debug/new-checkpoint.js\": 45,\n\t\"./debug/start-logging\": 46,\n\t\"./debug/start-logging.js\": 46,\n\t\"./debug/stop-logging\": 47,\n\t\"./debug/stop-logging.js\": 47,\n\t\"./deploy/delete-connection\": 48,\n\t\"./deploy/delete-connection.js\": 48,\n\t\"./deploy/deploy\": 49,\n\t\"./deploy/deploy.js\": 49,\n\t\"./deploy/get-connections\": 50,\n\t\"./deploy/get-connections.js\": 50,\n\t\"./deploy/new-connection\": 51,\n\t\"./deploy/new-connection.js\": 51,\n\t\"./deploy/update-connection\": 52,\n\t\"./deploy/update-connection.js\": 52,\n\t\"./index\": 29,\n\t\"./index.js\": 29,\n\t\"./lightning/new-lightning-app\": 53,\n\t\"./lightning/new-lightning-app.js\": 53,\n\t\"./lightning/new-lightning-component\": 54,\n\t\"./lightning/new-lightning-component.js\": 54,\n\t\"./lightning/new-lightning-event\": 55,\n\t\"./lightning/new-lightning-event.js\": 55,\n\t\"./lightning/new-lightning-interface\": 56,\n\t\"./lightning/new-lightning-interface.js\": 56,\n\t\"./metadata/compile-metadata\": 57,\n\t\"./metadata/compile-metadata.js\": 57,\n\t\"./metadata/delete-metadata\": 58,\n\t\"./metadata/delete-metadata.js\": 58,\n\t\"./metadata/new-metadata\": 59,\n\t\"./metadata/new-metadata.js\": 59,\n\t\"./metadata/open-metadata\": 60,\n\t\"./metadata/open-metadata.js\": 60,\n\t\"./metadata/refresh-metadata\": 61,\n\t\"./metadata/refresh-metadata.js\": 61,\n\t\"./metadata/sync-with-server\": 62,\n\t\"./metadata/sync-with-server.js\": 62,\n\t\"./misc/execute-soql\": 63,\n\t\"./misc/execute-soql.js\": 63,\n\t\"./misc/get-setting\": 64,\n\t\"./misc/get-setting.js\": 64,\n\t\"./misc/index-apex\": 66,\n\t\"./misc/index-apex-class\": 65,\n\t\"./misc/index-apex-class.js\": 65,\n\t\"./misc/index-apex.js\": 66,\n\t\"./misc/list-metadata\": 67,\n\t\"./misc/list-metadata.js\": 67,\n\t\"./misc/open-settings\": 68,\n\t\"./misc/open-settings.js\": 68,\n\t\"./misc/open-sfdc\": 69,\n\t\"./misc/open-sfdc.js\": 69,\n\t\"./misc/open-ui\": 70,\n\t\"./misc/open-ui.js\": 70,\n\t\"./misc/session\": 71,\n\t\"./misc/session.js\": 71,\n\t\"./project/clean-project\": 72,\n\t\"./project/clean-project.js\": 72,\n\t\"./project/compile-project\": 73,\n\t\"./project/compile-project.js\": 73,\n\t\"./project/edit-project\": 74,\n\t\"./project/edit-project.js\": 74,\n\t\"./project/get-metadata-index\": 76,\n\t\"./project/get-metadata-index-for-package\": 75,\n\t\"./project/get-metadata-index-for-package.js\": 75,\n\t\"./project/get-metadata-index.js\": 76,\n\t\"./project/index-metadata\": 77,\n\t\"./project/index-metadata.js\": 77,\n\t\"./project/list-projects\": 78,\n\t\"./project/list-projects.js\": 78,\n\t\"./project/new-project\": 80,\n\t\"./project/new-project-from-existing-directory\": 79,\n\t\"./project/new-project-from-existing-directory.js\": 79,\n\t\"./project/new-project.js\": 80,\n\t\"./project/oauth-project\": 81,\n\t\"./project/oauth-project.js\": 81,\n\t\"./project/open-project\": 82,\n\t\"./project/open-project.js\": 82,\n\t\"./project/search-metadata-index\": 83,\n\t\"./project/search-metadata-index.js\": 83,\n\t\"./project/update-creds\": 84,\n\t\"./project/update-creds.js\": 84,\n\t\"./project/update-subscription\": 85,\n\t\"./project/update-subscription.js\": 85,\n\t\"./resource-bundle/deploy-resource-bundle\": 86,\n\t\"./resource-bundle/deploy-resource-bundle.js\": 86,\n\t\"./resource-bundle/new-resource-bundle\": 87,\n\t\"./resource-bundle/new-resource-bundle.js\": 87,\n\t\"./unit-test/get-coverage\": 88,\n\t\"./unit-test/get-coverage.js\": 88,\n\t\"./unit-test/run-test-method\": 89,\n\t\"./unit-test/run-test-method.js\": 89,\n\t\"./unit-test/run-tests\": 90,\n\t\"./unit-test/run-tests.js\": 90\n};\nfunction webpackContext(req) {\n\treturn __webpack_require__(webpackContextResolve(req));\n};\nfunction webpackContextResolve(req) {\n\treturn map[req] || (function() { throw new Error(\"Cannot find module '\" + req + \"'.\") }());\n};\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 132;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ../mavensmate/app/lib/commands ^\\.\\/.*$\n ** module id = 132\n ** module chunks = 0\n **/","module.exports = require(\"archiver\");\n\n\n/*****************\n ** WEBPACK FOOTER\n ** external \"archiver\"\n ** module id = 133\n ** module chunks = 0\n **/","module.exports = require(\"auto-launch\");\n\n\n/*****************\n ** WEBPACK FOOTER\n ** external \"auto-launch\"\n ** module id = 134\n ** module chunks = 0\n **/","module.exports = require(\"body-parser\");\n\n\n/*****************\n ** WEBPACK FOOTER\n ** external \"body-parser\"\n ** module id = 135\n ** module chunks = 0\n **/","module.exports = require(\"electron-squirrel-startup\");\n\n\n/*****************\n ** WEBPACK FOOTER\n ** external \"electron-squirrel-startup\"\n ** module id = 136\n ** module chunks = 0\n **/","module.exports = require(\"fstream\");\n\n\n/*****************\n ** WEBPACK FOOTER\n ** external \"fstream\"\n ** module id = 137\n ** module chunks = 0\n **/","module.exports = require(\"jsforce\");\n\n\n/*****************\n ** WEBPACK FOOTER\n ** external \"jsforce\"\n ** module id = 138\n ** module chunks = 0\n **/","module.exports = require(\"keytar\");\n\n\n/*****************\n ** WEBPACK FOOTER\n ** external \"keytar\"\n ** module id = 139\n ** module chunks = 0\n **/","module.exports = require(\"nconf\");\n\n\n/*****************\n ** WEBPACK FOOTER\n ** external \"nconf\"\n ** module id = 140\n ** module chunks = 0\n **/","module.exports = require(\"nslog\");\n\n\n/*****************\n ** WEBPACK FOOTER\n ** external \"nslog\"\n ** module id = 141\n ** module chunks = 0\n **/","module.exports = require(\"open\");\n\n\n/*****************\n ** WEBPACK FOOTER\n ** external \"open\"\n ** module id = 142\n ** module chunks = 0\n **/","module.exports = require(\"sax\");\n\n\n/*****************\n ** WEBPACK FOOTER\n ** external \"sax\"\n ** module id = 143\n ** module chunks = 0\n **/","module.exports = require(\"socket.io\");\n\n\n/*****************\n ** WEBPACK FOOTER\n ** external \"socket.io\"\n ** module id = 144\n ** module chunks = 0\n **/","module.exports = require(\"stream\");\n\n\n/*****************\n ** WEBPACK FOOTER\n ** external \"stream\"\n ** module id = 145\n ** module chunks = 0\n **/","module.exports = require(\"strip-json-comments\");\n\n\n/*****************\n ** WEBPACK FOOTER\n ** external \"strip-json-comments\"\n ** module id = 146\n ** module chunks = 0\n **/","module.exports = require(\"xml2js\");\n\n\n/*****************\n ** WEBPACK FOOTER\n ** external \"xml2js\"\n ** module id = 147\n ** module chunks = 0\n **/","module.exports = require(\"xmldoc\");\n\n\n/*****************\n ** WEBPACK FOOTER\n ** external \"xmldoc\"\n ** module id = 148\n ** module chunks = 0\n **/"],"sourceRoot":""}
{"version":3,"sources":["containers/Views.js"],"names":["actions","Views","dispatch","props","views","map","view","index","select","state"],"mappings":";;;;;;;;;;AAAA;;;;AACA;;;;AACA;;AACA;;;;AACA;;AACA;;IAAYA,O;;;;;;;;;;;;IAENC,K;;;;;;;;;;;6BAEK;AAAA,UACCC,QADD,GACc,KAAKC,KADnB,CACCD,QADD;;AAEP,UAAME,QAAQ,KAAKD,KAAL,CAAWC,KAAX,CAAiBC,GAAjB,CAAqB,UAACC,IAAD,EAAOC,KAAP,EAAiB;AAClD,eACE,4DAAS,KAAKA,KAAd,IAAyB,+BAAmBP,OAAnB,EAA4BE,QAA5B,CAAzB,IAAgE,MAAMI,IAAtE,IADF;AAGD,OAJa,CAAd;AAKA,aACE;AAAA;AAAA,UAAK,IAAG,OAAR;AACIF;AADJ,OADF;AAKD;;;;;;AAGH,SAASI,MAAT,CAAgBC,KAAhB,EAAuB;AACrB,SAAOA,KAAP;AACD;;kBAEc,yBAAQD,MAAR,EAAgBP,KAAhB,C","file":"containers/Views.js","sourcesContent":["import React, { Component } from 'react';\nimport ReactDOM from 'react-dom';\nimport { connect } from 'react-redux';\nimport WebView from './WebView';\nimport { bindActionCreators } from 'redux';\nimport * as actions from '../actions/actions';\n\nclass Views extends Component {\n\n  render() {\n    const { dispatch } = this.props;\n    const views = this.props.views.map((view, index) => {\n      return (\n        <WebView key={index} {...bindActionCreators(actions, dispatch)} view={view}/>\n      );\n    });\n    return (\n      <div id=\"views\">\n        { views }\n      </div>\n    );\n  }\n}\n\nfunction select(state) {\n  return state;\n}\n\nexport default connect(select)(Views);\n"],"sourceRoot":"/source/"}
# Test against this version of Node.js
environment:
  matrix:
  - nodejs_version: "0.12"

platform:
  - x86
  - x64

install:
  - python -V
  - ps: Install-Product node $env:nodejs_version
  - if exist %ProgramFiles%\nodejs\npm del %ProgramFiles%\nodejs\npm
  - if exist %ProgramFiles%\nodejs\npm.cmd del %ProgramFiles%\nodejs\npm.cmd
  - npm -g install npm@3
  - set PATH=%APPDATA%\npm;%PATH%
  - node --version && npm --version
  - set PATH=C:\Program Files (x86)\MSBuild\14.0\Bin;%PATH%
  - set PATH=C:\Program Files\MSBuild\14.0\Bin;%PATH%
  - cd app
  - npm install
  - dir
  - dir node_modules
  - if exist C:\projects\mavensmate-app\app\node_modules\npm del C:\projects\mavensmate-app\app\node_modules\npm /F /Q  
  - npm install --prefix C:\projects\mavensmate-app\app npm@3
  - npm install electron-builder -g
  - npm install electron-packager -g
  - npm cache clean
  - .\node_modules\.bin\electron-rebuild
  - npm run pack:win
  - dir ..\dist\win
  - dir ..\dist\win\win32
  - dir ..\dist\win\win64
  - cd ..\dist\win\win64
  - 7z a tzip MavensMate Setup.exe
  - dir
  - cd ..\dist\win\win32
  - 7z a tzip MavensMate Setup.exe
  - dir
  - cd ..\..\..\
  - dir

# # Don't actually build.
# build: off

# cache:
#   - example\cache

deploy:
   # Deploy to GitHub Releases
  - provider: GitHub
    artifact: .\dist\win\win64\MavensMate Setup.zip           
    draft: false
    prerelease: true
    on:
      branch: master                # release from master branch only
      appveyor_repo_tag: true       # deploy on tag push only
  - provider: GitHub
    artifact: .\dist\win\win64\MavensMate Setup.exe          
    draft: false
    prerelease: true
    on:
      branch: master                # release from master branch only
      appveyor_repo_tag: true       # deploy on tag push only